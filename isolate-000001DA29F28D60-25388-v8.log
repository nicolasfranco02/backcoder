v8-version,9,4,146,24,-node.21,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff633e10000,0x7ff637b32000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffa19a10000,0x7ffa19c24000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffa19160000,0x7ffa19222000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffa16f60000,0x7ffa172fd000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffa17810000,0x7ffa17881000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffa18ae0000,0x7ffa18bf5000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffa19460000,0x7ffa19468000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffa19470000,0x7ffa1951e000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffa19920000,0x7ffa199c7000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffa18a20000,0x7ffa18ac4000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffa18870000,0x7ffa18a1a000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffa17550000,0x7ffa17576000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffa17d00000,0x7ffa17d29000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffa0f800000,0x7ffa0fa2e000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffa17430000,0x7ffa17542000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffa16e40000,0x7ffa16f51000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffa17600000,0x7ffa1769a000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffa15990000,0x7ffa159bd000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffa17970000,0x7ffa17cfa000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffa176a0000,0x7ffa17806000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\bcrypt.dll,0x7ffa16800000,0x7ffa16828000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffa0fba0000,0x7ffa0fbd4000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffa164f0000,0x7ffa16518000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffa16660000,0x7ffa1666c000,0
shared-library,C:\\WINDOWS\\System32\\OLEAUT32.dll,0x7ffa17890000,0x7ffa17967000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffa198e0000,0x7ffa19912000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ffa16200000,0x7ffa1624d000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ffa16160000,0x7ffa16173000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffa143f0000,0x7ffa1449b000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffa163e0000,0x7ffa16449000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ffa15e80000,0x7ffa15e98000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffa17580000,0x7ffa175fb000,0
shared-library-end
profiler,begin,1000
tick,0x7ff63471ec33,1614612,0,0x0,6
tick,0x7ff63417a87a,1624664,0,0x0,6
new,CodeRange,0x1da2df80000,0
new,MemoryChunk,0x28d55dc0000,262144
new,MemoryChunk,0x8e0e3c0000,262144
new,MemoryChunk,0x2538c440000,262144
new,MemoryChunk,0x1fbf1300000,262144
new,MemoryChunk,0x3267ba00000,262144
heap-capacity,1031072
heap-available,2093532992
new,MemoryChunk,0x3de43e40000,262144
new,MemoryChunk,0x2e5b74c0000,262144
new,MemoryChunk,0x1624ae00000,262144
new,MemoryChunk,0x3559fe80000,262144
new,MemoryChunk,0x1c24db80000,262144
new,MemoryChunk,0x31b3ef40000,262144
new,MemoryChunk,0x17a246c0000,262144
new,MemoryChunk,0x1da2dfc0000,262144
new,MemoryChunk,0x3595c280000,262144
tick,0x7ff63451b981,1638897,0,0x0,6
code-creation,Builtin,2,1640857,0x7ff6349803c4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,1640889,0x7ff634980924,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,1640897,0x7ff634980b04,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,1640904,0x7ff634980d84,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,1640911,0x7ff634980e64,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,1640919,0x7ff634980fe4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,1640977,0x7ff634981084,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,1640999,0x7ff6349810c4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1641068,0x7ff634981244,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1641129,0x7ff634981404,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,1641143,0x7ff6349815c4,104,CallBoundFunction
code-creation,Builtin,2,1641154,0x7ff634981644,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1641166,0x7ff6349816c4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1641177,0x7ff634981744,120,Call_ReceiverIsAny
code-creation,Builtin,2,1641188,0x7ff6349817c4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1641201,0x7ff634981bc4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,1641212,0x7ff634981fc4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1641260,0x7ff634982404,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,1641274,0x7ff634982844,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,1641285,0x7ff634982c84,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,1641322,0x7ff6349830c4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,1641341,0x7ff634983484,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,1641355,0x7ff634983844,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,1641364,0x7ff634983c04,736,CallProxy
code-creation,Builtin,2,1641374,0x7ff634983f04,148,CallVarargs
code-creation,Builtin,2,1641384,0x7ff634983fa4,944,CallWithSpread
code-creation,Builtin,2,1641414,0x7ff634984364,1956,CallWithSpread_Baseline
code-creation,Builtin,2,1641430,0x7ff634984b24,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,1641441,0x7ff6349852c4,864,CallWithArrayLike
code-creation,Builtin,2,1641450,0x7ff634985644,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,1641457,0x7ff634985d64,156,CallForwardVarargs
code-creation,Builtin,2,1641491,0x7ff634985e04,156,CallFunctionForwardVarargs
code-creation,Builtin,2,1641504,0x7ff634985ea4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,1641514,0x7ff634985f44,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,1641522,0x7ff634986044,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,1641531,0x7ff634986184,28,ConstructFunction
code-creation,Builtin,2,1641560,0x7ff6349861a4,104,ConstructBoundFunction
code-creation,Builtin,2,1641572,0x7ff634986224,28,ConstructedNonConstructable
code-creation,Builtin,2,1641583,0x7ff634986244,100,Construct
code-creation,Builtin,2,1641622,0x7ff6349862c4,148,ConstructVarargs
code-creation,Builtin,2,1641643,0x7ff634986364,968,ConstructWithSpread
code-creation,Builtin,2,1641672,0x7ff634986744,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,1641686,0x7ff634986e24,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,1641698,0x7ff634987524,924,ConstructWithArrayLike
code-creation,Builtin,2,1641709,0x7ff6349878c4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,1641722,0x7ff634987f44,196,ConstructForwardVarargs
code-creation,Builtin,2,1641751,0x7ff634988024,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,1641764,0x7ff634988104,804,Construct_Baseline
code-creation,Builtin,2,1641775,0x7ff634988444,820,Construct_WithFeedback
code-creation,Builtin,2,1641786,0x7ff634988784,476,JSConstructStubGeneric
code-creation,Builtin,2,1641818,0x7ff634988964,376,JSBuiltinsConstructStub
code-creation,Builtin,2,1641830,0x7ff634988ae4,676,FastNewObject
code-creation,Builtin,2,1641841,0x7ff634988da4,292,FastNewClosure
code-creation,Builtin,2,1641866,0x7ff634988ee4,720,ConstructProxy
code-creation,Builtin,2,1641877,0x7ff6349891c4,360,JSEntry
code-creation,Builtin,2,1641888,0x7ff634989344,360,JSConstructEntry
code-creation,Builtin,2,1641899,0x7ff6349894c4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,1641933,0x7ff634989644,96,JSEntryTrampoline
code-creation,Builtin,2,1641949,0x7ff6349896c4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,1641960,0x7ff634989744,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,1641987,0x7ff634989864,1116,StringCodePointAt
code-creation,Builtin,2,1642054,0x7ff634989cc4,1552,StringFromCodePointAt
code-creation,Builtin,2,1642086,0x7ff63498a2e4,544,StringEqual
code-creation,Builtin,2,1642102,0x7ff63498a524,276,StringGreaterThan
code-creation,Builtin,2,1642113,0x7ff63498a644,276,StringGreaterThanOrEqual
code-creation,Builtin,2,1642204,0x7ff63498a764,276,StringLessThan
code-creation,Builtin,2,1642218,0x7ff63498a884,276,StringLessThanOrEqual
code-creation,Builtin,2,1642229,0x7ff63498a9a4,2492,StringSubstring
code-creation,Builtin,2,1642240,0x7ff63498b364,80,OrderedHashTableHealIndex
code-creation,Builtin,2,1642284,0x7ff63498b3c4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,1642305,0x7ff63498b864,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,1642317,0x7ff63498b8c4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,1642357,0x7ff63498b924,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,1642415,0x7ff63498b984,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,1642446,0x7ff63498b9e4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,1642461,0x7ff63498ba44,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,1642472,0x7ff63498baa4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,1642481,0x7ff63498bb04,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,1642491,0x7ff63498bbe4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,1642501,0x7ff63498bc24,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,1642531,0x7ff63498be84,56,BaselineOnStackReplacement
code-creation,Builtin,2,1642548,0x7ff63498bec4,84,BaselineLeaveFrame
code-creation,Builtin,2,1642557,0x7ff63498bf24,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,1642567,0x7ff63498c004,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,1642578,0x7ff63498c104,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,1642590,0x7ff63498c1e4,1004,CompileLazy
code-creation,Builtin,2,1642601,0x7ff63498c5e4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,1642635,0x7ff63498c644,252,InstantiateAsmJs
code-creation,Builtin,2,1642646,0x7ff63498c744,32,NotifyDeoptimized
code-creation,Builtin,2,1642653,0x7ff63498c784,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,1642661,0x7ff63498caa4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,1642693,0x7ff63498cdc4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,1642705,0x7ff63498d0e4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,1642712,0x7ff63498d404,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,1642719,0x7ff63498d444,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,1642726,0x7ff63498d484,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,1642754,0x7ff63498d4c4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,1642791,0x7ff63498d524,288,CallApiCallback
code-creation,Builtin,2,1642826,0x7ff63498d664,268,CallApiGetter
code-creation,Builtin,2,1642837,0x7ff63498d784,12,HandleApiCall
code-creation,Builtin,2,1642847,0x7ff63498d7a4,12,HandleApiCallAsFunction
code-creation,Builtin,2,1642856,0x7ff63498d7c4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,1642863,0x7ff63498d7e4,64,AllocateInYoungGeneration
code-creation,Builtin,2,1642873,0x7ff63498d844,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,1642900,0x7ff63498d884,64,AllocateInOldGeneration
code-creation,Builtin,2,1642911,0x7ff63498d8e4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,1642918,0x7ff63498d924,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,1642925,0x7ff63498dae4,496,GrowFastDoubleElements
code-creation,Builtin,2,1642933,0x7ff63498dce4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,1642959,0x7ff63498de84,388,DebugBreakTrampoline
code-creation,Builtin,2,1642970,0x7ff63498e024,180,ToNumber
code-creation,Builtin,2,1642977,0x7ff63498e0e4,292,ToNumber_Baseline
code-creation,Builtin,2,1642984,0x7ff63498e224,360,ToNumeric_Baseline
code-creation,Builtin,2,1642991,0x7ff63498e3a4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,1643021,0x7ff63498e424,212,ToNumberConvertBigInt
code-creation,Builtin,2,1643035,0x7ff63498e504,132,Typeof
code-creation,Builtin,2,1643045,0x7ff63498e5a4,104,BigIntToI64
code-creation,Builtin,2,1643051,0x7ff63498e624,4,BigIntToI32Pair
code-creation,Builtin,2,1643058,0x7ff63498e644,232,I64ToBigInt
code-creation,Builtin,2,1643065,0x7ff63498e744,4,I32PairToBigInt
code-creation,Builtin,2,1643071,0x7ff63498e764,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,1643081,0x7ff63498e7e4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,1643116,0x7ff63498f884,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,1643135,0x7ff634993684,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,1643147,0x7ff6349937a4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,1643158,0x7ff6349937e4,12,LoadIC_StringLength
code-creation,Builtin,2,1643169,0x7ff634993804,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,1643198,0x7ff634993824,3056,LoadIC_NoFeedback
code-creation,Builtin,2,1643211,0x7ff634994424,32,StoreGlobalIC_Slow
code-creation,Builtin,2,1643223,0x7ff634994464,7332,StoreIC_NoFeedback
code-creation,Builtin,2,1643234,0x7ff634996124,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,1643263,0x7ff6349961e4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,1643276,0x7ff634996244,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,1643289,0x7ff634996344,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1643317,0x7ff634996444,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,1643331,0x7ff634996544,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,1643345,0x7ff634996644,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,1643368,0x7ff634999e64,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1643381,0x7ff63499c404,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,1643415,0x7ff63499f844,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,1643449,0x7ff6349a1024,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,1643461,0x7ff6349a3164,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,1643469,0x7ff6349a7d24,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,1643477,0x7ff6349a9e64,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,1643507,0x7ff6349ac984,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,1643518,0x7ff6349acca4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,1643525,0x7ff6349acd64,72,HasIndexedInterceptorIC
code-creation,Builtin,2,1643532,0x7ff6349acdc4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,1643565,0x7ff6349ace44,224,DynamicCheckMaps
code-creation,Builtin,2,1643581,0x7ff6349acf44,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,1643592,0x7ff6349acfc4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,1643599,0x7ff6349ad084,152,EnqueueMicrotask
code-creation,Builtin,2,1643606,0x7ff6349ad124,8,RunMicrotasksTrampoline
code-creation,Builtin,2,1643637,0x7ff6349ad144,3476,RunMicrotasks
code-creation,Builtin,2,1643648,0x7ff6349adee4,2636,HasProperty
code-creation,Builtin,2,1643655,0x7ff6349ae944,1156,DeleteProperty
code-creation,Builtin,2,1643662,0x7ff6349aede4,1972,CopyDataProperties
code-creation,Builtin,2,1643692,0x7ff6349af5a4,9184,SetDataProperties
code-creation,Builtin,2,1643730,0x7ff6349b19a4,28,Abort
code-creation,Builtin,2,1643742,0x7ff6349b19c4,28,AbortCSAAssert
code-creation,Builtin,2,1643767,0x7ff6349b19e4,12,EmptyFunction
code-creation,Builtin,2,1643779,0x7ff6349b1a04,12,Illegal
code-creation,Builtin,2,1643789,0x7ff6349b1a24,12,StrictPoisonPillThrower
code-creation,Builtin,2,1643800,0x7ff6349b1a44,12,UnsupportedThrower
code-creation,Builtin,2,1643833,0x7ff6349b1a64,64,ReturnReceiver
code-creation,Builtin,2,1643846,0x7ff6349b1ac4,28,ArrayConstructor
code-creation,Builtin,2,1643858,0x7ff6349b1ae4,404,ArrayConstructorImpl
code-creation,Builtin,2,1643881,0x7ff6349b1c84,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,1643939,0x7ff6349b1d64,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,1643957,0x7ff6349b1e44,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,1643970,0x7ff6349b1f04,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,1643983,0x7ff6349b1fc4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,1644009,0x7ff6349b2084,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,1644027,0x7ff6349b2144,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,1644057,0x7ff6349b2204,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,1644087,0x7ff6349b22c4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,1644101,0x7ff6349b24e4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,1644114,0x7ff6349b26e4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,1644141,0x7ff6349b28a4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,1644156,0x7ff6349b2a44,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,1644164,0x7ff6349b2c04,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,1644172,0x7ff6349b2da4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,1644181,0x7ff6349b2f84,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,1644189,0x7ff6349b3124,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,1644219,0x7ff6349b3184,12,ArrayConcat
code-creation,Builtin,2,1644230,0x7ff6349b31a4,12,ArrayPrototypeFill
code-creation,Builtin,2,1644237,0x7ff6349b31c4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,1644243,0x7ff6349b3584,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,1644254,0x7ff6349b3624,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,1644263,0x7ff6349b3704,548,ArrayIncludes
code-creation,Builtin,2,1644273,0x7ff6349b3944,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,1644305,0x7ff6349b3ca4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,1644317,0x7ff6349b3d24,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,1644327,0x7ff6349b3da4,552,ArrayIndexOf
code-creation,Builtin,2,1644337,0x7ff6349b3fe4,12,ArrayPop
code-creation,Builtin,2,1644377,0x7ff6349b4004,616,ArrayPrototypePop
code-creation,Builtin,2,1644413,0x7ff6349b4284,12,ArrayPush
code-creation,Builtin,2,1644442,0x7ff6349b42a4,2424,ArrayPrototypePush
code-creation,Builtin,2,1644454,0x7ff6349b4c24,12,ArrayShift
code-creation,Builtin,2,1644464,0x7ff6349b4c44,12,ArrayUnshift
code-creation,Builtin,2,1645322,0x7ff6349b4c64,956,CloneFastJSArray
code-creation,Builtin,2,1646691,0x7ff6349b5024,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,1646967,0x7ff6349b58c4,976,ExtractFastJSArray
code-creation,Builtin,2,1646985,0x7ff6349b5ca4,260,ArrayPrototypeEntries
code-creation,Builtin,2,1646996,0x7ff6349b5dc4,248,ArrayPrototypeKeys
code-creation,Builtin,2,1647005,0x7ff6349b5ec4,260,ArrayPrototypeValues
code-creation,Builtin,2,1647015,0x7ff6349b5fe4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,1647024,0x7ff6349b7144,4168,FlattenIntoArray
code-creation,Builtin,2,1647034,0x7ff6349b81a4,4172,FlatMapIntoArray
code-creation,Builtin,2,1647500,0x7ff6349b9204,372,ArrayPrototypeFlat
code-creation,Builtin,2,1647523,0x7ff6349b9384,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,1647533,0x7ff6349b9544,12,ArrayBufferConstructor
code-creation,Builtin,2,1647543,0x7ff6349b9564,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,1647553,0x7ff6349b9584,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,1647562,0x7ff6349b95a4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,1647571,0x7ff6349b95c4,804,AsyncFunctionEnter
code-creation,Builtin,2,1647588,0x7ff6349b9904,132,AsyncFunctionReject
code-creation,Builtin,2,1647600,0x7ff6349b99a4,128,AsyncFunctionResolve
code-creation,Builtin,2,1647610,0x7ff6349b9a44,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,1647619,0x7ff6349b9a64,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,1647630,0x7ff6349ba564,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,1647640,0x7ff6349bb064,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,1647651,0x7ff6349bb124,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,1647753,0x7ff6349bb1e4,12,BigIntConstructor
code-creation,Builtin,2,1647817,0x7ff6349bb204,12,BigIntAsUintN
code-creation,Builtin,2,1647963,0x7ff6349bb224,12,BigIntAsIntN
code-creation,Builtin,2,1647976,0x7ff6349bb244,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,1647987,0x7ff6349bb264,12,BigIntPrototypeToString
code-creation,Builtin,2,1647997,0x7ff6349bb284,12,BigIntPrototypeValueOf
code-creation,Builtin,2,1648143,0x7ff6349bb2a4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,1648162,0x7ff6349bb2c4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,1648175,0x7ff6349bb2e4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,1648185,0x7ff6349bb304,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,1648194,0x7ff6349bb324,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,1648258,0x7ff6349bb344,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,1648270,0x7ff6349bb364,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,1648281,0x7ff6349bb384,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,1648292,0x7ff6349bb3a4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,1648303,0x7ff6349bb3c4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,1648315,0x7ff6349bb3e4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,1648326,0x7ff6349bb404,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,1648338,0x7ff6349bb424,12,CallSitePrototypeGetThis
code-creation,Builtin,2,1648362,0x7ff6349bb444,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,1648742,0x7ff6349bb464,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,1648760,0x7ff6349bb484,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,1648842,0x7ff6349bb4a4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,1648938,0x7ff6349bb4c4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,1648999,0x7ff6349bb4e4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,1650829,0x7ff6349bb504,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,1650860,0x7ff6349bb524,12,CallSitePrototypeToString
code-creation,Builtin,2,1650871,0x7ff6349bb544,12,ConsoleDebug
code-creation,Builtin,2,1650880,0x7ff6349bb564,12,ConsoleError
code-creation,Builtin,2,1650890,0x7ff6349bb584,12,ConsoleInfo
code-creation,Builtin,2,1650899,0x7ff6349bb5a4,12,ConsoleLog
code-creation,Builtin,2,1650908,0x7ff6349bb5c4,12,ConsoleWarn
code-creation,Builtin,2,1650918,0x7ff6349bb5e4,12,ConsoleDir
code-creation,Builtin,2,1651060,0x7ff6349bb604,12,ConsoleDirXml
code-creation,Builtin,2,1651306,0x7ff6349bb624,12,ConsoleTable
code-creation,Builtin,2,1651330,0x7ff6349bb644,12,ConsoleTrace
code-creation,Builtin,2,1651606,0x7ff6349bb664,12,ConsoleGroup
code-creation,Builtin,2,1651626,0x7ff6349bb684,12,ConsoleGroupCollapsed
code-creation,Builtin,2,1651637,0x7ff6349bb6a4,12,ConsoleGroupEnd
code-creation,Builtin,2,1651649,0x7ff6349bb6c4,12,ConsoleClear
code-creation,Builtin,2,1651659,0x7ff6349bb6e4,12,ConsoleCount
code-creation,Builtin,2,1651669,0x7ff6349bb704,12,ConsoleCountReset
code-creation,Builtin,2,1651758,0x7ff6349bb724,12,ConsoleAssert
code-creation,Builtin,2,1651830,0x7ff6349bb744,12,ConsoleProfile
code-creation,Builtin,2,1652050,0x7ff6349bb764,12,ConsoleProfileEnd
code-creation,Builtin,2,1652080,0x7ff6349bb784,12,ConsoleTime
code-creation,Builtin,2,1652092,0x7ff6349bb7a4,12,ConsoleTimeLog
code-creation,Builtin,2,1652102,0x7ff6349bb7c4,12,ConsoleTimeEnd
code-creation,Builtin,2,1652114,0x7ff6349bb7e4,12,ConsoleTimeStamp
code-creation,Builtin,2,1652131,0x7ff6349bb804,12,ConsoleContext
code-creation,Builtin,2,1652145,0x7ff6349bb824,12,DataViewConstructor
code-creation,Builtin,2,1652156,0x7ff6349bb844,12,DateConstructor
code-creation,Builtin,2,1652167,0x7ff6349bb864,216,DatePrototypeGetDate
code-creation,Builtin,2,1652207,0x7ff6349bb944,216,DatePrototypeGetDay
code-creation,Builtin,2,1652238,0x7ff6349bba24,216,DatePrototypeGetFullYear
code-creation,Builtin,2,1652253,0x7ff6349bbb04,216,DatePrototypeGetHours
code-creation,Builtin,2,1652263,0x7ff6349bbbe4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,1652272,0x7ff6349bbcc4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,1652282,0x7ff6349bbda4,216,DatePrototypeGetMonth
code-creation,Builtin,2,1652292,0x7ff6349bbe84,216,DatePrototypeGetSeconds
code-creation,Builtin,2,1652302,0x7ff6349bbf64,124,DatePrototypeGetTime
code-creation,Builtin,2,1652312,0x7ff6349bbfe4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,1652323,0x7ff6349bc0c4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,1652333,0x7ff6349bc1a4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,1652421,0x7ff6349bc284,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,1652483,0x7ff6349bc364,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,1652502,0x7ff6349bc444,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,1652664,0x7ff6349bc524,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,1652683,0x7ff6349bc604,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,1652706,0x7ff6349bc6e4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,1652717,0x7ff6349bc7c4,124,DatePrototypeValueOf
code-creation,Builtin,2,1652739,0x7ff6349bc844,352,DatePrototypeToPrimitive
code-creation,Builtin,2,1652751,0x7ff6349bc9c4,12,DatePrototypeGetYear
code-creation,Builtin,2,1652762,0x7ff6349bc9e4,12,DatePrototypeSetYear
code-creation,Builtin,2,1652774,0x7ff6349bca04,12,DateNow
code-creation,Builtin,2,1652785,0x7ff6349bca24,12,DateParse
code-creation,Builtin,2,1652795,0x7ff6349bca44,12,DatePrototypeSetDate
code-creation,Builtin,2,1652807,0x7ff6349bca64,12,DatePrototypeSetFullYear
code-creation,Builtin,2,1652818,0x7ff6349bca84,12,DatePrototypeSetHours
code-creation,Builtin,2,1652829,0x7ff6349bcaa4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,1652839,0x7ff6349bcac4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,1652849,0x7ff6349bcae4,12,DatePrototypeSetMonth
code-creation,Builtin,2,1652860,0x7ff6349bcb04,12,DatePrototypeSetSeconds
code-creation,Builtin,2,1652870,0x7ff6349bcb24,12,DatePrototypeSetTime
code-creation,Builtin,2,1652880,0x7ff6349bcb44,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,1652890,0x7ff6349bcb64,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,1652901,0x7ff6349bcb84,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,1652911,0x7ff6349bcba4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,1652920,0x7ff6349bcbc4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,1652930,0x7ff6349bcbe4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,1653057,0x7ff6349bcc04,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,1653122,0x7ff6349bcc24,12,DatePrototypeToDateString
code-creation,Builtin,2,1653138,0x7ff6349bcc44,12,DatePrototypeToISOString
code-creation,Builtin,2,1653153,0x7ff6349bcc64,12,DatePrototypeToUTCString
code-creation,Builtin,2,1653213,0x7ff6349bcc84,12,DatePrototypeToString
code-creation,Builtin,2,1653226,0x7ff6349bcca4,12,DatePrototypeToTimeString
code-creation,Builtin,2,1653239,0x7ff6349bccc4,12,DatePrototypeToJson
code-creation,Builtin,2,1653291,0x7ff6349bcce4,12,DateUTC
code-creation,Builtin,2,1653307,0x7ff6349bcd04,12,ErrorConstructor
code-creation,Builtin,2,1653365,0x7ff6349bcd24,12,ErrorCaptureStackTrace
code-creation,Builtin,2,1653386,0x7ff6349bcd44,12,ErrorPrototypeToString
code-creation,Builtin,2,1653397,0x7ff6349bcd64,12,FunctionConstructor
code-creation,Builtin,2,1653463,0x7ff6349bcd84,68,FunctionPrototypeApply
code-creation,Builtin,2,1653536,0x7ff6349bcde4,12,FunctionPrototypeBind
code-creation,Builtin,2,1653552,0x7ff6349bce04,32,FunctionPrototypeCall
code-creation,Builtin,2,1653890,0x7ff6349bce44,12,FunctionPrototypeToString
code-creation,Builtin,2,1653912,0x7ff6349bce64,192,CreateIterResultObject
code-creation,Builtin,2,1653924,0x7ff6349bcf44,788,CreateGeneratorObject
code-creation,Builtin,2,1653933,0x7ff6349bd264,12,GeneratorFunctionConstructor
code-creation,Builtin,2,1653944,0x7ff6349bd284,412,GeneratorPrototypeNext
code-creation,Builtin,2,1653967,0x7ff6349bd424,420,GeneratorPrototypeReturn
code-creation,Builtin,2,1653978,0x7ff6349bd5e4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,1653988,0x7ff6349bd7a4,12,AsyncFunctionConstructor
code-creation,Builtin,2,1653995,0x7ff6349bd7c4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,1654002,0x7ff6349bd944,88,ResumeGeneratorBaseline
code-creation,Builtin,2,1654009,0x7ff6349bd9a4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,1654016,0x7ff6349bd9e4,12,GlobalDecodeURI
code-creation,Builtin,2,1654023,0x7ff6349bda04,12,GlobalDecodeURIComponent
code-creation,Builtin,2,1654030,0x7ff6349bda24,12,GlobalEncodeURI
code-creation,Builtin,2,1654036,0x7ff6349bda44,12,GlobalEncodeURIComponent
code-creation,Builtin,2,1654042,0x7ff6349bda64,12,GlobalEscape
code-creation,Builtin,2,1654050,0x7ff6349bda84,12,GlobalUnescape
code-creation,Builtin,2,1654057,0x7ff6349bdaa4,12,GlobalEval
code-creation,Builtin,2,1654063,0x7ff6349bdac4,132,GlobalIsFinite
code-creation,Builtin,2,1654069,0x7ff6349bdb64,124,GlobalIsNaN
code-creation,Builtin,2,1654075,0x7ff6349bdbe4,12,JsonParse
code-creation,Builtin,2,1654081,0x7ff6349bdc04,12,JsonStringify
code-creation,Builtin,2,1654088,0x7ff6349bdc24,4608,LoadIC
code-creation,Builtin,2,1654097,0x7ff6349bee44,4296,LoadIC_Megamorphic
code-creation,Builtin,2,1654105,0x7ff6349bff24,4520,LoadIC_Noninlined
code-creation,Builtin,2,1654177,0x7ff6349c10e4,44,LoadICTrampoline
code-creation,Builtin,2,1654195,0x7ff6349c1124,24,LoadICBaseline
code-creation,Builtin,2,1654253,0x7ff6349c1144,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,1654266,0x7ff6349c1184,7376,LoadSuperIC
code-creation,Builtin,2,1654273,0x7ff6349c2e64,24,LoadSuperICBaseline
code-creation,Builtin,2,1654280,0x7ff6349c2e84,8148,KeyedLoadIC
code-creation,Builtin,2,1654289,0x7ff6349c4e64,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,1654331,0x7ff6349c81a4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,1654346,0x7ff6349c81e4,24,KeyedLoadICBaseline
code-creation,Builtin,2,1654353,0x7ff6349c8204,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,1654361,0x7ff6349c8244,5104,StoreGlobalIC
code-creation,Builtin,2,1654402,0x7ff6349c9644,44,StoreGlobalICTrampoline
code-creation,Builtin,2,1654414,0x7ff6349c9684,24,StoreGlobalICBaseline
code-creation,Builtin,2,1654422,0x7ff6349c96a4,5340,StoreIC
code-creation,Builtin,2,1654429,0x7ff6349cab84,44,StoreICTrampoline
code-creation,Builtin,2,1654436,0x7ff6349cabc4,24,StoreICBaseline
code-creation,Builtin,2,1654443,0x7ff6349cabe4,5780,KeyedStoreIC
code-creation,Builtin,2,1654449,0x7ff6349cc284,44,KeyedStoreICTrampoline
tick,0x7ffa19a3721f,1654546,0,0x0,6
code-creation,Builtin,2,1654566,0x7ff6349cc2c4,24,KeyedStoreICBaseline
code-creation,Builtin,2,1654604,0x7ff6349cc2e4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,1654619,0x7ff6349cc484,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,1654668,0x7ff6349cc4a4,140,LookupContextBaseline
code-creation,Builtin,2,1654711,0x7ff6349cc544,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,1654730,0x7ff6349cc5e4,3244,LoadGlobalIC
code-creation,Builtin,2,1654741,0x7ff6349cd2a4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,1654787,0x7ff6349cdf44,44,LoadGlobalICTrampoline
code-creation,Builtin,2,1654802,0x7ff6349cdf84,24,LoadGlobalICBaseline
code-creation,Builtin,2,1654814,0x7ff6349cdfa4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,1654850,0x7ff6349cdfe4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,1654864,0x7ff6349ce004,140,LookupGlobalICBaseline
code-creation,Builtin,2,1654876,0x7ff6349ce0a4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,1654915,0x7ff6349ce144,2064,CloneObjectIC
code-creation,Builtin,2,1654981,0x7ff6349ce964,24,CloneObjectICBaseline
code-creation,Builtin,2,1655030,0x7ff6349ce984,1988,CloneObjectIC_Slow
code-creation,Builtin,2,1655086,0x7ff6349cf164,2756,KeyedHasIC
code-creation,Builtin,2,1655099,0x7ff6349cfc44,24,KeyedHasICBaseline
code-creation,Builtin,2,1655142,0x7ff6349cfc64,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,1655159,0x7ff6349d06c4,1436,IterableToList
code-creation,Builtin,2,1655170,0x7ff6349d0c64,1240,IterableToFixedArray
code-creation,Builtin,2,1655216,0x7ff6349d1144,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,1655232,0x7ff6349d1444,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,1655269,0x7ff6349d1484,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,1655285,0x7ff6349d1504,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,1655297,0x7ff6349d18e4,1616,StringListFromIterable
code-creation,Builtin,2,1655335,0x7ff6349d1f44,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,1655351,0x7ff6349d2424,4156,MapConstructor
code-creation,Builtin,2,1655361,0x7ff6349d3464,1996,MapPrototypeSet
code-creation,Builtin,2,1655401,0x7ff6349d3c44,1524,MapPrototypeDelete
code-creation,Builtin,2,1655443,0x7ff6349d4244,204,MapPrototypeGet
code-creation,Builtin,2,1655456,0x7ff6349d4324,164,MapPrototypeHas
code-creation,Builtin,2,1655467,0x7ff6349d43e4,12,MapPrototypeClear
code-creation,Builtin,2,1655505,0x7ff6349d4404,284,MapPrototypeEntries
code-creation,Builtin,2,1655519,0x7ff6349d4524,144,MapPrototypeGetSize
code-creation,Builtin,2,1655530,0x7ff6349d45c4,492,MapPrototypeForEach
code-creation,Builtin,2,1655540,0x7ff6349d47c4,284,MapPrototypeKeys
code-creation,Builtin,2,1655583,0x7ff6349d48e4,284,MapPrototypeValues
code-creation,Builtin,2,1655597,0x7ff6349d4a04,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,1655608,0x7ff6349d4e24,1168,MapIteratorToList
code-creation,Builtin,2,1655651,0x7ff6349d52c4,12,NumberPrototypeToExponential
code-creation,Builtin,2,1655665,0x7ff6349d52e4,12,NumberPrototypeToFixed
code-creation,Builtin,2,1655706,0x7ff6349d5304,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,1655755,0x7ff6349d5324,12,NumberPrototypeToPrecision
code-creation,Builtin,2,1655768,0x7ff6349d5344,328,SameValue
code-creation,Builtin,2,1655779,0x7ff6349d54a4,204,SameValueNumbersOnly
code-creation,Builtin,2,1655790,0x7ff6349d5584,792,Add_Baseline
code-creation,Builtin,2,1655828,0x7ff6349d58a4,828,Subtract_Baseline
code-creation,Builtin,2,1655840,0x7ff6349d5be4,808,Multiply_Baseline
code-creation,Builtin,2,1655856,0x7ff6349d5f24,832,Divide_Baseline
code-creation,Builtin,2,1655868,0x7ff6349d6284,764,Modulus_Baseline
code-creation,Builtin,2,1655933,0x7ff6349d6584,808,Exponentiate_Baseline
code-creation,Builtin,2,1655983,0x7ff6349d68c4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,1656044,0x7ff6349d6ba4,700,BitwiseOr_Baseline
code-creation,Builtin,2,1656104,0x7ff6349d6e64,708,BitwiseXor_Baseline
code-creation,Builtin,2,1656119,0x7ff6349d7144,720,ShiftLeft_Baseline
code-creation,Builtin,2,1656187,0x7ff6349d7424,720,ShiftRight_Baseline
code-creation,Builtin,2,1656304,0x7ff6349d7704,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,1656390,0x7ff6349d7a64,720,Add_WithFeedback
code-creation,Builtin,2,1656418,0x7ff6349d7d44,780,Subtract_WithFeedback
code-creation,Builtin,2,1656429,0x7ff6349d8064,776,Multiply_WithFeedback
code-creation,Builtin,2,1656440,0x7ff6349d8384,804,Divide_WithFeedback
code-creation,Builtin,2,1656451,0x7ff6349d86c4,724,Modulus_WithFeedback
code-creation,Builtin,2,1656462,0x7ff6349d89a4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,1656472,0x7ff6349d8ca4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,1656530,0x7ff6349d8f64,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,1656612,0x7ff6349d9224,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,1656694,0x7ff6349d94e4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,1656749,0x7ff6349d97a4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,1656763,0x7ff6349d9a64,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,1656778,0x7ff6349d9da4,1696,Equal_Baseline
code-creation,Builtin,2,1656820,0x7ff6349da464,908,StrictEqual_Baseline
code-creation,Builtin,2,1656865,0x7ff6349da804,1264,LessThan_Baseline
code-creation,Builtin,2,1656906,0x7ff6349dad04,1264,GreaterThan_Baseline
code-creation,Builtin,2,1656920,0x7ff6349db204,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,1656931,0x7ff6349db704,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,1656949,0x7ff6349dbc04,1620,Equal_WithFeedback
code-creation,Builtin,2,1656991,0x7ff6349dc264,940,StrictEqual_WithFeedback
code-creation,Builtin,2,1657009,0x7ff6349dc624,1240,LessThan_WithFeedback
code-creation,Builtin,2,1657049,0x7ff6349dcb04,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,1657062,0x7ff6349dcfe4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,1657073,0x7ff6349dd4c4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,1657111,0x7ff6349dd9a4,332,BitwiseNot_Baseline
code-creation,Builtin,2,1657123,0x7ff6349ddb04,460,Decrement_Baseline
code-creation,Builtin,2,1657134,0x7ff6349ddce4,464,Increment_Baseline
code-creation,Builtin,2,1657172,0x7ff6349ddec4,488,Negate_Baseline
code-creation,Builtin,2,1657185,0x7ff6349de0c4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,1657229,0x7ff6349de204,440,Decrement_WithFeedback
code-creation,Builtin,2,1657273,0x7ff6349de3c4,444,Increment_WithFeedback
code-creation,Builtin,2,1657285,0x7ff6349de584,472,Negate_WithFeedback
code-creation,Builtin,2,1657293,0x7ff6349de764,252,ObjectAssign
code-creation,Builtin,2,1657301,0x7ff6349de864,864,ObjectCreate
code-creation,Builtin,2,1657336,0x7ff6349debe4,12,ObjectDefineGetter
code-creation,Builtin,2,1657349,0x7ff6349dec04,12,ObjectDefineProperties
code-creation,Builtin,2,1657360,0x7ff6349dec24,12,ObjectDefineProperty
code-creation,Builtin,2,1657368,0x7ff6349dec44,12,ObjectDefineSetter
code-creation,Builtin,2,1657409,0x7ff6349dec64,1516,ObjectEntries
code-creation,Builtin,2,1657420,0x7ff6349df264,12,ObjectFreeze
code-creation,Builtin,2,1657427,0x7ff6349df284,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,1657438,0x7ff6349e0884,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,1657473,0x7ff6349e08a4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,1657488,0x7ff6349e0b04,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,1657499,0x7ff6349e0b24,164,ObjectHasOwn
code-creation,Builtin,2,1657608,0x7ff6349e0be4,388,ObjectIs
code-creation,Builtin,2,1657620,0x7ff6349e0d84,12,ObjectIsFrozen
code-creation,Builtin,2,1657631,0x7ff6349e0da4,12,ObjectIsSealed
code-creation,Builtin,2,1657674,0x7ff6349e0dc4,536,ObjectKeys
code-creation,Builtin,2,1657686,0x7ff6349e0fe4,12,ObjectLookupGetter
code-creation,Builtin,2,1657697,0x7ff6349e1004,12,ObjectLookupSetter
code-creation,Builtin,2,1657707,0x7ff6349e1024,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,1657749,0x7ff6349e1924,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,1657762,0x7ff6349e1a04,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,1657774,0x7ff6349e1a24,12,ObjectPrototypeGetProto
code-creation,Builtin,2,1657811,0x7ff6349e1a44,12,ObjectPrototypeSetProto
code-creation,Builtin,2,1657824,0x7ff6349e1a64,12,ObjectSeal
code-creation,Builtin,2,1657835,0x7ff6349e1a84,1108,ObjectToString
code-creation,Builtin,2,1657873,0x7ff6349e1ee4,1284,ObjectValues
code-creation,Builtin,2,1657886,0x7ff6349e2404,280,OrdinaryHasInstance
code-creation,Builtin,2,1657931,0x7ff6349e2524,344,InstanceOf
code-creation,Builtin,2,1657987,0x7ff6349e2684,632,InstanceOf_WithFeedback
code-creation,Builtin,2,1658001,0x7ff6349e2904,648,InstanceOf_Baseline
code-creation,Builtin,2,1658012,0x7ff6349e2ba4,268,ForInEnumerate
code-creation,Builtin,2,1658047,0x7ff6349e2cc4,148,ForInPrepare
code-creation,Builtin,2,1658060,0x7ff6349e2d64,2584,ForInFilter
code-creation,Builtin,2,1658105,0x7ff6349e3784,52,ReflectApply
code-creation,Builtin,2,1658123,0x7ff6349e37c4,60,ReflectConstruct
code-creation,Builtin,2,1658135,0x7ff6349e3804,12,ReflectDefineProperty
code-creation,Builtin,2,1658179,0x7ff6349e3824,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,1658196,0x7ff6349e3844,12,ReflectOwnKeys
code-creation,Builtin,2,1658240,0x7ff6349e3864,12,ReflectSet
code-creation,Builtin,2,1658275,0x7ff6349e3884,12,RegExpCapture1Getter
code-creation,Builtin,2,1658312,0x7ff6349e38a4,12,RegExpCapture2Getter
code-creation,Builtin,2,1658325,0x7ff6349e38c4,12,RegExpCapture3Getter
code-creation,Builtin,2,1658371,0x7ff6349e38e4,12,RegExpCapture4Getter
code-creation,Builtin,2,1658384,0x7ff6349e3904,12,RegExpCapture5Getter
code-creation,Builtin,2,1658391,0x7ff6349e3924,12,RegExpCapture6Getter
code-creation,Builtin,2,1658430,0x7ff6349e3944,12,RegExpCapture7Getter
code-creation,Builtin,2,1658442,0x7ff6349e3964,12,RegExpCapture8Getter
code-creation,Builtin,2,1658450,0x7ff6349e3984,12,RegExpCapture9Getter
code-creation,Builtin,2,1658487,0x7ff6349e39a4,2212,RegExpConstructor
code-creation,Builtin,2,1658499,0x7ff6349e4264,12,RegExpInputGetter
code-creation,Builtin,2,1658507,0x7ff6349e4284,12,RegExpInputSetter
code-creation,Builtin,2,1658544,0x7ff6349e42a4,12,RegExpLastMatchGetter
code-creation,Builtin,2,1658577,0x7ff6349e42c4,12,RegExpLastParenGetter
code-creation,Builtin,2,1658591,0x7ff6349e42e4,12,RegExpLeftContextGetter
code-creation,Builtin,2,1658638,0x7ff6349e4304,908,RegExpPrototypeCompile
code-creation,Builtin,2,1658651,0x7ff6349e46a4,12,RegExpPrototypeToString
code-creation,Builtin,2,1658662,0x7ff6349e46c4,12,RegExpRightContextGetter
code-creation,Builtin,2,1658673,0x7ff6349e46e4,252,RegExpExecAtom
code-creation,Builtin,2,1658709,0x7ff6349e47e4,1040,RegExpExecInternal
code-creation,Builtin,2,1658726,0x7ff6349e4c04,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,1658738,0x7ff6349e4c24,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,1658766,0x7ff6349e4c44,2684,SetConstructor
code-creation,Builtin,2,1658782,0x7ff6349e56c4,1284,SetPrototypeHas
code-creation,Builtin,2,1658794,0x7ff6349e5be4,1736,SetPrototypeAdd
code-creation,Builtin,2,1658820,0x7ff6349e62c4,1476,SetPrototypeDelete
code-creation,Builtin,2,1658834,0x7ff6349e68a4,12,SetPrototypeClear
code-creation,Builtin,2,1658844,0x7ff6349e68c4,284,SetPrototypeEntries
code-creation,Builtin,2,1658852,0x7ff6349e69e4,144,SetPrototypeGetSize
code-creation,Builtin,2,1658858,0x7ff6349e6a84,444,SetPrototypeForEach
code-creation,Builtin,2,1658866,0x7ff6349e6c44,284,SetPrototypeValues
code-creation,Builtin,2,1658896,0x7ff6349e6d64,988,SetIteratorPrototypeNext
code-creation,Builtin,2,1658912,0x7ff6349e7144,1112,SetOrSetIteratorToList
code-creation,Builtin,2,1658924,0x7ff6349e75a4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,1658957,0x7ff6349e75c4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,1658972,0x7ff6349e75e4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,1658983,0x7ff6349e7604,1280,AtomicsLoad
code-creation,Builtin,2,1658994,0x7ff6349e7b24,1008,AtomicsStore
code-creation,Builtin,2,1659016,0x7ff6349e7f24,1704,AtomicsExchange
code-creation,Builtin,2,1659059,0x7ff6349e85e4,2092,AtomicsCompareExchange
code-creation,Builtin,2,1659098,0x7ff6349e8e24,1804,AtomicsAdd
code-creation,Builtin,2,1659112,0x7ff6349e9544,1804,AtomicsSub
code-creation,Builtin,2,1659123,0x7ff6349e9c64,1804,AtomicsAnd
code-creation,Builtin,2,1659135,0x7ff6349ea384,1804,AtomicsOr
code-creation,Builtin,2,1659171,0x7ff6349eaaa4,1804,AtomicsXor
code-creation,Builtin,2,1659183,0x7ff6349eb1c4,12,AtomicsNotify
code-creation,Builtin,2,1659193,0x7ff6349eb1e4,12,AtomicsIsLockFree
code-creation,Builtin,2,1659229,0x7ff6349eb204,12,AtomicsWait
code-creation,Builtin,2,1659241,0x7ff6349eb224,12,AtomicsWaitAsync
code-creation,Builtin,2,1659252,0x7ff6349eb244,12,StringFromCodePoint
code-creation,Builtin,2,1659287,0x7ff6349eb264,1428,StringFromCharCode
code-creation,Builtin,2,1659299,0x7ff6349eb804,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,1659309,0x7ff6349eb824,4360,StringPrototypeMatchAll
code-creation,Builtin,2,1659343,0x7ff6349ec944,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,1659355,0x7ff6349ec964,1228,StringPrototypeReplace
code-creation,Builtin,2,1659398,0x7ff6349ece44,2900,StringPrototypeSplit
code-creation,Builtin,2,1659413,0x7ff6349ed9a4,12,StringRaw
code-creation,Builtin,2,1659455,0x7ff6349ed9c4,12,SymbolConstructor
code-creation,Builtin,2,1659467,0x7ff6349ed9e4,12,SymbolFor
code-creation,Builtin,2,1659478,0x7ff6349eda04,12,SymbolKeyFor
code-creation,Builtin,2,1659519,0x7ff6349eda24,88,TypedArrayBaseConstructor
code-creation,Builtin,2,1659560,0x7ff6349eda84,256,TypedArrayConstructor
code-creation,Builtin,2,1659573,0x7ff6349edba4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,1659619,0x7ff6349edbc4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,1659639,0x7ff6349edf44,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,1659688,0x7ff6349ee0c4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,1659702,0x7ff6349ee324,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,1659753,0x7ff6349ee344,12,TypedArrayPrototypeFill
code-creation,Builtin,2,1659766,0x7ff6349ee364,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,1659782,0x7ff6349ee384,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,1659791,0x7ff6349ee3a4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,1659844,0x7ff6349ee3c4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,1659888,0x7ff6349ee3e4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,1659929,0x7ff6349ee524,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,1659942,0x7ff6349f0ee4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,1659992,0x7ff6349f1204,148,WasmCompileLazy
code-creation,Builtin,2,1660010,0x7ff6349f12a4,168,WasmDebugBreak
code-creation,Builtin,2,1660046,0x7ff6349f1364,16,WasmOnStackReplace
code-creation,Builtin,2,1660061,0x7ff6349f1384,140,WasmFloat32ToNumber
code-creation,Builtin,2,1660097,0x7ff6349f1424,152,WasmFloat64ToNumber
code-creation,Builtin,2,1660111,0x7ff6349f14c4,4,WasmI32AtomicWait32
code-creation,Builtin,2,1660163,0x7ff6349f14e4,4,WasmI64AtomicWait32
code-creation,Builtin,2,1660315,0x7ff6349f1504,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,1660333,0x7ff6349f1524,4320,WeakMapConstructor
code-creation,Builtin,2,1660369,0x7ff6349f2624,196,WeakMapLookupHashIndex
code-creation,Builtin,2,1660385,0x7ff6349f2704,220,WeakMapGet
code-creation,Builtin,2,1660392,0x7ff6349f27e4,176,WeakMapPrototypeHas
code-creation,Builtin,2,1660400,0x7ff6349f28a4,204,WeakMapPrototypeSet
code-creation,Builtin,2,1660427,0x7ff6349f2984,144,WeakMapPrototypeDelete
code-creation,Builtin,2,1660439,0x7ff6349f2a24,2876,WeakSetConstructor
code-creation,Builtin,2,1660446,0x7ff6349f3564,176,WeakSetPrototypeHas
code-creation,Builtin,2,1660453,0x7ff6349f3624,204,WeakSetPrototypeAdd
code-creation,Builtin,2,1660489,0x7ff6349f3704,144,WeakSetPrototypeDelete
code-creation,Builtin,2,1660505,0x7ff6349f37a4,372,WeakCollectionDelete
code-creation,Builtin,2,1660537,0x7ff6349f3924,764,WeakCollectionSet
code-creation,Builtin,2,1660572,0x7ff6349f3c24,296,AsyncGeneratorResolve
code-creation,Builtin,2,1660585,0x7ff6349f3d64,100,AsyncGeneratorReject
code-creation,Builtin,2,1660592,0x7ff6349f3de4,2760,AsyncGeneratorYield
code-creation,Builtin,2,1660599,0x7ff6349f48c4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,1660607,0x7ff6349f5404,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,1660633,0x7ff6349f5544,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,1660646,0x7ff6349f5564,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,1660656,0x7ff6349f5964,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,1660667,0x7ff6349f5d84,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,1660674,0x7ff6349f61a4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,1660682,0x7ff6349f6c64,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,1660710,0x7ff6349f7724,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,1660723,0x7ff6349f77a4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,1660732,0x7ff6349f7844,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,1660740,0x7ff6349f78c4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,1660769,0x7ff6349f7944,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,1660783,0x7ff6349f79c4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,1660792,0x7ff6349f7a64,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,1660824,0x7ff6349f80a4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,1660870,0x7ff6349f8764,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,1660886,0x7ff6349f8e24,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,1660919,0x7ff6349f8ea4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1660935,0x7ff6349f8fa4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1660943,0x7ff6349f90a4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,1660951,0x7ff6349f9184,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1660983,0x7ff6349f9324,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1660995,0x7ff6349f94c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1661003,0x7ff6349f95c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1661011,0x7ff6349f96c4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,1661043,0x7ff6349f97c4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,1661054,0x7ff6349f9964,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,1661062,0x7ff6349f9b04,4,DirectCEntry
code-creation,Builtin,2,1661069,0x7ff6349f9b24,1096,StringAdd_CheckNone
code-creation,Builtin,2,1661101,0x7ff6349f9f84,2484,SubString
code-creation,Builtin,2,1661111,0x7ff6349fa944,16,StackCheck
code-creation,Builtin,2,1661118,0x7ff6349fa964,84,DoubleToI
code-creation,Builtin,2,1661125,0x7ff6349fa9c4,2236,GetProperty
code-creation,Builtin,2,1661132,0x7ff6349fb284,2308,GetPropertyWithReceiver
code-creation,Builtin,2,1661148,0x7ff6349fbba4,16004,SetProperty
code-creation,Builtin,2,1661157,0x7ff6349ffa44,13480,SetPropertyInLiteral
code-creation,Builtin,2,1661188,0x7ff634a02f04,8,MemCopyUint8Uint8
code-creation,Builtin,2,1661207,0x7ff634a02f24,8,MemMove
code-creation,Builtin,2,1661219,0x7ff634a02f44,12,IsTraceCategoryEnabled
code-creation,Builtin,2,1661246,0x7ff634a02f64,12,Trace
code-creation,Builtin,2,1661258,0x7ff634a02f84,12,FinalizationRegistryUnregister
code-creation,Builtin,2,1661270,0x7ff634a02fa4,416,AsyncModuleEvaluate
code-creation,Builtin,2,1661303,0x7ff634a03164,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,1661317,0x7ff634a03184,12,CallAsyncModuleRejected
code-creation,Builtin,2,1661328,0x7ff634a031a4,260,AggregateErrorConstructor
code-creation,Builtin,2,1661362,0x7ff634a032c4,856,ArrayPrototypeAt
code-creation,Builtin,2,1661375,0x7ff634a03624,656,ArrayPrototypeConcat
code-creation,Builtin,2,1661386,0x7ff634a038c4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,1661418,0x7ff634a04fa4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,1661432,0x7ff634a05084,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,1661444,0x7ff634a05304,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,1661474,0x7ff634a06004,1464,ArrayEvery
code-creation,Builtin,2,1661487,0x7ff634a065c4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,1661500,0x7ff634a066e4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,1661528,0x7ff634a06ac4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,1661560,0x7ff634a078c4,4260,ArrayFilter
code-creation,Builtin,2,1661571,0x7ff634a08984,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,1661579,0x7ff634a08a64,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,1661586,0x7ff634a08aa4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,1661595,0x7ff634a08be4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,1661602,0x7ff634a08e04,1460,ArrayPrototypeFind
code-creation,Builtin,2,1661628,0x7ff634a093c4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,1661641,0x7ff634a094a4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,1661650,0x7ff634a094e4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,1661658,0x7ff634a09624,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,1661686,0x7ff634a09844,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,1661699,0x7ff634a09e04,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,1661709,0x7ff634a09fe4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,1661721,0x7ff634a0a6a4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,1661729,0x7ff634a0a884,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,1661761,0x7ff634a0af44,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,1661774,0x7ff634a0b024,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,1661798,0x7ff634a0b104,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,1661815,0x7ff634a0bd64,1328,ArrayForEach
code-creation,Builtin,2,1661852,0x7ff634a0c2a4,3572,ArrayFrom
code-creation,Builtin,2,1661864,0x7ff634a0d0a4,148,ArrayIsArray
code-creation,Builtin,2,1661875,0x7ff634a0d144,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,1661886,0x7ff634a0d2e4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,1661916,0x7ff634a0d324,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,1661930,0x7ff634a0d3c4,312,ConvertToLocaleString
code-creation,Builtin,2,1661941,0x7ff634a0d504,752,JoinStackPush
code-creation,Builtin,2,1661953,0x7ff634a0d804,272,JoinStackPop
code-creation,Builtin,2,1661976,0x7ff634a0d924,6628,ArrayPrototypeJoin
code-creation,Builtin,2,1661988,0x7ff634a0f324,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,1662000,0x7ff634a10824,236,ArrayPrototypeToString
code-creation,Builtin,2,1662011,0x7ff634a10924,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,1662023,0x7ff634a12064,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,1662066,0x7ff634a13284,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,1662107,0x7ff634a14184,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,1662121,0x7ff634a142a4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,1662149,0x7ff634a143a4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,1662162,0x7ff634a145c4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,1662174,0x7ff634a15244,3912,ArrayMap
code-creation,Builtin,2,1662206,0x7ff634a161a4,1000,ArrayOf
code-creation,Builtin,2,1662219,0x7ff634a165a4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,1662232,0x7ff634a16764,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,1662264,0x7ff634a16844,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,1662279,0x7ff634a16924,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,1662286,0x7ff634a175c4,2000,ArrayReduceRight
code-creation,Builtin,2,1662293,0x7ff634a17da4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,1662301,0x7ff634a17e64,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,1662311,0x7ff634a17f44,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,1662344,0x7ff634a18024,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,1662366,0x7ff634a18ce4,1604,ArrayReduce
code-creation,Builtin,2,1662378,0x7ff634a19344,3216,ArrayPrototypeReverse
code-creation,Builtin,2,1662410,0x7ff634a19fe4,3592,ArrayPrototypeShift
code-creation,Builtin,2,1662429,0x7ff634a1ae04,5220,ArrayPrototypeSlice
code-creation,Builtin,2,1662456,0x7ff634a1c284,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,1662483,0x7ff634a1c364,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,1662496,0x7ff634a1c5c4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,1662533,0x7ff634a1d2c4,1448,ArraySome
code-creation,Builtin,2,1662547,0x7ff634a1d884,14216,ArrayPrototypeSplice
code-creation,Builtin,2,1662558,0x7ff634a21024,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,1662569,0x7ff634a21d04,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,1662583,0x7ff634a21e64,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,1662618,0x7ff634a21fc4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,1662635,0x7ff634a220a4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,1662648,0x7ff634a22204,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,1662660,0x7ff634a222e4,96,ArrayBufferIsView
code-creation,Builtin,2,1662671,0x7ff634a22364,396,ToInteger
code-creation,Builtin,2,1662706,0x7ff634a22504,3084,FastCreateDataProperty
code-creation,Builtin,2,1662719,0x7ff634a23124,676,CheckNumberInRange
code-creation,Builtin,2,1662729,0x7ff634a233e4,584,CheckSameObject
code-creation,Builtin,2,1662740,0x7ff634a23644,904,BooleanConstructor
code-creation,Builtin,2,1662752,0x7ff634a239e4,164,BooleanPrototypeToString
code-creation,Builtin,2,1662814,0x7ff634a23aa4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,1662832,0x7ff634a23b44,1184,BigIntAddNoThrow
code-creation,Builtin,2,1662843,0x7ff634a24004,1280,BigIntAdd
code-creation,Builtin,2,1662855,0x7ff634a24524,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,1662889,0x7ff634a249e4,1280,BigIntSubtract
code-creation,Builtin,2,1662901,0x7ff634a24f04,284,BigIntUnaryMinus
code-creation,Builtin,2,1662910,0x7ff634a25024,1360,ToString
code-creation,Builtin,2,1662928,0x7ff634a25584,156,StringPrototypeToString
code-creation,Builtin,2,1662958,0x7ff634a25624,156,StringPrototypeValueOf
code-creation,Builtin,2,1662969,0x7ff634a256c4,2480,StringToList
code-creation,Builtin,2,1662980,0x7ff634a26084,1012,StringPrototypeCharAt
code-creation,Builtin,2,1663019,0x7ff634a26484,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,1663032,0x7ff634a26744,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,1663045,0x7ff634a26c64,400,StringPrototypeConcat
code-creation,Builtin,2,1663078,0x7ff634a26e04,992,StringConstructor
code-creation,Builtin,2,1663110,0x7ff634a27204,1436,StringAddConvertLeft
code-creation,Builtin,2,1663129,0x7ff634a277a4,1464,StringAddConvertRight
code-creation,Builtin,2,1663150,0x7ff634a27d64,816,StringCharAt
code-creation,Builtin,2,1663196,0x7ff634a280a4,16,FastNewClosureBaseline
code-creation,Builtin,2,1663211,0x7ff634a280c4,196,FastNewFunctionContextEval
code-creation,Builtin,2,1663221,0x7ff634a281a4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,1663233,0x7ff634a28284,248,CreateRegExpLiteral
code-creation,Builtin,2,1663277,0x7ff634a28384,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,1663290,0x7ff634a287c4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,1663329,0x7ff634a289c4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,1663341,0x7ff634a290a4,384,ObjectConstructor
code-creation,Builtin,2,1663353,0x7ff634a29244,176,CreateEmptyLiteralObject
code-creation,Builtin,2,1663387,0x7ff634a29304,536,NumberConstructor
code-creation,Builtin,2,1663400,0x7ff634a29524,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,1663411,0x7ff634a29584,64,StringToNumber
code-creation,Builtin,2,1663444,0x7ff634a295e4,184,NonNumberToNumber
code-creation,Builtin,2,1663456,0x7ff634a296a4,240,NonNumberToNumeric
code-creation,Builtin,2,1663467,0x7ff634a297a4,36,ToNumeric
code-creation,Builtin,2,1663498,0x7ff634a297e4,1184,NumberToString
code-creation,Builtin,2,1663515,0x7ff634a29ca4,92,ToBoolean
code-creation,Builtin,2,1663559,0x7ff634a29d04,96,ToBooleanForBaselineJump
code-creation,Builtin,2,1663572,0x7ff634a29d84,728,ToLength
code-creation,Builtin,2,1663583,0x7ff634a2a064,1312,ToName
code-creation,Builtin,2,1663620,0x7ff634a2a5a4,756,ToObject
code-creation,Builtin,2,1663633,0x7ff634a2a8a4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,1663644,0x7ff634a2a984,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,1663680,0x7ff634a2aa64,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,1663694,0x7ff634a2ab44,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,1663705,0x7ff634a2ac84,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,1663737,0x7ff634a2adc4,216,FastConsoleAssert
code-creation,Builtin,2,1663753,0x7ff634a2aea4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,1663770,0x7ff634a2af64,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,1663805,0x7ff634a2b0c4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,1663819,0x7ff634a2b224,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,1663909,0x7ff634a2b464,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,1663929,0x7ff634a2b6a4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,1663943,0x7ff634a2b944,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,1663954,0x7ff634a2bbe4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,1663966,0x7ff634a2bf24,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,1663978,0x7ff634a2c1e4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,1663990,0x7ff634a2c544,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,1664001,0x7ff634a2c8e4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,1664013,0x7ff634a2ccc4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,1664025,0x7ff634a2d0c4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,1664036,0x7ff634a2d484,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,1664047,0x7ff634a2d844,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,1664058,0x7ff634a2dc64,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,1664069,0x7ff634a2e084,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,1664081,0x7ff634a2e4c4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,1664092,0x7ff634a2e904,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,1664103,0x7ff634a2ed24,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,1664114,0x7ff634a2f184,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,1664139,0x7ff634a2f544,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,1664183,0x7ff634a2f904,828,FinalizationRegistryConstructor
code-creation,Builtin,2,1664200,0x7ff634a2fc44,1152,FinalizationRegistryRegister
code-creation,Builtin,2,1664212,0x7ff634a300e4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,1664225,0x7ff634a30384,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,1664236,0x7ff634a304e4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,1664248,0x7ff634a30884,88,IncBlockCounter
code-creation,Builtin,2,1664259,0x7ff634a308e4,228,GetTemplateObject
code-creation,Builtin,2,1664270,0x7ff634a309e4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,1664282,0x7ff634a30a04,92,ForInNext
code-creation,Builtin,2,1664292,0x7ff634a30a64,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,1664303,0x7ff634a30b04,116,GetIteratorWithFeedback
code-creation,Builtin,2,1664314,0x7ff634a30b84,100,GetIteratorBaseline
code-creation,Builtin,2,1664325,0x7ff634a30c04,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,1664336,0x7ff634a30d24,1084,CallIteratorWithFeedback
code-creation,Builtin,2,1664347,0x7ff634a31164,288,MathAbs
code-creation,Builtin,2,1664357,0x7ff634a312a4,428,MathCeil
code-creation,Builtin,2,1664369,0x7ff634a31464,432,MathFloor
code-creation,Builtin,2,1664379,0x7ff634a31624,488,MathRound
code-creation,Builtin,2,1664390,0x7ff634a31824,428,MathTrunc
code-creation,Builtin,2,1664453,0x7ff634a319e4,368,MathPow
code-creation,Builtin,2,1664564,0x7ff634a31b64,396,MathMax
code-creation,Builtin,2,1664630,0x7ff634a31d04,404,MathMin
code-creation,Builtin,2,1664645,0x7ff634a31ea4,320,MathAcos
code-creation,Builtin,2,1664675,0x7ff634a32004,320,MathAcosh
code-creation,Builtin,2,1664686,0x7ff634a32164,320,MathAsin
code-creation,Builtin,2,1664698,0x7ff634a322c4,320,MathAsinh
code-creation,Builtin,2,1664734,0x7ff634a32424,320,MathAtan
code-creation,Builtin,2,1664746,0x7ff634a32584,416,MathAtan2
code-creation,Builtin,2,1664757,0x7ff634a32744,320,MathAtanh
code-creation,Builtin,2,1664779,0x7ff634a328a4,320,MathCbrt
code-creation,Builtin,2,1664791,0x7ff634a32a04,168,MathClz32
code-creation,Builtin,2,1664802,0x7ff634a32ac4,320,MathCos
code-creation,Builtin,2,1664839,0x7ff634a32c24,320,MathCosh
code-creation,Builtin,2,1664856,0x7ff634a32d84,320,MathExp
code-creation,Builtin,2,1664964,0x7ff634a32ee4,320,MathExpm1
code-creation,Builtin,2,1665006,0x7ff634a33044,272,MathFround
code-creation,Builtin,2,1665019,0x7ff634a33164,304,MathImul
code-creation,Builtin,2,1665036,0x7ff634a332a4,320,MathLog
code-creation,Builtin,2,1665074,0x7ff634a33404,320,MathLog1p
code-creation,Builtin,2,1665086,0x7ff634a33564,320,MathLog10
code-creation,Builtin,2,1665096,0x7ff634a336c4,320,MathLog2
code-creation,Builtin,2,1665129,0x7ff634a33824,320,MathSin
code-creation,Builtin,2,1665141,0x7ff634a33984,180,MathSign
code-creation,Builtin,2,1665152,0x7ff634a33a44,320,MathSinh
code-creation,Builtin,2,1665182,0x7ff634a33ba4,268,MathSqrt
code-creation,Builtin,2,1665234,0x7ff634a33cc4,320,MathTan
code-creation,Builtin,2,1665269,0x7ff634a33e24,320,MathTanh
code-creation,Builtin,2,1665284,0x7ff634a33f84,1060,MathHypot
code-creation,Builtin,2,1665294,0x7ff634a343c4,332,MathRandom
code-creation,Builtin,2,1665306,0x7ff634a34524,2956,NumberPrototypeToString
code-creation,Builtin,2,1665341,0x7ff634a350c4,136,NumberIsFinite
code-creation,Builtin,2,1665355,0x7ff634a35164,340,NumberIsInteger
code-creation,Builtin,2,1665366,0x7ff634a352c4,116,NumberIsNaN
code-creation,Builtin,2,1665377,0x7ff634a35344,372,NumberIsSafeInteger
code-creation,Builtin,2,1665388,0x7ff634a354c4,156,NumberPrototypeValueOf
code-creation,Builtin,2,1665399,0x7ff634a35564,196,NumberParseFloat
code-creation,Builtin,2,1665410,0x7ff634a35644,248,ParseInt
code-creation,Builtin,2,1665420,0x7ff634a35744,84,NumberParseInt
code-creation,Builtin,2,1665431,0x7ff634a357a4,860,Add
code-creation,Builtin,2,1665441,0x7ff634a35b04,424,Subtract
code-creation,Builtin,2,1665452,0x7ff634a35cc4,608,Multiply
code-creation,Builtin,2,1665463,0x7ff634a35f44,532,Divide
code-creation,Builtin,2,1665494,0x7ff634a36164,592,Modulus
code-creation,Builtin,2,1665530,0x7ff634a363c4,524,Exponentiate
code-creation,Builtin,2,1665547,0x7ff634a365e4,344,Negate
code-creation,Builtin,2,1665558,0x7ff634a36744,112,BitwiseNot
code-creation,Builtin,2,1665649,0x7ff634a367c4,112,Decrement
code-creation,Builtin,2,1666137,0x7ff634a36844,112,Increment
code-creation,Builtin,2,1667743,0x7ff634a368c4,392,ShiftLeft
code-creation,Builtin,2,1667804,0x7ff634a36a64,392,ShiftRight
code-creation,Builtin,2,1667917,0x7ff634a36c04,508,ShiftRightLogical
code-creation,Builtin,2,1667982,0x7ff634a36e04,388,BitwiseAnd
code-creation,Builtin,2,1667996,0x7ff634a36fa4,388,BitwiseOr
code-creation,Builtin,2,1668005,0x7ff634a37144,388,BitwiseXor
code-creation,Builtin,2,1668015,0x7ff634a372e4,796,LessThan
code-creation,Builtin,2,1668028,0x7ff634a37604,796,LessThanOrEqual
code-creation,Builtin,2,1668039,0x7ff634a37924,796,GreaterThan
code-creation,Builtin,2,1668048,0x7ff634a37c44,796,GreaterThanOrEqual
code-creation,Builtin,2,1668057,0x7ff634a37f64,860,Equal
code-creation,Builtin,2,1668067,0x7ff634a382c4,348,StrictEqual
code-creation,Builtin,2,1668076,0x7ff634a38424,3132,ObjectFromEntries
code-creation,Builtin,2,1668087,0x7ff634a39064,756,CreateObjectWithoutProperties
code-creation,Builtin,2,1668098,0x7ff634a39364,144,ObjectIsExtensible
code-creation,Builtin,2,1668108,0x7ff634a39404,148,ObjectPreventExtensions
code-creation,Builtin,2,1668119,0x7ff634a394a4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,1668132,0x7ff634a39544,300,ObjectSetPrototypeOf
code-creation,Builtin,2,1668142,0x7ff634a39684,80,ObjectPrototypeToString
code-creation,Builtin,2,1668151,0x7ff634a396e4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,1668160,0x7ff634a39764,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,1668170,0x7ff634a39824,868,FulfillPromise
code-creation,Builtin,2,1668179,0x7ff634a39ba4,988,RejectPromise
code-creation,Builtin,2,1668189,0x7ff634a39f84,2416,NewPromiseCapability
code-creation,Builtin,2,1668198,0x7ff634a3a904,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,1668208,0x7ff634a3a9c4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,1668218,0x7ff634a3aa64,1416,PerformPromiseThen
code-creation,Builtin,2,1668227,0x7ff634a3b004,648,PromiseReject
code-creation,Builtin,2,1668235,0x7ff634a3b2a4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,1668259,0x7ff634a3b3c4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,1668278,0x7ff634a3b444,4560,PromiseAll
code-creation,Builtin,2,1668288,0x7ff634a3c624,4880,PromiseAllSettled
code-creation,Builtin,2,1668298,0x7ff634a3d944,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,1668310,0x7ff634a3dda4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,1668321,0x7ff634a3e324,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,1668333,0x7ff634a3e8a4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,1668344,0x7ff634a3ed44,2368,PromiseAny
code-creation,Builtin,2,1668355,0x7ff634a3f6a4,2908,PromiseConstructor
code-creation,Builtin,2,1668366,0x7ff634a40204,296,PromisePrototypeCatch
code-creation,Builtin,2,1668376,0x7ff634a40344,88,PromiseValueThunkFinally
code-creation,Builtin,2,1668386,0x7ff634a403a4,84,PromiseThrowerFinally
code-creation,Builtin,2,1668395,0x7ff634a40404,904,PromiseCatchFinally
code-creation,Builtin,2,1668405,0x7ff634a407a4,904,PromiseThenFinally
code-creation,Builtin,2,1668415,0x7ff634a40b44,1700,PromisePrototypeFinally
code-creation,Builtin,2,1668427,0x7ff634a41204,1336,PromiseRace
code-creation,Builtin,2,1668436,0x7ff634a41744,268,PromiseFulfillReactionJob
code-creation,Builtin,2,1668446,0x7ff634a41864,364,PromiseRejectReactionJob
code-creation,Builtin,2,1668457,0x7ff634a419e4,156,PromiseResolveTrampoline
code-creation,Builtin,2,1668480,0x7ff634a41a84,656,PromiseResolve
code-creation,Builtin,2,1668492,0x7ff634a41d24,712,ResolvePromise
code-creation,Builtin,2,1668504,0x7ff634a42004,2224,PromisePrototypeThen
code-creation,Builtin,2,1668516,0x7ff634a428c4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,1668528,0x7ff634a42d44,448,ProxyConstructor
code-creation,Builtin,2,1668540,0x7ff634a42f24,1760,ProxyDeleteProperty
code-creation,Builtin,2,1668551,0x7ff634a43624,2112,ProxyGetProperty
code-creation,Builtin,2,1668562,0x7ff634a43e84,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,1668573,0x7ff634a442c4,1668,ProxyHasProperty
code-creation,Builtin,2,1668583,0x7ff634a44964,760,ProxyIsExtensible
code-creation,Builtin,2,1668593,0x7ff634a44c64,800,ProxyPreventExtensions
code-creation,Builtin,2,1668604,0x7ff634a44fa4,1148,ProxyRevocable
code-creation,Builtin,2,1668614,0x7ff634a45424,120,ProxyRevoke
code-creation,Builtin,2,1668623,0x7ff634a454a4,2216,ProxySetProperty
code-creation,Builtin,2,1668632,0x7ff634a45d64,1292,ProxySetPrototypeOf
code-creation,Builtin,2,1668642,0x7ff634a46284,208,ReflectIsExtensible
code-creation,Builtin,2,1668652,0x7ff634a46364,212,ReflectPreventExtensions
code-creation,Builtin,2,1668662,0x7ff634a46444,188,ReflectGetPrototypeOf
code-creation,Builtin,2,1668673,0x7ff634a46504,292,ReflectSetPrototypeOf
code-creation,Builtin,2,1668684,0x7ff634a46644,284,ReflectGet
code-creation,Builtin,2,1668695,0x7ff634a46764,160,ReflectDeleteProperty
code-creation,Builtin,2,1668707,0x7ff634a46824,148,ReflectHas
code-creation,Builtin,2,1668716,0x7ff634a468c4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,1668726,0x7ff634a47ce4,5104,RegExpPrototypeExec
code-creation,Builtin,2,1668736,0x7ff634a490e4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,1668744,0x7ff634a49a24,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,1668754,0x7ff634a4bf04,8840,RegExpMatchFast
code-creation,Builtin,2,1668764,0x7ff634a4e1a4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,1668776,0x7ff634a4efc4,6328,RegExpReplace
code-creation,Builtin,2,1668785,0x7ff634a50884,524,RegExpPrototypeReplace
code-creation,Builtin,2,1668796,0x7ff634a50aa4,1424,RegExpSearchFast
code-creation,Builtin,2,1668807,0x7ff634a51044,1640,RegExpPrototypeSearch
code-creation,Builtin,2,1668817,0x7ff634a516c4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,1668829,0x7ff634a517a4,5872,RegExpSplit
code-creation,Builtin,2,1668839,0x7ff634a52ea4,476,RegExpPrototypeSplit
code-creation,Builtin,2,1668848,0x7ff634a53084,2252,RegExpPrototypeTest
code-creation,Builtin,2,1668858,0x7ff634a53964,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,1668874,0x7ff634a53ec4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,1668886,0x7ff634a53fc4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,1668895,0x7ff634a540c4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,1668905,0x7ff634a541c4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,1668916,0x7ff634a542c4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,1668926,0x7ff634a543c4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,1668937,0x7ff634a544c4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,1668989,0x7ff634a545e4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,1669047,0x7ff634a54704,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,1669062,0x7ff634a54fe4,1500,StringPrototypeAt
code-creation,Builtin,2,1669075,0x7ff634a555c4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,1669085,0x7ff634a561a4,480,CreateHTML
code-creation,Builtin,2,1669097,0x7ff634a563a4,164,StringPrototypeAnchor
code-creation,Builtin,2,1669108,0x7ff634a56464,128,StringPrototypeBig
code-creation,Builtin,2,1669119,0x7ff634a56504,128,StringPrototypeBlink
code-creation,Builtin,2,1669163,0x7ff634a565a4,128,StringPrototypeBold
code-creation,Builtin,2,1669176,0x7ff634a56644,168,StringPrototypeFontcolor
code-creation,Builtin,2,1669185,0x7ff634a56704,168,StringPrototypeFontsize
code-creation,Builtin,2,1669195,0x7ff634a567c4,128,StringPrototypeFixed
code-creation,Builtin,2,1669205,0x7ff634a56864,128,StringPrototypeItalics
code-creation,Builtin,2,1669214,0x7ff634a56904,168,StringPrototypeLink
code-creation,Builtin,2,1669349,0x7ff634a569c4,128,StringPrototypeSmall
code-creation,Builtin,2,1669363,0x7ff634a56a64,128,StringPrototypeStrike
code-creation,Builtin,2,1669399,0x7ff634a56b04,128,StringPrototypeSub
code-creation,Builtin,2,1669426,0x7ff634a56ba4,128,StringPrototypeSup
code-creation,Builtin,2,1669470,0x7ff634a56c44,1028,StringPrototypeIncludes
code-creation,Builtin,2,1669487,0x7ff634a57064,628,StringPrototypeIndexOf
code-creation,Builtin,2,1669499,0x7ff634a572e4,344,StringPrototypeIterator
code-creation,Builtin,2,1669519,0x7ff634a57444,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,1669535,0x7ff634a57c44,1304,StringPrototypeMatch
code-creation,Builtin,2,1669546,0x7ff634a58164,1304,StringPrototypeSearch
code-creation,Builtin,2,1669558,0x7ff634a58684,824,StringPrototypePadStart
code-creation,Builtin,2,1669588,0x7ff634a589c4,824,StringPrototypePadEnd
code-creation,Builtin,2,1669603,0x7ff634a58d04,120,StringRepeat
code-creation,Builtin,2,1669614,0x7ff634a58d84,400,StringPrototypeRepeat
code-creation,Builtin,2,1669625,0x7ff634a58f24,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,1669637,0x7ff634a5bae4,3388,StringPrototypeSlice
code-creation,Builtin,2,1669663,0x7ff634a5c824,3028,StringPrototypeStartsWith
code-creation,Builtin,2,1669678,0x7ff634a5d404,3328,StringPrototypeSubstr
code-creation,Builtin,2,1669719,0x7ff634a5e124,3260,StringPrototypeSubstring
code-creation,Builtin,2,1669733,0x7ff634a5ede4,6916,StringPrototypeTrim
code-creation,Builtin,2,1669744,0x7ff634a60904,6332,StringPrototypeTrimStart
code-creation,Builtin,2,1669786,0x7ff634a621c4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,1669800,0x7ff634a638a4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,1669812,0x7ff634a63964,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,1669854,0x7ff634a63a04,172,SymbolPrototypeToString
code-creation,Builtin,2,1669868,0x7ff634a63ac4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,1669880,0x7ff634a63b64,832,TypedArrayPrototypeAt
code-creation,Builtin,2,1669940,0x7ff634a63ec4,10064,CreateTypedArray
code-creation,Builtin,2,1670228,0x7ff634a66624,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,1670834,0x7ff634a66a24,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,1671033,0x7ff634a66ba4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,1671046,0x7ff634a67964,996,TypedArrayPrototypeFind
code-creation,Builtin,2,1671056,0x7ff634a67d64,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,1671068,0x7ff634a68164,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,1671100,0x7ff634a68324,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,1671112,0x7ff634a687e4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,1671122,0x7ff634a689a4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,1671131,0x7ff634a68e84,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,1671153,0x7ff634a69204,2352,TypedArrayFrom
code-creation,Builtin,2,1671163,0x7ff634a69b44,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,1671173,0x7ff634a69cc4,1028,TypedArrayOf
code-creation,Builtin,2,1671181,0x7ff634a6a0e4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,1671190,0x7ff634a6a4a4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,1671201,0x7ff634a6a864,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,1671213,0x7ff634a6b244,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,1671222,0x7ff634a6be44,992,TypedArrayPrototypeSome
code-creation,Builtin,2,1671231,0x7ff634a6c244,1060,TypedArrayMergeSort
code-creation,Builtin,2,1671241,0x7ff634a6c684,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,1671250,0x7ff634a6cce4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,1671264,0x7ff634a6d7a4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,1671274,0x7ff634a6d924,952,WeakRefConstructor
code-creation,Builtin,2,1671283,0x7ff634a6dce4,184,WeakRefDeref
code-creation,Builtin,2,1671299,0x7ff634a6dda4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,1671309,0x7ff634a6e064,296,NewStrictArgumentsElements
code-creation,Builtin,2,1671370,0x7ff634a6e1a4,320,NewRestArgumentsElements
code-creation,Builtin,2,1671386,0x7ff634a6e304,1388,FastNewSloppyArguments
code-creation,Builtin,2,1671398,0x7ff634a6e884,524,FastNewStrictArguments
code-creation,Builtin,2,1671408,0x7ff634a6eaa4,556,FastNewRestArguments
code-creation,Builtin,2,1671418,0x7ff634a6ece4,676,StringSlowFlatten
code-creation,Builtin,2,1671428,0x7ff634a6efa4,2068,StringIndexOf
code-creation,Builtin,2,1671439,0x7ff634a6f7c4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,1671451,0x7ff634a6f7e4,20,TestHelperPlus1
code-creation,Builtin,2,1671461,0x7ff634a6f804,20,TestHelperPlus2
code-creation,Builtin,2,1671471,0x7ff634a6f824,96,NewSmiBox
code-creation,Builtin,2,1671481,0x7ff634a6f8a4,24,ReturnTwoValues
code-creation,Builtin,2,1671492,0x7ff634a6f8c4,32,Load_FastSmiElements_0
code-creation,Builtin,2,1671501,0x7ff634a6f904,32,Load_FastObjectElements_0
code-creation,Builtin,2,1671511,0x7ff634a6f944,144,Load_FastDoubleElements_0
code-creation,Builtin,2,1671520,0x7ff634a6f9e4,32,Store_FastSmiElements_0
code-creation,Builtin,2,1671529,0x7ff634a6fa24,96,Store_FastObjectElements_0
code-creation,Builtin,2,1671539,0x7ff634a6faa4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,1671549,0x7ff634a6fae4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,1671559,0x7ff634a6fb24,36,Delete_FastObjectElements_0
code-creation,Builtin,2,1671570,0x7ff634a6fb64,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,1671581,0x7ff634a6fba4,308,SortCompareDefault
code-creation,Builtin,2,1671591,0x7ff634a6fce4,92,SortCompareUserFn
code-creation,Builtin,2,1671602,0x7ff634a6fd44,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,1671614,0x7ff634a6fd64,312,Copy
code-creation,Builtin,2,1671624,0x7ff634a6fea4,5776,MergeAt
code-creation,Builtin,2,1671636,0x7ff634a71544,792,GallopLeft
code-creation,Builtin,2,1671646,0x7ff634a71864,832,GallopRight
code-creation,Builtin,2,1671657,0x7ff634a71bc4,3832,ArrayTimSort
code-creation,Builtin,2,1671668,0x7ff634a72ac4,2112,ArrayPrototypeSort
code-creation,Builtin,2,1671679,0x7ff634a73324,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,1671690,0x7ff634a733a4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,1671701,0x7ff634a73424,76,WasmTaggedToFloat64
code-creation,Builtin,2,1671713,0x7ff634a73484,72,WasmMemoryGrow
code-creation,Builtin,2,1671725,0x7ff634a734e4,100,WasmTableInit
code-creation,Builtin,2,1671735,0x7ff634a73564,100,WasmTableCopy
code-creation,Builtin,2,1671745,0x7ff634a735e4,84,WasmTableFill
code-creation,Builtin,2,1671759,0x7ff634a73644,72,WasmTableGrow
code-creation,Builtin,2,1671783,0x7ff634a736a4,144,WasmTableGet
code-creation,Builtin,2,1671794,0x7ff634a73744,236,WasmTableSet
code-creation,Builtin,2,1671803,0x7ff634a73844,88,WasmRefFunc
code-creation,Builtin,2,1671812,0x7ff634a738a4,144,WasmAllocateFixedArray
code-creation,Builtin,2,1671822,0x7ff634a73944,44,WasmThrow
code-creation,Builtin,2,1671831,0x7ff634a73984,52,WasmRethrow
code-creation,Builtin,2,1671840,0x7ff634a739c4,44,WasmTriggerTierUp
code-creation,Builtin,2,1671849,0x7ff634a73a04,32,WasmStackGuard
code-creation,Builtin,2,1671858,0x7ff634a73a44,32,WasmStackOverflow
code-creation,Builtin,2,1671869,0x7ff634a73a84,40,WasmTraceMemory
code-creation,Builtin,2,1671877,0x7ff634a73ac4,32,WasmTraceEnter
code-creation,Builtin,2,1671886,0x7ff634a73b04,40,WasmTraceExit
code-creation,Builtin,2,1671896,0x7ff634a73b44,332,WasmAllocateJSArray
code-creation,Builtin,2,1671905,0x7ff634a73ca4,104,WasmAllocatePair
code-creation,Builtin,2,1671914,0x7ff634a73d24,64,WasmAllocateRtt
code-creation,Builtin,2,1671924,0x7ff634a73d84,72,WasmAllocateFreshRtt
code-creation,Builtin,2,1671934,0x7ff634a73de4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,1671943,0x7ff634a73e64,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,1671954,0x7ff634a73f04,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,1671965,0x7ff634a73fc4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,1671974,0x7ff634a74084,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,1671983,0x7ff634a74104,60,WasmArrayCopy
code-creation,Builtin,2,1671992,0x7ff634a74144,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,1672002,0x7ff634a74244,52,WasmSubtypeCheck
code-creation,Builtin,2,1672010,0x7ff634a74284,8,WasmInt32ToNumber
code-creation,Builtin,2,1672019,0x7ff634a742a4,116,WasmUint32ToNumber
code-creation,Builtin,2,1672049,0x7ff634a74324,144,UintPtr53ToNumber
code-creation,Builtin,2,1672060,0x7ff634a743c4,96,WasmAtomicNotify
code-creation,Builtin,2,1672070,0x7ff634a74444,116,WasmI32AtomicWait64
code-creation,Builtin,2,1672080,0x7ff634a744c4,116,WasmI64AtomicWait64
code-creation,Builtin,2,1672089,0x7ff634a74544,580,WasmGetOwnProperty
code-creation,Builtin,2,1672099,0x7ff634a747a4,40,WasmTrap
code-creation,Builtin,2,1672107,0x7ff634a747e4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,1672117,0x7ff634a74804,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,1672126,0x7ff634a74824,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,1672136,0x7ff634a74844,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,1672146,0x7ff634a74864,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,1672157,0x7ff634a74884,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,1672167,0x7ff634a748a4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,1672178,0x7ff634a748c4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,1672189,0x7ff634a748e4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,1672199,0x7ff634a74904,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,1672210,0x7ff634a74924,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,1672221,0x7ff634a74944,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,1672232,0x7ff634a74964,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,1672245,0x7ff634a74984,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,1672255,0x7ff634a749a4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,1672266,0x7ff634a749c4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,1672277,0x7ff634a749e4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,1672288,0x7ff634a74aa4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,1672299,0x7ff634a74ac4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,1672311,0x7ff634a74b44,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,1672321,0x7ff634a74bc4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,1672333,0x7ff634a74be4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,1672348,0x7ff634a74cc4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,1672361,0x7ff634a74dc4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,1672372,0x7ff634a74de4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,1672381,0x7ff634a74e04,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,1672391,0x7ff634a74e24,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,1672401,0x7ff634a74e44,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,1672462,0x7ff634a74ee4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,1672475,0x7ff634a74f04,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,1672487,0x7ff634a74f44,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,1672499,0x7ff634a74f84,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,1672510,0x7ff634a74fc4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,1672524,0x7ff634a75a44,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,1672536,0x7ff634a75a64,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,1672568,0x7ff634a75aa4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,1672579,0x7ff634a75ac4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,1672590,0x7ff634a75b84,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,1672602,0x7ff634a75c44,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,1672614,0x7ff634a75cc4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,1672626,0x7ff634a75d04,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,1672638,0x7ff634a75da4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,1672650,0x7ff634a75e24,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,1672662,0x7ff634a75e44,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,1672674,0x7ff634a75ee4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,1672687,0x7ff634a75f04,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,1672699,0x7ff634a75f24,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,1672711,0x7ff634a761a4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,1672722,0x7ff634a76284,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,1672735,0x7ff634a762c4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,1672747,0x7ff634a763a4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,1672759,0x7ff634a764a4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,1672771,0x7ff634a764e4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,1672782,0x7ff634a765c4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,1672793,0x7ff634a765e4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,1672805,0x7ff634a76604,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,1672826,0x7ff634a766c4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,1672841,0x7ff634a766e4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,1672852,0x7ff634a76704,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,1672863,0x7ff634a767c4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,1672873,0x7ff634a767e4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,1672884,0x7ff634a76804,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,1672897,0x7ff634a768c4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,1672908,0x7ff634a768e4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,1672918,0x7ff634a76904,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,1672929,0x7ff634a769c4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,1672938,0x7ff634a76a64,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,1672948,0x7ff634a76b24,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,1672967,0x7ff634a76be4,12,CollatorConstructor
code-creation,Builtin,2,1673013,0x7ff634a76c04,12,CollatorInternalCompare
code-creation,Builtin,2,1673027,0x7ff634a76c24,12,CollatorPrototypeCompare
code-creation,Builtin,2,1673037,0x7ff634a76c44,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,1673049,0x7ff634a76c64,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,1673064,0x7ff634a76c84,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,1673085,0x7ff634a76ca4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,1673098,0x7ff634a76cc4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,1673110,0x7ff634a76ce4,12,DateTimeFormatConstructor
code-creation,Builtin,2,1673122,0x7ff634a76d04,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,1673142,0x7ff634a76d24,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,1673155,0x7ff634a76d44,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,1673168,0x7ff634a76d64,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,1673191,0x7ff634a76d84,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,1673207,0x7ff634a76da4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,1673224,0x7ff634a76dc4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,1673249,0x7ff634a76de4,12,DisplayNamesConstructor
code-creation,Builtin,2,1673260,0x7ff634a76e04,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,1673273,0x7ff634a76e24,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,1673312,0x7ff634a76e44,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,1673352,0x7ff634a76e64,12,IntlGetCanonicalLocales
code-creation,Builtin,2,1673370,0x7ff634a76e84,12,ListFormatConstructor
code-creation,Builtin,2,1673395,0x7ff634a76ea4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,1673412,0x7ff634a76fa4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,1673428,0x7ff634a770a4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,1673457,0x7ff634a770c4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,1673470,0x7ff634a770e4,12,LocaleConstructor
code-creation,Builtin,2,1673480,0x7ff634a77104,12,LocalePrototypeBaseName
code-creation,Builtin,2,1673495,0x7ff634a77124,12,LocalePrototypeCalendar
code-creation,Builtin,2,1673509,0x7ff634a77144,12,LocalePrototypeCalendars
code-creation,Builtin,2,1673542,0x7ff634a77164,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,1673556,0x7ff634a77184,12,LocalePrototypeCollation
code-creation,Builtin,2,1673567,0x7ff634a771a4,12,LocalePrototypeCollations
code-creation,Builtin,2,1673600,0x7ff634a771c4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,1673616,0x7ff634a771e4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,1673654,0x7ff634a77204,12,LocalePrototypeLanguage
code-creation,Builtin,2,1673670,0x7ff634a77224,12,LocalePrototypeMaximize
code-creation,Builtin,2,1673709,0x7ff634a77244,12,LocalePrototypeMinimize
code-creation,Builtin,2,1673726,0x7ff634a77264,12,LocalePrototypeNumeric
code-creation,Builtin,2,1673739,0x7ff634a77284,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,1673752,0x7ff634a772a4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,1673786,0x7ff634a772c4,12,LocalePrototypeRegion
code-creation,Builtin,2,1673801,0x7ff634a772e4,12,LocalePrototypeScript
code-creation,Builtin,2,1673813,0x7ff634a77304,12,LocalePrototypeTextInfo
code-creation,Builtin,2,1673825,0x7ff634a77324,12,LocalePrototypeTimeZones
code-creation,Builtin,2,1673838,0x7ff634a77344,12,LocalePrototypeToString
code-creation,Builtin,2,1673850,0x7ff634a77364,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,1673863,0x7ff634a77384,12,NumberFormatConstructor
code-creation,Builtin,2,1673877,0x7ff634a773a4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,1673906,0x7ff634a773c4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,1673920,0x7ff634a773e4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,1673937,0x7ff634a77404,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,1673970,0x7ff634a77424,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,1674005,0x7ff634a77444,12,PluralRulesConstructor
code-creation,Builtin,2,1674024,0x7ff634a77464,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,1674040,0x7ff634a77484,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,1674054,0x7ff634a774a4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,1674067,0x7ff634a774c4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,1674078,0x7ff634a774e4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,1674093,0x7ff634a77504,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,1674108,0x7ff634a77524,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,1674123,0x7ff634a77544,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,1674138,0x7ff634a77564,12,SegmenterConstructor
code-creation,Builtin,2,1674152,0x7ff634a77584,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,1674185,0x7ff634a775a4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,1674201,0x7ff634a775c4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,1674216,0x7ff634a775e4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,1674229,0x7ff634a77604,12,SegmentsPrototypeContaining
code-creation,Builtin,2,1674243,0x7ff634a77624,12,SegmentsPrototypeIterator
code-creation,Builtin,2,1674257,0x7ff634a77644,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,1674296,0x7ff634a77664,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,1674326,0x7ff634a77684,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,1674343,0x7ff634a776a4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,1674362,0x7ff634a77784,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,1674393,0x7ff634a777a4,636,StringToLowerCaseIntl
code-creation,Builtin,2,1674409,0x7ff634a77a24,12,V8BreakIteratorConstructor
code-creation,Builtin,2,1674425,0x7ff634a77a44,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,1674456,0x7ff634a77a64,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,1674473,0x7ff634a77a84,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,1674508,0x7ff634a77aa4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,1674525,0x7ff634a77ac4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,1674559,0x7ff634a77ae4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,1674576,0x7ff634a77b04,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,1674619,0x7ff634a77b24,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,1674654,0x7ff634a77b44,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,1674669,0x7ff634a77b64,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,1674684,0x7ff634a77b84,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,1674713,0x7ff634a77ba4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,1674734,0x7ff634a77bc4,24,Wide
code-creation,BytecodeHandler,0,1674764,0x7ff634a77be4,24,ExtraWide
code-creation,BytecodeHandler,0,1674817,0x7ff634a77c04,104,DebugBreakWide
code-creation,BytecodeHandler,0,1674832,0x7ff634a77c84,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,1674865,0x7ff634a77d04,164,DebugBreak0
code-creation,BytecodeHandler,0,1674897,0x7ff634a77dc4,104,DebugBreak1
code-creation,BytecodeHandler,0,1674916,0x7ff634a77e44,104,DebugBreak2
code-creation,BytecodeHandler,0,1674944,0x7ff634a77ec4,104,DebugBreak3
code-creation,BytecodeHandler,0,1674960,0x7ff634a77f44,104,DebugBreak4
code-creation,BytecodeHandler,0,1674987,0x7ff634a77fc4,104,DebugBreak5
code-creation,BytecodeHandler,0,1675002,0x7ff634a78044,104,DebugBreak6
code-creation,BytecodeHandler,0,1675030,0x7ff634a780c4,32,Ldar
code-creation,BytecodeHandler,0,1675046,0x7ff634a78104,68,LdaZero
code-creation,BytecodeHandler,0,1675060,0x7ff634a78164,76,LdaSmi
code-creation,BytecodeHandler,0,1675092,0x7ff634a781c4,68,LdaUndefined
code-creation,BytecodeHandler,0,1675108,0x7ff634a78224,68,LdaNull
code-creation,BytecodeHandler,0,1675143,0x7ff634a78284,68,LdaTheHole
code-creation,BytecodeHandler,0,1675158,0x7ff634a782e4,20,LdaTrue
code-creation,BytecodeHandler,0,1675175,0x7ff634a78304,20,LdaFalse
code-creation,BytecodeHandler,0,1675188,0x7ff634a78324,76,LdaConstant
code-creation,BytecodeHandler,0,1675219,0x7ff634a78384,132,LdaContextSlot
code-creation,BytecodeHandler,0,1675235,0x7ff634a78424,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,1675250,0x7ff634a784c4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,1675282,0x7ff634a78524,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,1675320,0x7ff634a78584,32,Star
code-creation,BytecodeHandler,0,1675336,0x7ff634a785c4,40,Mov
code-creation,BytecodeHandler,0,1675351,0x7ff634a78604,40,PushContext
code-creation,BytecodeHandler,0,1675364,0x7ff634a78644,36,PopContext
code-creation,BytecodeHandler,0,1675378,0x7ff634a78684,48,TestReferenceEqual
code-creation,BytecodeHandler,0,1675393,0x7ff634a786c4,52,TestUndetectable
code-creation,BytecodeHandler,0,1675407,0x7ff634a78704,36,TestNull
code-creation,BytecodeHandler,0,1675421,0x7ff634a78744,36,TestUndefined
code-creation,BytecodeHandler,0,1675436,0x7ff634a78784,336,TestTypeOf
code-creation,BytecodeHandler,0,1675472,0x7ff634a788e4,6036,LdaGlobal
code-creation,BytecodeHandler,0,1675489,0x7ff634a7a084,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,1675507,0x7ff634a7b244,168,StaGlobal
code-creation,BytecodeHandler,0,1675536,0x7ff634a7b304,160,StaContextSlot
code-creation,BytecodeHandler,0,1675576,0x7ff634a7b3c4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,1675593,0x7ff634a7b444,124,LdaLookupSlot
code-creation,BytecodeHandler,0,1675606,0x7ff634a7b4c4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,1675621,0x7ff634a7b5c4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,1675636,0x7ff634a7c884,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,1675665,0x7ff634a7c904,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,1675682,0x7ff634a7ca04,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,1675719,0x7ff634a7dca4,220,StaLookupSlot
code-creation,BytecodeHandler,0,1675736,0x7ff634a7dd84,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,1675774,0x7ff634a7f204,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,1675791,0x7ff634a7f2c4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,1675826,0x7ff634a7f3a4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,1675842,0x7ff634a7f464,292,StaModuleVariable
code-creation,BytecodeHandler,0,1675875,0x7ff634a7f5a4,172,StaNamedProperty
code-creation,BytecodeHandler,0,1675892,0x7ff634a7f664,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,1675919,0x7ff634a7f724,164,StaKeyedProperty
code-creation,BytecodeHandler,0,1675958,0x7ff634a7f7e4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,1675975,0x7ff634a7f8a4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,1675991,0x7ff634a7f984,160,CollectTypeProfile
code-creation,BytecodeHandler,0,1676005,0x7ff634a7fa44,1028,Add
code-creation,BytecodeHandler,0,1676019,0x7ff634a7fe64,1064,Sub
code-creation,BytecodeHandler,0,1676033,0x7ff634a802a4,1024,Mul
code-creation,BytecodeHandler,0,1676065,0x7ff634a806c4,988,Div
code-creation,BytecodeHandler,0,1676083,0x7ff634a80aa4,912,Mod
code-creation,BytecodeHandler,0,1676094,0x7ff634a80e44,964,Exp
code-creation,BytecodeHandler,0,1676104,0x7ff634a81224,876,BitwiseOr
code-creation,BytecodeHandler,0,1676140,0x7ff634a815a4,888,BitwiseXor
code-creation,BytecodeHandler,0,1676157,0x7ff634a81924,888,BitwiseAnd
code-creation,BytecodeHandler,0,1676172,0x7ff634a81ca4,900,ShiftLeft
code-creation,BytecodeHandler,0,1676200,0x7ff634a82044,900,ShiftRight
code-creation,BytecodeHandler,0,1676236,0x7ff634a823e4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,1676252,0x7ff634a827e4,960,AddSmi
code-creation,BytecodeHandler,0,1676278,0x7ff634a82bc4,1000,SubSmi
code-creation,BytecodeHandler,0,1676294,0x7ff634a82fc4,916,MulSmi
code-creation,BytecodeHandler,0,1676308,0x7ff634a83364,920,DivSmi
code-creation,BytecodeHandler,0,1676337,0x7ff634a83704,816,ModSmi
code-creation,BytecodeHandler,0,1676352,0x7ff634a83a44,872,ExpSmi
code-creation,BytecodeHandler,0,1676369,0x7ff634a83dc4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,1676397,0x7ff634a83fc4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,1676409,0x7ff634a841c4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,1676422,0x7ff634a843c4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,1676454,0x7ff634a845c4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,1676470,0x7ff634a847c4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,1676484,0x7ff634a84a64,656,Inc
code-creation,BytecodeHandler,0,1676517,0x7ff634a84d04,656,Dec
code-creation,BytecodeHandler,0,1676533,0x7ff634a84fa4,640,Negate
code-creation,BytecodeHandler,0,1676573,0x7ff634a85244,480,BitwiseNot
code-creation,BytecodeHandler,0,1676614,0x7ff634a85444,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,1676630,0x7ff634a854c4,36,LogicalNot
code-creation,BytecodeHandler,0,1676644,0x7ff634a85504,208,TypeOf
code-creation,BytecodeHandler,0,1676680,0x7ff634a855e4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,1676695,0x7ff634a85664,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,1676710,0x7ff634a856e4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,1676725,0x7ff634a85724,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,1676754,0x7ff634a85ba4,1132,CallProperty
code-creation,BytecodeHandler,0,1676770,0x7ff634a86024,1012,CallProperty0
code-creation,BytecodeHandler,0,1676784,0x7ff634a86424,1028,CallProperty1
code-creation,BytecodeHandler,0,1676825,0x7ff634a86844,1040,CallProperty2
code-creation,BytecodeHandler,0,1676842,0x7ff634a86c64,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,1676881,0x7ff634a87064,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,1676917,0x7ff634a87484,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,1676935,0x7ff634a87884,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,1676950,0x7ff634a87ca4,1132,CallWithSpread
code-creation,BytecodeHandler,0,1676986,0x7ff634a88124,124,CallRuntime
code-creation,BytecodeHandler,0,1677002,0x7ff634a881a4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,1677017,0x7ff634a88244,80,CallJSRuntime
code-creation,BytecodeHandler,0,1677044,0x7ff634a882a4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,1677060,0x7ff634a88784,1020,Construct
code-creation,BytecodeHandler,0,1677074,0x7ff634a88b84,536,ConstructWithSpread
code-creation,BytecodeHandler,0,1677103,0x7ff634a88da4,1936,TestEqual
code-creation,BytecodeHandler,0,1677117,0x7ff634a89544,1064,TestEqualStrict
code-creation,BytecodeHandler,0,1677129,0x7ff634a89984,1624,TestLessThan
code-creation,BytecodeHandler,0,1677143,0x7ff634a89fe4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,1677156,0x7ff634a8a644,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,1677168,0x7ff634a8aca4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,1677180,0x7ff634a8b304,860,TestInstanceOf
code-creation,BytecodeHandler,0,1677191,0x7ff634a8b664,156,TestIn
code-creation,BytecodeHandler,0,1677202,0x7ff634a8b704,112,ToName
code-creation,BytecodeHandler,0,1677212,0x7ff634a8b784,212,ToNumber
code-creation,BytecodeHandler,0,1677220,0x7ff634a8b864,232,ToNumeric
code-creation,BytecodeHandler,0,1677233,0x7ff634a8b964,112,ToObject
code-creation,BytecodeHandler,0,1677282,0x7ff634a8b9e4,116,ToString
code-creation,BytecodeHandler,0,1677330,0x7ff634a8ba64,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,1677349,0x7ff634a8bc04,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,1677362,0x7ff634a8c1c4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,1677395,0x7ff634a8c224,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,1677409,0x7ff634a8c544,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,1677421,0x7ff634a8cda4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,1677452,0x7ff634a8cea4,168,CloneObject
code-creation,BytecodeHandler,0,1677465,0x7ff634a8cf64,212,GetTemplateObject
code-creation,BytecodeHandler,0,1677486,0x7ff634a8d044,328,CreateClosure
code-creation,BytecodeHandler,0,1677507,0x7ff634a8d1a4,120,CreateBlockContext
code-creation,BytecodeHandler,0,1677525,0x7ff634a8d224,132,CreateCatchContext
code-creation,BytecodeHandler,0,1677559,0x7ff634a8d2c4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,1677577,0x7ff634a8d3e4,256,CreateEvalContext
code-creation,BytecodeHandler,0,1677592,0x7ff634a8d504,132,CreateWithContext
code-creation,BytecodeHandler,0,1677603,0x7ff634a8d5a4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,1677616,0x7ff634a8dbe4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,1677652,0x7ff634a8de44,632,CreateRestParameter
code-creation,BytecodeHandler,0,1677671,0x7ff634a8e0c4,424,JumpLoop
code-creation,BytecodeHandler,0,1677685,0x7ff634a8e284,44,Jump
code-creation,BytecodeHandler,0,1677696,0x7ff634a8e2c4,56,JumpConstant
code-creation,BytecodeHandler,0,1677707,0x7ff634a8e304,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,1677719,0x7ff634a8e364,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,1677730,0x7ff634a8e3c4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,1677742,0x7ff634a8e424,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,1677753,0x7ff634a8e484,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,1677765,0x7ff634a8e4e4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,1677776,0x7ff634a8e544,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,1677788,0x7ff634a8e5a4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,1677799,0x7ff634a8e604,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,1677811,0x7ff634a8e6a4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,1677823,0x7ff634a8e744,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,1677834,0x7ff634a8e7e4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,1677845,0x7ff634a8e884,64,JumpIfTrue
code-creation,BytecodeHandler,0,1677856,0x7ff634a8e8e4,64,JumpIfFalse
code-creation,BytecodeHandler,0,1677867,0x7ff634a8e944,64,JumpIfNull
code-creation,BytecodeHandler,0,1677876,0x7ff634a8e9a4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,1677886,0x7ff634a8ea04,64,JumpIfUndefined
code-creation,BytecodeHandler,0,1677896,0x7ff634a8ea64,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,1677907,0x7ff634a8eac4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,1677918,0x7ff634a8eb24,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,1677929,0x7ff634a8eb84,108,SwitchOnSmiNoFeedback
tick,0x7ffa19aaef04,1677973,0,0x0,6
code-creation,BytecodeHandler,0,1678014,0x7ff634a8ec04,464,ForInEnumerate
code-creation,BytecodeHandler,0,1678031,0x7ff634a8ede4,252,ForInPrepare
code-creation,BytecodeHandler,0,1678044,0x7ff634a8eee4,60,ForInContinue
code-creation,BytecodeHandler,0,1678056,0x7ff634a8ef24,256,ForInNext
code-creation,BytecodeHandler,0,1678069,0x7ff634a8f044,48,ForInStep
code-creation,BytecodeHandler,0,1678100,0x7ff634a8f084,36,SetPendingMessage
code-creation,BytecodeHandler,0,1678117,0x7ff634a8f0c4,116,Throw
code-creation,BytecodeHandler,0,1678129,0x7ff634a8f144,116,ReThrow
code-creation,BytecodeHandler,0,1678157,0x7ff634a8f1c4,112,Return
code-creation,BytecodeHandler,0,1678168,0x7ff634a8f244,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,1678180,0x7ff634a8f324,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,1678192,0x7ff634a8f3c4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,1678204,0x7ff634a8f464,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,1678215,0x7ff634a8f504,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,1678226,0x7ff634a8f584,512,SuspendGenerator
code-creation,BytecodeHandler,0,1678237,0x7ff634a8f7a4,128,ResumeGenerator
code-creation,BytecodeHandler,0,1678262,0x7ff634a8f844,152,GetIterator
code-creation,BytecodeHandler,0,1678282,0x7ff634a8f8e4,116,Debugger
code-creation,BytecodeHandler,0,1678309,0x7ff634a8f964,124,IncBlockCounter
code-creation,BytecodeHandler,0,1678329,0x7ff634a8f9e4,56,Abort
code-creation,BytecodeHandler,0,1678373,0x7ff634a8fa24,32,Star0
code-creation,BytecodeHandler,0,1678392,0x7ff634a8fa64,60,Illegal
code-creation,BytecodeHandler,0,1678411,0x7ff634a8faa4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,1678424,0x7ff634a8fb24,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,1678435,0x7ff634a8fba4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,1678447,0x7ff634a8fc24,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,1678458,0x7ff634a8fca4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,1678469,0x7ff634a8fd24,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,1678483,0x7ff634a8fda4,32,Ldar.Wide
code-creation,BytecodeHandler,0,1678494,0x7ff634a8fde4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,1678506,0x7ff634a8fe24,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,1678517,0x7ff634a8fe64,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,1678529,0x7ff634a8fec4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,1678540,0x7ff634a8ff24,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1678552,0x7ff634a8ff64,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1678565,0x7ff634a8ffa4,32,Star.Wide
code-creation,BytecodeHandler,0,1678577,0x7ff634a8ffe4,40,Mov.Wide
code-creation,BytecodeHandler,0,1678590,0x7ff634a90024,40,PushContext.Wide
code-creation,BytecodeHandler,0,1678626,0x7ff634a90064,36,PopContext.Wide
code-creation,BytecodeHandler,0,1678655,0x7ff634a900a4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,1678682,0x7ff634a900e4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,1678696,0x7ff634a91324,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,1678725,0x7ff634a92524,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,1678741,0x7ff634a925e4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,1678754,0x7ff634a926a4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,1678782,0x7ff634a92724,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,1678795,0x7ff634a927c4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,1678807,0x7ff634a928c4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,1678820,0x7ff634a93bc4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1678840,0x7ff634a93c64,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1678854,0x7ff634a93d64,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,1678867,0x7ff634a95044,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,1678899,0x7ff634a95124,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,1678911,0x7ff634a965a4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,1678923,0x7ff634a96664,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,1678935,0x7ff634a96724,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,1678966,0x7ff634a967e4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,1678980,0x7ff634a96924,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,1679006,0x7ff634a969e4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,1679045,0x7ff634a96aa4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,1679060,0x7ff634a96b64,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,1679072,0x7ff634a96c24,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,1679084,0x7ff634a96d04,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,1679096,0x7ff634a96dc4,984,Add.Wide
code-creation,BytecodeHandler,0,1679133,0x7ff634a971a4,1020,Sub.Wide
code-creation,BytecodeHandler,0,1679149,0x7ff634a975a4,972,Mul.Wide
code-creation,BytecodeHandler,0,1679159,0x7ff634a97984,988,Div.Wide
code-creation,BytecodeHandler,0,1679169,0x7ff634a97d64,916,Mod.Wide
code-creation,BytecodeHandler,0,1679180,0x7ff634a98104,988,Exp.Wide
code-creation,BytecodeHandler,0,1679190,0x7ff634a984e4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,1679200,0x7ff634a98884,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,1679226,0x7ff634a98c24,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,1679242,0x7ff634a98fc4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,1679254,0x7ff634a99384,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,1679272,0x7ff634a99744,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,1679285,0x7ff634a99b64,916,AddSmi.Wide
code-creation,BytecodeHandler,0,1679296,0x7ff634a99f04,960,SubSmi.Wide
code-creation,BytecodeHandler,0,1679358,0x7ff634a9a2e4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,1679375,0x7ff634a9a684,920,DivSmi.Wide
code-creation,BytecodeHandler,0,1679386,0x7ff634a9aa24,816,ModSmi.Wide
code-creation,BytecodeHandler,0,1679396,0x7ff634a9ad64,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,1679406,0x7ff634a9b0e4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,1679416,0x7ff634a9b2e4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,1679426,0x7ff634a9b4e4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,1679435,0x7ff634a9b6e4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,1679459,0x7ff634a9b8e4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,1679469,0x7ff634a9bae4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,1679480,0x7ff634a9bd84,616,Inc.Wide
code-creation,BytecodeHandler,0,1679502,0x7ff634a9c004,616,Dec.Wide
code-creation,BytecodeHandler,0,1679531,0x7ff634a9c284,648,Negate.Wide
code-creation,BytecodeHandler,0,1679547,0x7ff634a9c524,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,1679560,0x7ff634a9c724,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,1679570,0x7ff634a9c7a4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,1679581,0x7ff634a9c824,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,1679591,0x7ff634a9c864,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,1679601,0x7ff634a9cce4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,1679613,0x7ff634a9d164,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,1679624,0x7ff634a9d564,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,1679636,0x7ff634a9d984,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,1679676,0x7ff634a9dda4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,1679694,0x7ff634a9e1a4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,1679725,0x7ff634a9e5c4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,1679745,0x7ff634a9e9e4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,1679760,0x7ff634a9ee04,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,1679773,0x7ff634a9f284,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,1679784,0x7ff634a9f324,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,1679796,0x7ff634a9f3e4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,1679808,0x7ff634a9f444,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,1679962,0x7ff634a9f924,968,Construct.Wide
code-creation,BytecodeHandler,0,1679989,0x7ff634a9fd04,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,1680008,0x7ff634a9fee4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,1680019,0x7ff634aa06a4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,1680031,0x7ff634aa0ae4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,1680069,0x7ff634aa10e4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,1680085,0x7ff634aa16e4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,1680097,0x7ff634aa1ce4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,1680127,0x7ff634aa22e4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,1680140,0x7ff634aa2664,160,TestIn.Wide
code-creation,BytecodeHandler,0,1680151,0x7ff634aa2724,116,ToName.Wide
code-creation,BytecodeHandler,0,1680162,0x7ff634aa27a4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,1680191,0x7ff634aa2884,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,1680207,0x7ff634aa2984,116,ToObject.Wide
code-creation,BytecodeHandler,0,1680218,0x7ff634aa2a04,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,1680228,0x7ff634aa2ba4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,1680240,0x7ff634aa3124,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,1680252,0x7ff634aa3444,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,1680267,0x7ff634aa3c44,172,CloneObject.Wide
code-creation,BytecodeHandler,0,1680301,0x7ff634aa3d04,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,1680318,0x7ff634aa3dc4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,1680330,0x7ff634aa3f24,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,1680342,0x7ff634aa3fa4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,1680354,0x7ff634aa4044,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,1680391,0x7ff634aa4164,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,1680407,0x7ff634aa4284,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,1680417,0x7ff634aa4324,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,1680427,0x7ff634aa44e4,44,Jump.Wide
code-creation,BytecodeHandler,0,1680437,0x7ff634aa4524,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,1680448,0x7ff634aa4564,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,1680458,0x7ff634aa45c4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,1680468,0x7ff634aa4624,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,1680479,0x7ff634aa4684,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,1680518,0x7ff634aa46e4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,1680556,0x7ff634aa4744,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,1680575,0x7ff634aa47a4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,1680601,0x7ff634aa4804,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,1680617,0x7ff634aa4864,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,1680629,0x7ff634aa4904,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,1680640,0x7ff634aa49a4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,1680650,0x7ff634aa4a44,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,1680686,0x7ff634aa4ae4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,1680699,0x7ff634aa4b44,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,1680709,0x7ff634aa4ba4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,1680719,0x7ff634aa4c04,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,1680729,0x7ff634aa4c64,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,1680739,0x7ff634aa4cc4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,1680772,0x7ff634aa4d24,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,1680790,0x7ff634aa4d84,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,1680802,0x7ff634aa4de4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,1680829,0x7ff634aa4e64,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,1680846,0x7ff634aa5044,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,1680857,0x7ff634aa5144,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,1680885,0x7ff634aa5184,260,ForInNext.Wide
code-creation,BytecodeHandler,0,1680900,0x7ff634aa52a4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,1680913,0x7ff634aa52e4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,1680943,0x7ff634aa5384,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,1680957,0x7ff634aa5444,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,1680968,0x7ff634aa54c4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,1680979,0x7ff634aa56e4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,1681008,0x7ff634aa5784,156,GetIterator.Wide
code-creation,BytecodeHandler,0,1681023,0x7ff634aa5824,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,1681037,0x7ff634aa58c4,56,Abort.Wide
code-creation,BytecodeHandler,0,1681066,0x7ff634aa5904,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,1681081,0x7ff634aa5984,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,1681124,0x7ff634aa5a04,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,1681165,0x7ff634aa5a84,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,1681180,0x7ff634aa5b04,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,1681191,0x7ff634aa5b84,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,1681209,0x7ff634aa5c04,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,1681246,0x7ff634aa5c44,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,1681264,0x7ff634aa5c64,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,1681277,0x7ff634aa5ca4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681314,0x7ff634aa5d04,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681329,0x7ff634aa5d64,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681359,0x7ff634aa5da4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681373,0x7ff634aa5de4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,1681383,0x7ff634aa5e04,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,1681394,0x7ff634aa5e44,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,1681420,0x7ff634aa5e84,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,1681466,0x7ff634aa5ec4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,1681500,0x7ff634aa5f04,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,1681518,0x7ff634aa7144,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1681531,0x7ff634aa8344,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,1681557,0x7ff634aa8404,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681571,0x7ff634aa84a4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681583,0x7ff634aa8524,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,1681613,0x7ff634aa85c4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,1681632,0x7ff634aa86c4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,1681645,0x7ff634aa99c4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1681658,0x7ff634aa9a64,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1681671,0x7ff634aa9b64,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,1681703,0x7ff634aaae44,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,1681748,0x7ff634aaaf24,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,1681762,0x7ff634aac384,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,1681774,0x7ff634aac444,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,1681785,0x7ff634aac4e4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,1681794,0x7ff634aac5a4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,1681805,0x7ff634aac6e4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,1681816,0x7ff634aac7a4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,1681827,0x7ff634aac864,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,1681839,0x7ff634aac924,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1681851,0x7ff634aac9e4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,1681862,0x7ff634aacac4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,1681872,0x7ff634aacb84,980,Add.ExtraWide
code-creation,BytecodeHandler,0,1681882,0x7ff634aacf64,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,1681893,0x7ff634aad364,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,1681918,0x7ff634aad744,988,Div.ExtraWide
code-creation,BytecodeHandler,0,1681931,0x7ff634aadb24,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,1681942,0x7ff634aadec4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,1681952,0x7ff634aae2a4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,1681965,0x7ff634aae644,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,1682002,0x7ff634aae9e4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,1682016,0x7ff634aaed84,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,1682028,0x7ff634aaf144,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,1682040,0x7ff634aaf504,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,1682099,0x7ff634aaf924,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,1682129,0x7ff634aafcc4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,1682230,0x7ff634ab00a4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,1682244,0x7ff634ab0444,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,1682257,0x7ff634ab07e4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,1682283,0x7ff634ab0b24,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,1682295,0x7ff634ab0ea4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,1682305,0x7ff634ab10a4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,1682317,0x7ff634ab12a4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,1682645,0x7ff634ab14a4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,1682692,0x7ff634ab16a4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,1682708,0x7ff634ab18a4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,1682720,0x7ff634ab1b44,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,1682730,0x7ff634ab1dc4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,1682761,0x7ff634ab2044,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,1682774,0x7ff634ab22e4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,1682785,0x7ff634ab24e4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,1682796,0x7ff634ab2564,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,1682807,0x7ff634ab25e4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,1682818,0x7ff634ab2624,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,1682829,0x7ff634ab2aa4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,1682841,0x7ff634ab2f24,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,1682851,0x7ff634ab3324,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,1682864,0x7ff634ab3744,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,1682875,0x7ff634ab3b64,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,1682887,0x7ff634ab3f64,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,1682898,0x7ff634ab4384,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,1682910,0x7ff634ab4784,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,1682921,0x7ff634ab4ba4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,1682937,0x7ff634ab5024,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,1682948,0x7ff634ab50c4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,1682960,0x7ff634ab5184,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,1682971,0x7ff634ab51e4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,1682983,0x7ff634ab56c4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,1682994,0x7ff634ab5aa4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,1683006,0x7ff634ab5c84,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,1683017,0x7ff634ab6444,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,1683028,0x7ff634ab6884,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,1683040,0x7ff634ab6e84,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,1683052,0x7ff634ab7484,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,1683064,0x7ff634ab7a84,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,1683076,0x7ff634ab8084,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,1683088,0x7ff634ab8404,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,1683099,0x7ff634ab84a4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,1683111,0x7ff634ab8524,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,1683122,0x7ff634ab8604,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,1683132,0x7ff634ab8704,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,1683143,0x7ff634ab8784,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,1683156,0x7ff634ab8924,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1683168,0x7ff634ab8ea4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,1683179,0x7ff634ab91c4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,1683285,0x7ff634ab99c4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,1683340,0x7ff634ab9a84,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,1683356,0x7ff634ab9b44,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,1683369,0x7ff634ab9ca4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,1683389,0x7ff634ab9d24,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,1683401,0x7ff634ab9dc4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,1683413,0x7ff634ab9ee4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,1683426,0x7ff634aba004,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,1683437,0x7ff634aba0a4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,1683447,0x7ff634aba264,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,1683459,0x7ff634aba2a4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,1683493,0x7ff634aba2e4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1683541,0x7ff634aba344,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1683588,0x7ff634aba3a4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,1683605,0x7ff634aba404,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,1683617,0x7ff634aba464,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,1683628,0x7ff634aba4c4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,1683639,0x7ff634aba524,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,1683649,0x7ff634aba584,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,1683660,0x7ff634aba5e4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,1683696,0x7ff634aba684,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,1683714,0x7ff634aba724,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,1683727,0x7ff634aba7c4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,1683739,0x7ff634aba864,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,1683750,0x7ff634aba8c4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,1683788,0x7ff634aba924,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,1683806,0x7ff634aba984,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,1683818,0x7ff634aba9e4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,1683830,0x7ff634abaa44,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,1683860,0x7ff634abaaa4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,1683877,0x7ff634abab04,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,1683889,0x7ff634abab64,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,1683917,0x7ff634ababe4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,1683933,0x7ff634abadc4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,1683945,0x7ff634abaec4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,1683966,0x7ff634abaf04,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,1683977,0x7ff634abb024,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,1683987,0x7ff634abb064,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,1683999,0x7ff634abb104,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,1684011,0x7ff634abb1c4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,1684022,0x7ff634abb244,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,1684051,0x7ff634abb464,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,1684064,0x7ff634abb4e4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,1684074,0x7ff634abb584,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,1684085,0x7ff634abb604,56,Abort.ExtraWide
new,MemoryChunk,0x2e526dc0000,262144
new,MemoryChunk,0x16b72040000,262144
tick,0x7ff6340dd3c3,1686129,0,0x0,5
new,MemoryChunk,0x19215840000,262144
new,MemoryChunk,0x3bebd880000,262144
new,MemoryChunk,0xe435fc0000,262144
code-creation,Eval,10,1692544,0xe435fc1fae,5, node:internal/main/run_main_module:1:1,0xe435fc1e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0xe435fc1fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,1692622,0xe435fc2056,58, node:internal/main/run_main_module:1:1,0xe435fc1f28,~
code-source-info,0xe435fc2056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,1693085,0xe435fc2296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3de43e4fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0xe435fc2296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,1694094,0xe435fc2fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3de43e4fcf0,~
code-source-info,0xe435fc2fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,1694544,0xe435fc3f7e,5, node:internal/bootstrap/pre_execution:1:1,0xe435fc3b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0xe435fc3f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,1695347,0xe435fc4bae,497, node:internal/bootstrap/pre_execution:1:1,0xe435fc3ef8,~
code-source-info,0xe435fc4bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,1695677,0xe435fc6476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0xe435fc3fb0,~
code-source-info,0xe435fc
code-creation,LazyCompile,10,1695940,0xe435fc7886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x3559fe8bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0xe435fc7886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,1697811,0xe435fca0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0xe435fc4000,~
code-source-info,0xe435fca0be
code-creation,LazyCompile,10,1697919,0xe435fca3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x3de43e4f840,~
code-source-info,0xe435fca3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,1698060,0xe435fca6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x3559fe98598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0xe435fca6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,1698888,0xe435fcb766,832,resolve node:path:158:10,0x1c24db8d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0xe435fcb
tick,0x7ffa19aaef04,1729155,0,0x0,3,0x7ff634553fe0,0xe435fca180,0xe435fc648b,0xe435fc2065
code-creation,LazyCompile,10,1729373,0xe435fced7e,30,validateString node:internal/validators:118:24,0x3de43e7ce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0xe435fced7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,1730029,0xe435fcf71e,17,isPathSeparator node:path:52:25,0x1c24db8cf90,~
code-source-info,0xe435fcf71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,1730068,0xe435fcf81e,35,isWindowsDeviceRoot node:path:60:29,0x1c24db8d408,~
code-source-info,0xe435fcf81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,1730226,0xe435fcf93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3de43e7eee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0xe435fcf93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,1730753,0xe435fcffa6,442,normalizeString node:path:66:25,0x1c24db8d458,~
code-source-info,0xe435fcffa
code-creation,LazyCompile,10,1731022,0xe435fd06c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0xe435fc4050,~
code-source-info,0xe435fd06c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,1731155,0xe435fd0866,82,getOptionValue node:internal/options:39:24,0x17a246fdb40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0xe435fd0866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,1731370,0xe435fd0c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x17a246fd848,~
code-source-info,0xe435fd0c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,1731860,0xe435fd0d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0xe435fc43c0,~
code-source-info,0xe435fd0d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,1731934,0xe435fd0f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x3559fe98cb8,~
code-source-info,0xe435fd0f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,1731995,0xe435fd10de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0xe435fc4410,~
code-source-info,0xe435fd10de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,1732066,0xe435fd125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x31b3ef6b218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xe435fd125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,1732369,0xe435fd1986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x1c24dba2118,~
tick,0x7ffa19aaef04,1734676,0,0x0,3,0x7ff634553fe0,0xe435fd1102,0xe435fc6498,0xe435fc2065
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xe435fd1986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,1734980,0xe435fd1bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0xe435fc4460,~
code-source-info,0xe435fd1bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,1735218,0xe435fd1fa6,5, node:internal/inspector_async_hook:1:1,0xe435fd1df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0xe435fd1fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,1735430,0xe435fd21c6,79, node:internal/inspector_async_hook:1:1,0xe435fd1f20,~
code-source-info,0xe435fd21c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,1735658,0xe435fd282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0xe435fc40a0,~
code-source-info,0xe435fd282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,1735843,0xe435fd298e,20,addListener node:events:618:58,0x1624ae2ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0xe435fd298e,23,18854,18928,C0O18876C14O18883C19O18925,,
tick,0x7ffa19aaef04,1766805,0,0x0,3,0x7ff634553fe0,0xe435fd286b,0xe435fc64a4,0xe435fc2065
code-creation,LazyCompile,10,1767260,0xe435fd5056,378,_addListener node:events:555:22,0x1624ae2b998,~
code-source-info,0xe435fd
code-creation,LazyCompile,10,1767523,0xe435fd5366,15,checkListener node:events:258:23,0x1624ae2b2f8,~
code-source-info,0xe435fd5366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,1767626,0xe435fd5456,30, node:internal/validators:236:42,0x3de43e7d308,~
code-source-info,0xe435fd5456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,1768183,0xe435fd56d6,380,emit node:events:475:44,0x1624ae2b8d8,~
code-source-info,0xe435fd56d
code-creation,LazyCompile,10,1768603,0xe435fd5a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x3de43e7dca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0xe435fd5a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,1768991,0xe435fd5e3e,19,isSignal node:internal/process/signal:17:18,0x3de43e7daf0,~
code-source-info,0xe435fd5e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,1769249,0xe435fd6076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0xe435fc40f0,~
code-source-info,0xe435fd6076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x1da2e000000,262144
code-creation,Function,11,1769810,0x1da2e003060,572,getOptionValue node:internal/options:39:24,0x17a246fdb40,^
code-source-info,0x1da2e003060,91,940,1190,,,
code-creation,Function,11,1769904,0x1da2e003300,216,isPathSeparator node:path:52:25,0x1c24db8cf90,^
code-source-info,0x1da2e003300,41,1794,1876,,,
code-creation,Function,11,1770034,0x1da2e003440,3076,normalizeString node:path:66:25,0x1c24db8d458,^
code-source-info,0x1da2e003440,41,2226,4212,,,
code-creation,LazyCompile,10,1770351,0xe435fd6886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0xe435fc4140,~
code-source-info,0xe435fd6886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,1770615,0xe435fd6b06,5,get node:internal/bootstrap/node:135:6,0x3de43e54a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0xe435fd6b06,10,4267,4295,C0O4272C4O4293,,
code-creation,LazyCompile,10,1772945,0xe435fd7c76,52,get node:internal/bootstrap/node:112:6,0x3de43e54988,~
code-source-info,0xe435fd7c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,1773143,0xe435fd7e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0xe435fc42d0,~
code-source-info,0xe435fd7e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,1773388,0xe435fd82d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x1624ae219f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0xe435fd82d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,1773927,0xe435fd88de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0xe435fc4208,~
code-source-info,0xe435fd88de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,1774055,0xe435fd8af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0xe435fc4258,~
code-source-info,0xe435fd8af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,1774432,0xe435fd90a6,5, node:internal/process/report:1:1,0xe435fd8eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0xe435fd90a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,1774815,0xe435fd9bb6,306, node:internal/process/report:1:1,0xe435fd9020,~
code-source-info,0xe435fd9bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,1775257,0xe435fdba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0xe435fc4320,~
code-source-info,0xe435fdba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,1775373,0xe435fdbb76,57,addSignalHandler node:internal/process/report:98:26,0xe435fd90d8,~
code-source-info,0xe435fdbb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,1775498,0xe435fdc13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0xe435fc4370,~
code-source-info,0xe435fdc13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,1775777,0xe435fdc3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0xe435fc4540,~
code-source-info,0xe435fdc3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,1776046,0xe435fdc55e,21,assert node:internal/assert:11:16,0x1624ae209c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0xe435fdc55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,1777286,0xe435fdd3d6,5, node:child_process:1:1,0xe435fdcf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xe435fdd3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,1779650,0xe435fdde36,748, node:child_process:1:1,0xe435fdd350,~
code-source-info,0xe435fdde
code-creation,LazyCompile,10,1780079,0xe435fe0406,82,debuglog node:internal/util/debuglog:71:18,0x1624ae21d40,~
code-source-info,0xe435fe0406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
tick,0x7ff634f002f4,1780200,0,0x0,3,0x7ff634553fe0,0xe435fddfce,0xe435fc300d,0xe435fc22dd,0xe435fdc43a,0xe435fc6502,0xe435fc2065
code-creation,Eval,10,1781570,0xe435fe33ee,5, node:internal/child_process:1:1,0xe435fe2cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xe435fe33ee,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,1784661,0xe435fe4a0e,1265, node:internal/child_process:1:1,0xe435fe3368,~
code-source-info,0xe435fe4a0e
code-creation,Function,10,1785025,0xe435fe5186,35,<instance_members_initializer> node:internal/child_process:525:3,0xe435fe40d0,~
code-source-info,0xe435fe5186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,1786853,0xe435fe9476,5, node:net:1:1,0xe435fe8c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0xe435fe9476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,1790279,0xe435fec356,2547, node:net:1:1,0xe435fe93f0,~
code-source-info,0xe435fec356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
code-creation,Eval,10,1791555,0xe435ff1cf6,5, node:internal/net:1:1,0xe435ff1b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0xe435ff1cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,1791721,0xe435ff20e6,617, node:internal/net:1:1,0xe435ff1c70,~
code-source-info,0xe435ff20e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,1792340,0xe435ff3aee,5, node:internal/dtrace:1:1,0xe435ff39a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0xe435ff3aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,1792428,0xe435ff3fc6,140, node:internal/dtrace:1:1,0xe435ff3a68,~
code-source-info,0xe435ff3fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,1792795,0xe435ff4f8e,34,protoGetter node:net:740:21,0xe435fe98b8,~
code-source-info,0xe435ff4f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,1793633,0xe435ffa31e,5, node:dgram:1:1,0xe435ff9db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0xe435ffa31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,1795623,0xe435ffc22e,1501, node:dgram:1:1,0xe435ffa298,~
code-source-info,0xe435ffc22e
tick,0x7ff633f1bb17,1795947,1,0x7ff633fde150,3,0x7ff6349258c0,0xe435fc2fec,0xe435fc22dd,0xe435fe4c08,0xe435fc300d,0xe435fc22dd,0xe435fde07a,0xe435fc300d,0xe435fc22dd,0xe435fdc43a,0xe435fc6502,0xe435fc2065
code-creation,Eval,10,1796287,0xe435fff636,5, node:internal/dgram:1:1,0xe435fff430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0xe435fff636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,1796427,0xe435fff8fe,196, node:internal/dgram:1:1,0xe435fff5b0,~
code-source-info,0xe435fff8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x34826dc0000,262144
code-creation,LazyCompile,10,1796834,0x34826dc3406,152,deprecate node:internal/util:96:19,0x1624ae05aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x34826dc3406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,1797811,0x1da2e0040c0,1344,deprecate node:internal/util:96:19,0x1624ae05aa8,^
code-source-info,0x1da2e0040c0,16,2503,3720,,,
code-creation,Function,11,1797848,0x1da2e004660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x3de43e4fdc0,^
code-source-info,0x1da2e004660,9,10647,11000,,,
code-creation,Function,11,1797872,0x1da2e004960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x3de43e4f840,^
code-source-info,0x1da2e004960,9,5278,5523,,,
code-creation,Function,11,1797903,0x1da2e004c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x3de43e4fcf0,^
code-source-info,0x1da2e004c00,9,9827,10410,,,
code-creation,Eval,10,1798243,0x34826dc5ad6,5, node:internal/socket_list:1:1,0x34826dc5980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x34826dc5ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,1798422,0x34826dc6116,126, node:internal/socket_list:1:1,0x34826dc5a50,~
code-source-info,0x34826dc6116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,1798666,0x34826dc6cb6,14,customPromiseExecFunction node:child_process:230:35,0xe435fdd9b8,~
code-source-info,0x34826dc6cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,1798758,0x34826dc8cd6,129,_forkChild node:child_process:169:20,0xe435fdd458,~
code-source-info,0x34826dc8cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
code-creation,LazyCompile,10,1807863,0x34826dc96d6,396,setupChannel node:internal/child_process:571:22,0xe435fe36a0,~
code-source-info,0x34826dc96d
code-creation,LazyCompile,10,1807989,0x34826dcbeae,72,Control node:internal/child_process:529:14,0xe435fe3ed8,~
code-source-info,0x34826dcbeae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,1808037,0x34826dcbfe6,21,EventEmitter node:events:208:22,0x1624ae2b1b0,~
code-source-info,0x34826dcbfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,1808105,0x34826dcc12e,149,EventEmitter.init node:events:327:29,0x1624ae2b5a8,~
code-source-info,0x34826dcc12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,1808408,0x34826dccc76,5, node:internal/child_process/serialization:1:1,0x34826dcc990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x34826dccc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,1808613,0x34826dcd4de,369, node:internal/child_process/serialization:1:1,0x34826dccbf0,~
code-source-info,0x34826dcd4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,1808804,0x34826dce17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x34826dcced8,~
code-source-info,0x34826dce17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,1808882,0x34826dce7d6,19,_getMaxListeners node:events:404:26,0x1624ae2b778,~
code-source-info,0x34826dce7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,1808919,0x34826dce8ce,5,get node:events:264:16,0x1624ae2b398,~
code-source-info,0x34826dce8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,1808997,0x34826dcec2e,322,arrayClone node:events:879:20,0x1624ae2c040,~
code-source-info,0x34826dcec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,1809094,0x34826dceefe,22, node:internal/child_process:706:36,0x34826dc91f0,~
code-source-info,0x34826dceefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,1809196,0x34826dcf19e,368,nextTick node:internal/process/task_queues:104:18,0x3559fe9aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x34826dcf19e
code-creation,LazyCompile,10,1809480,0x34826dcfa0e,21, node:internal/validators:222:42,0x3de43e7d268,~
code-source-info,0x34826dcfa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,1809519,0x34826dcfb0e,15,isEmpty node:internal/fixed_queue:95:10,0x3559fe9fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x34826dcfb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,1809712,0x34826dcffc6,13,isEmpty node:internal/fixed_queue:67:10,0x3559fe9fa10,~
code-source-info,0x34826dcffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,1809743,0x34826dd00b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x3559fe9a960,~
code-source-info,0x34826dd00b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,1809813,0x34826dd01ae,23,newAsyncId node:internal/async_hooks:417:20,0x3de43e78838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x34826dd01ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
code-creation,LazyCompile,10,1810714,0x34826dd168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x3de43e788d8,~
code-source-info,0x34826dd168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,1810790,0x34826dd179e,13,initHooksExist node:internal/async_hooks:479:24,0x3de43e78ac8,~
code-source-info,0x34826dd179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,1810842,0x34826dd1886,16,hasHooks node:internal/async_hooks:471:18,0x3de43e78a28,~
code-source-info,0x34826dd1886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,1810908,0x34826dd1996,59,push node:internal/fixed_queue:99:7,0x3559fe9fcd0,~
code-source-info,0x34826dd1996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,1810977,0x34826dd1ade,24,isFull node:internal/fixed_queue:71:9,0x3559fe9fa60,~
code-source-info,0x34826dd1ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,1811042,0x34826dd1bee,37,push node:internal/fixed_queue:75:7,0x3559fe9fac8,~
code-source-info,0x34826dd1bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,1811181,0x34826dd1d0e,30,onNewListener node:child_process:175:51,0x34826dc8b90,~
code-source-info,0x34826dd1d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
tick,0x7ff6348c23b0,1811382,0,0x0,3,0x7ff634553fe0,0xe435fc6508,0xe435fc2065
code-creation,LazyCompile,10,1811422,0x34826dd205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0xe435fc45e0,~
code-source-info,0x34826dd205e
code-creation,LazyCompile,10,1811596,0x34826dd242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0xe435fc4590,~
code-source-info,0x34826dd242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,1811663,0x34826dd259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0xe435fc4720,~
code-source-info,0x34826dd259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,1811917,0x34826dd2ed6,5, node:internal/source_map/source_map_cache:1:1,0x34826dd2b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x34826dd2ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,1812264,0x34826dd354e,435, node:internal/source_map/source_map_cache:1:1,0x34826dd2e50,~
code-source-info,0x34826dd354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,1812507,0x34826dd458e,5, node:internal/util/iterable_weak_map:1:1,0x34826dd4340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x34826dd458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,1812623,0x34826dd4cee,196, node:internal/util/iterable_weak_map:1:1,0x34826dd4508,~
code-source-info,0x34826dd4cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,1812648,0x34826dd4e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x34826dd4818,~
code-source-info,0x34826dd4e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,1813030,0x34826dd5aa6,5, node:internal/modules/cjs/helpers:1:1,0x34826dd57f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x34826dd5aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,1813458,0x34826dd6026,536, node:internal/modules/cjs/helpers:1:1,0x34826dd5a20,~
code-source-info,0x34826dd6026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,1813678,0x34826dd6c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x3de43e4a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x34826dd6c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,1814255,0x34826dd7b16,27,SafeMap node:internal/per_context/primordials:360:16,0x3de43e4a0a8,~
code-source-info,0x34826dd7b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,1814306,0x34826dd7c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x34826dd4610,~
code-source-info,0x34826dd7c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,1814335,0x34826dd7f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x3de43e4a168,~
code-source-info,0x34826dd7f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,1814369,0x34826dd809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x3de43e4a3b8,~
code-source-info,0x34826dd809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,1814499,0x34826dd891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0xe435fc44b0,~
code-source-info,0x34826dd891e
code-creation,LazyCompile,10,1814611,0x34826dd8ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0xe435fc4630,~
code-source-info,0x34826dd8ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,1814668,0x34826dd90c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0xe435fc4680,~
code-source-info,0x34826dd90c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,1815598,0x34826ddb016,5, node:internal/modules/cjs/loader:1:1,0x34826dda730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x34826ddb016,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,1817697,0x34826ddcdb6,2547, node:internal/modules/cjs/loader:1:1,0x34826ddaf90,~
code-source-info,0x34826ddcdb
code-creation,Eval,10,1818598,0x34826de0d76,5, node:internal/modules/package_json_reader:1:1,0x34826de0bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x34826de0d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,1818880,0x34826de0ec6,113, node:internal/modules/package_json_reader:1:1,0x34826de0cf0,~
code-source-info,0x34826de0ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,1819274,0x34826de170e,5, node:internal/process/esm_loader:1:1,0x34826de1518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x34826de170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,1819530,0x34826de19ae,182, node:internal/process/esm_loader:1:1,0x34826de1688,~
code-source-info,0x34826de19ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,1820209,0x34826de2cbe,5, node:internal/modules/esm/loader:1:1,0x34826de2830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x34826de2cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,1821554,0x34826de358e,659, node:internal/modules/esm/loader:1:1,0x34826de2c38,~
code-source-info,0x34826de358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,1821742,0x34826de3a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x34826de30b0,~
code-source-info,0x34826de3a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,1822240,0x34826de540e,5, node:internal/modules/esm/module_map:1:1,0x34826de5220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x34826de540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,1823226,0x34826de5846,175, node:internal/modules/esm/module_map:1:1,0x34826de5388,~
code-source-info,0x34826de5846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,1823871,0x34826de62ee,5, node:internal/modules/esm/module_job:1:1,0x34826de5ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x34826de62ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,1825087,0x34826de67e6,343, node:internal/modules/esm/module_job:1:1,0x34826de6268,~
code-source-info,0x34826de67e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,1825953,0x34826de843e,5, node:internal/modules/esm/assert:1:1,0x34826de8248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x34826de843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,1826397,0x34826de8716,201, node:internal/modules/esm/assert:1:1,0x34826de83b8,~
code-source-info,0x34826de8716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,1826689,0x34826de8d26,9, node:internal/modules/esm/assert:43:3,0x34826de8510,~
code-source-info,0x34826de8d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
tick,0x7ff6345e036d,1827296,1,0x7ff633fde150,2,0x7ff6349258c0,0x1da2e004e3b,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
code-creation,Eval,10,1828791,0x34826dea966,5, node:internal/modules/esm/resolve:1:1,0x34826dea1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x34826dea966,118,0,42310,C0O0C4O42310,,
code-creation,Function,10,1833371,0x34826deba96,1191, node:internal/modules/esm/resolve:1:1,0x34826dea8e0,~
code-source-info,0x34826deba
code-creation,Eval,10,1834529,0x34826def556,5, node:internal/modules/esm/get_format:1:1,0x34826def2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x34826def556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,1835009,0x34826def9d6,368, node:internal/modules/esm/get_format:1:1,0x34826def4d0,~
code-source-info,0x34826def9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,1836108,0x34826df0846,5, node:internal/modules/esm/fetch_module:1:1,0x34826df0580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x34826df0846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,1836965,0x34826df0cde,318, node:internal/modules/esm/fetch_module:1:1,0x34826df07c0,~
code-source-info,0x34826df0cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,1837233,0x34826df19be,37,get BlockList node:net:1826:16,0xe435feb7e8,~
code-source-info,0x34826df19be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,1837637,0x34826df1e9e,5, node:internal/blocklist:1:1,0x34826df1cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x34826df1e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,1837919,0x34826df28a6,359, node:internal/blocklist:1:1,0x34826df1e18,~
code-source-info,0x34826df28a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,1838374,0x34826df4176,5, node:internal/socketaddress:1:1,0x34826df3f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
tick,0x7ffa19aaef04,1867610,1,0x7ff633fde150,3,0x7ff6349258c0,0x1da2e004e3b,0x1da2e0048e5,0x34826df28f7,0x1da2e004f03,0x1da2e0048e5,0x34826df19cc,0x34826df0dd5,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
code-source-info,0x34826df4176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,1868277,0x34826df4c9e,366, node:internal/socketaddress:1:1,0x34826df40f0,~
code-source-info,0x34826df4c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,1869050,0x34826df574e,72,BlockList node:internal/blocklist:40:14,0x34826df1ed0,~
code-source-info,0x34826df574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,1869421,0x34826df5ef6,115,addAddress node:internal/blocklist:60:13,0x34826df1f70,~
code-source-info,0x34826df5ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,1869561,0x34826df6076,20,isSocketAddress node:internal/socketaddress:43:25,0x34826df41f8,~
code-source-info,0x34826df6076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,1870045,0x34826df680e,323,SocketAddress node:internal/socketaddress:47:14,0x34826df41a8,~
code-source-info,0x34826df680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,1870375,0x34826df6b5e,99, node:internal/validators:154:3,0x3de43e7d020,~
code-source-info,0x34826df6b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,1870766,0x34826df6d0e,129,validatePort node:internal/validators:211:22,0x3de43e7d1f8,~
code-source-info,0x34826df6d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,1870923,0x34826df6f5e,149, node:internal/validators:101:40,0x3de43e7ce20,~
code-source-info,0x34826df6f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
tick,0x7ffa19a4c506,1875418,0,0x0,3,0x7ff634553fe0,0x34826df68ea,0x34826df5f47,0x34826df0def,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
tick,0x7ffa19ab29f4,1936079,0,0x0,3,0x7ff634553fe0,0x34826df6f61,0x34826df68ea,0x34826df5f47,0x34826df0def,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
tick,0x7ffa19ab29f4,1936292,0,0x0,3,0x7ff634553fe0,0x34826df6f61,0x34826df68ea,0x34826df5f47,0x34826df0def,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
code-creation,LazyCompile,10,1936417,0x34826df70ee,9,isUint32 node:internal/validators:40:18,0x3de43e7ccc0,~
code-source-info,0x34826df70ee,15,835,882,C0O848C2O872C5O861C8O879,,
tick,0x7ffa19ab29f4,1936594,0,0x0,3,0x7ff634553fe0,0x34826df6f61,0x34826df68ea,0x34826df5f47,0x34826df0def,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
tick,0x7ff6349751d0,1936700,1,0x7ff633fa93b0,6,0x7ff6349258c0,0x34826df690a,0x34826df5f47,0x34826df0def,0x1da2e004f03,0x1da2e0048e5,0x34826defa82,0x1da2e004f03,0x1da2e0048e5,0x34826debf12,0x1da2e004f03,0x1da2e0048e5,0x34826de3702,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
code-creation,LazyCompile,10,1937125,0x34826df7326,229,addRange node:internal/blocklist:72:11,0x34826df1fc0,~
code-source-info,0x34826df7326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,1937776,0x34826df77a6,5, node:internal/modules/esm/formats:1:1,0x34826df7630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x34826df77a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,1938175,0x34826df7a5e,120, node:internal/modules/esm/formats:1:1,0x34826df7720,~
code-source-info,0x34826df7a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,1938638,0x34826df80e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x34826df7f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x34826df80e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,1938876,0x34826df82ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x34826df8060,~
code-source-info,0x34826df82ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,1939169,0x34826df87c6,5, node:internal/modules/esm/load:1:1,0x34826df8650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x34826df87c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,1939328,0x34826df890e,80, node:internal/modules/esm/load:1:1,0x34826df8740,~
code-source-info,0x34826df890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,1939637,0x34826df8f06,5, node:internal/modules/esm/get_source:1:1,0x34826df8d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x34826df8f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,1939885,0x34826df909e,212, node:internal/modules/esm/get_source:1:1,0x34826df8e80,~
code-source-info,0x34826df909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,1941610,0x34826dfa466,5, node:internal/fs/promises:1:1,0x34826df9cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x34826dfa466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,1944216,0x34826dfcba6,1672, node:internal/fs/promises:1:1,0x34826dfa3e0,~
code-source-info,0x34826dfcba6,127,0,23678,C0O0C493O28C499O51C505O61C511O73C517O85C523O102C529O126C535O138C541O163C547O182C553O204C559O236C564O247C570O351C574O351C580O379C586O291C592O300C598O314C604O327C610O338C616O401C620O401C624O401C626O444C634O444C640O433C646O601C654O601C660O601C666O491C672O519C678O547C684O584C690O660C698O660C704O638C710O720C718O720C724O701C730O1382C738O1382C744O1382C750O781C756O800C762O817C768O845C774O880C780O913C786O928C792O958C797O973C803O988C809O1012C815O1033C821O1050C827O1064C833O1097C839O1115C845O1139C851O1159C857O1183C863O1205C869O1234C875O1264C880O1286C886O1311C892O1350C898O1433C906O1433C912O1421C917O1616C925O1616C931O1473C937O1491C943O1515C949O1535C955O1554C961O1575C967O1595C973O1668C981O1668C985O1668C987O1726C995O1726C1001O1694C1007O1712C1012O1783C1020O1783C1026O1761C1031O1836C1039O1836C1045O1826C1050O1893C1058O1893C1064O1878C1070O1944C1078O1944C1082O1944C1084O1991C1088O1991C1092O1991C1094O2023C1098O2023C1102O2023C1104O2053C1108O2053C1112O2053C1114O2093C1118O2093C1122O2093C1124O2141C1128O2141C1132O2141C1134O2188C1138O2188C1142O2188C1144O2226C1148O2226C1152O2226C1154O2258C1158O2258C1162O2258C1164O2304C1168O2287C1174O2385C1182O2385C1188O2325C1193O2341C1198O2355C1203O2366C1208O2467C1212O2467C1214O2524C1218O2524C1220O2561C1221O2561C1223O2722C1224O2722C1226O2848C1348O6130C1358O6550C1368O6611C1380O6707C1390O6748C1422O2823C1424O23198C1430O23229C1438O23236C1444O23249C1450O23264C1456O23273C1460O23293C1470O23318C1476O23331C1482O23346C1488O23355C1494O23367C1500O23379C1506O23393C1512O23408C1518O23422C1524O23434C1530O23445C1536O23456C1542O23469C1548O23481C1554O23494C1560O23507C1566O23519C1572O23532C1578O23546C1584O23561C1590O23575C1596O23591C1602O23608C1612O23623C1632O23641C1642O23656C1652O23665C1662O23213C1671O23677,,
code-creation,Function,10,1944552,0x34826dfd55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x34826dfba40,~
code-source-info,0x34826dfd55e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0x2bf34fc0000,262144
code-creation,Eval,10,1945574,0x2bf34fc114e,5, node:internal/fs/rimraf:1:1,0x34826dffca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2bf34fc114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,1946372,0x2bf34fc174e,409, node:internal/fs/rimraf:1:1,0x34826dfff88,~
code-source-info,0x2bf34fc174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,1946910,0x2bf34fc25e6,188,from node:buffer:296:28,0x1624ae36f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2bf34fc25e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,1950532,0x2bf34fc5016,110,fromString node:buffer:432:20,0x1624ae37378,~
code-source-info,0x2bf34fc5016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,1950695,0x2bf34fc51ce,177,fromStringFast node:buffer:413:24,0x1624ae372d8,~
code-source-info,0x2bf34fc51ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,1950818,0x2bf34fc53be,36,FastBuffer node:internal/buffer:958:14,0x3559fe8bb00,~
code-source-info,0x2bf34fc53be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,1950899,0x2bf34fc54be,23,write node:buffer:593:12,0x1624ae376e8,~
code-source-info,0x2bf34fc54be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,1950985,0x2bf34fc55ae,42,alignPool node:buffer:159:19,0x1624ae36d10,~
code-source-info,0x2bf34fc55ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,1951210,0x2bf34fc596e,251,promisify node:internal/util:324:19,0x1624ae061f8,~
code-source-info,0x2bf34fc596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,1951475,0x2bf34fc5f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x1c24db9e378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2bf34fc5f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ffa19aaef04,1955080,0,0x0,3,0x7ff634553fe0,0x34826dfd070,0x1da2e004f03,0x1da2e0048e5,0x34826df912d,0x1da2e004f03,0x1da2e0048e5,0x34826df8932,0x1da2e004f03,0x1da2e0048e5,0x34826de372a,0x1da2e004f03,0x1da2e0048e5,0x34826de19fc,0x1da2e004f03,0x1da2e0048e5,0x34826ddd261,0x1da2e004f03,0x1da2e0048e5,0x34826dd90cc,0xe435fc6526,0xe435fc2065
code-creation,Eval,10,1956408,0x2bf34fc89de,5, node:internal/modules/esm/translators:1:1,0x2bf34fc8578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2bf34fc89de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,1957240,0x2bf34fc917e,715, node:internal/modules/esm/translators:1:1,0x2bf34fc8958,~
code-source-info,0x2bf34fc917e
code-creation,Eval,10,1957622,0x2bf34fca686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2bf34fca4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2bf34fca686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,1957777,0x2bf34fca8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2bf34fca600,~
code-source-info,0x2bf34fca8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,1958418,0x2bf34fcbb56,5, node:internal/vm/module:1:1,0x2bf34fcb610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2bf34fcbb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,1959104,0x2bf34fccdb6,872, node:internal/vm/module:1:1,0x2bf34fcbad0,~
code-source-info,0x2bf34fccdb6,131,0,12768,C0O0C156O32C162O32C166O32C168O72C174O89C180O115C186O141C192O164C198O181C204O206C210O231C216O256C222O271C228O288C233O304C238O315C244O337C250O391C253O391C258O377C264O486C270O486C275O434C281O462C287O605C293O605C298O530C304O551C309O575C315O897C321O897C326O923C331O643C337O668C343O694C349O727C355O763C361O807C367O841C373O870C379O1061C385O1061C390O943C396O963C402O984C408O1002C414O1021C420O1040C426O1112C429O1112C433O1112C435O1274C438O1156C444O1171C449O1191C454O1210C460O1228C465O1244C471O1259C477O1305C484O1311C488O1329C495O1345C499O1362C506O1377C510O1393C517O1407C521O1421C528O1439C532O1452C539O1469C543O1480C550O1305C552O1519C553O1519C555O1549C557O1549C559O1587C561O1587C566O1587C568O1623C571O1623C575O1623C577O1658C580O1658C584O1658C586O1707C589O1707C593O1707C595O1753C598O1753C602O1753C660O6149C688O6934C691O6934C695O6934C697O6985C700O6985C704O6985C736O7039C799O10653C827O12601C834O12623C840O12634C846O12655C852O12675C856O12726C866O12616C871O12767,,
code-creation,Function,10,1959219,0x2bf34fcd2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x2bf34fcc140,~
code-source-info,0x2bf34fcd2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,1959467,0x2bf34fce6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x34826de2d40,~
code-source-info,0x2bf34fce6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,1959539,0x2bf34fcfba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x34826de5490,~
code-source-info,0x2bf34fcfba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,1959600,0x2bf34fcfe4e,13,desc.value node:internal/per_context/primordials:334:32,0x3de43e4a000,~
code-source-info,0x2bf34fcfe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,1959642,0x2bf34fcff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x3de43e49a50,~
code-source-info,0x2bf34fcff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,1959687,0x2bf34fd008e,13,next node:internal/per_context/primordials:282:9,0x3de43e49b18,~
code-source-info,0x2bf34fd008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,1960067,0x2bf34fd0706,28,getEmbedderOptions node:internal/options:32:28,0x17a246fdac8,~
code-source-info,0x2bf34fd0706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,1960389,0x2bf34fd09ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x34826ddc298,~
code-source-info,0x2bf34fd09ae
code-creation,Eval,10,1960693,0x2bf34fd3906,5, node:internal/modules/run_main:1:1,0x2bf34fd36e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2bf34fd3906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,1960817,0x2bf34fd3bee,178, node:internal/modules/run_main:1:1,0x2bf34fd3880,~
code-source-info,0x2bf34fd3bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,1960945,0x2bf34fd441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0xe435fc46d0,~
code-source-info,0x2bf34fd441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,1961012,0x2bf34fd4636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x34826ddb788,~
code-source-info,0x2bf34fd4636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,1961049,0x2bf34fd471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0xe435fc47c0,~
code-source-info,0x2bf34fd471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,1961086,0x2bf34fd490e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0xe435fc4770,~
code-source-info,0x2bf34fd490e,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,1961138,0x2bf34fd4a36,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x2bf34fd3a78,~
code-source-info,0x2bf34fd4a36,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,1961182,0x2bf34fd4e66,68,resolveMainPath node:internal/modules/run_main:15:25,0x2bf34fd3938,~
code-source-info,0x2bf34fd4e66,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,LazyCompile,10,1961312,0x2bf34fd5066,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x34826ddbaa8,~
code-source-info,0x2bf34fd
code-creation,LazyCompile,10,1961422,0x2bf34fd5416,109,isAbsolute node:path:402:13,0x1c24db8d5d0,~
code-source-info,0x2bf34fd5416,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,1961574,0x2bf34fd56e6,85,stat node:internal/modules/cjs/loader:151:14,0x34826ddb048,~
code-source-info,0x2bf34fd56e6,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,1961643,0x2bf34fd58f6,232,toNamespacedPath node:path:618:19,0x1c24db8d6f8,~
code-source-info,0x2bf34fd58f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
tick,0x7ffa19aaf8a4,1994288,1,0x7ff634026ae0,6,0x7ff6349258c0,0x2bf34fd5717,0x2bf34fd5141,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
code-creation,LazyCompile,10,1994778,0x2bf34fd5b56,42,toRealPath node:internal/modules/cjs/loader:393:20,0x34826ddb318,~
code-source-info,0x2bf34fd5b56,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,1995986,0x2bf34fd5f6e,1042,realpathSync node:fs:2425:22,0x17a246d93f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2bf34fd5f6e
code-creation,LazyCompile,10,2023522,0x2bf34fdc696,123,getOptions node:internal/fs/utils:315:20,0x17a246e1c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2bf34fdc696,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
tick,0x7ffa19aaef04,2025807,0,0x0,3,0x7ff634553fe0,0x2bf34fd5b79,0x2bf34fd5191,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
tick,0x7ffa19aaef04,2025857,0,0x0,3,0x7ff634553fe0,0x2bf34fd5b79,0x2bf34fd5191,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
code-creation,LazyCompile,10,2025899,0x2bf34fde61e,48,assertEncoding node:internal/fs/utils:152:24,0x17a246e16a0,~
code-source-info,0x2bf34fde61e,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,2026091,0x2bf34fde736,20,toPathIfFileURL node:internal/url:1499:25,0x3559feb9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2bf34fde736,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,2028630,0x2bf34fe187e,17,isURLInstance node:internal/url:1495:23,0x3559feb9208,~
code-source-info,0x2bf34fe187e,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,2028708,0x2bf34fe19de,81, node:internal/fs/utils:669:38,0x17a246e26c0,~
code-source-info,0x2bf34fe19de,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,2028774,0x2bf34fe1bee,110, node:internal/fs/utils:358:35,0x17a246e1d38,~
code-source-info,0x2bf34fe1bee,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,2028832,0x2bf34fe1d66,16,isUint8Array node:internal/util/types:13:22,0x1624ae07418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2bf34fe1d66,17,269,356,C0O282C5O289C12O336C15O353,,
tick,0x7ff633f20a50,2029151,0,0x0,3,0x7ff634553fe0,0x2bf34fe1c08,0x2bf34fe1a22,0x2bf34fd5fa1,0x2bf34fd5b79,0x2bf34fd5191,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
code-creation,LazyCompile,10,2029420,0x2bf34fe21ce,23,splitRoot node:fs:2375:33,0x17a246d92a8,~
code-source-info,0x2bf34fe21ce,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
tick,0x7ffa19aaf8a4,2059260,1,0x7ff634027210,6,0x7ff6349258c0,0x2bf34fd604d,0x2bf34fd5b79,0x2bf34fd5191,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
code-creation,LazyCompile,10,2060126,0x2bf34fe22d6,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x17a246e1ce8,~
code-source-info,0x2bf34fe22d6,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,2060800,0x2bf34fe244e,53,nextPart node:fs:2401:31,0x17a246d93a0,~
code-source-info,0x2bf34fe244e,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
tick,0x7ff634786d21,2061513,0,0x0,0,0x7ff63478a8c0,0xe435fcba50,0x2bf34fd5914,0x2bf34fd6170,0x2bf34fd5b79,0x2bf34fd5191,0x2bf34fd4e84,0x2bf34fd4a4f,0xe435fc2089
code-creation,LazyCompile,10,2063437,0x2bf34fe25ae,34,isFileType node:fs:205:20,0x17a246d7010,~
code-source-info,0x2bf34fe25ae,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,LazyCompile,10,2064954,0x2bf34fe28be,72,encodeRealpathResult node:fs:2388:30,0x17a246d9350,~
code-source-info,0x2bf34fe28be,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,Function,11,2065277,0x1da2e005160,6232,resolve node:path:158:10,0x1c24db8d510,^
code-source-info,0x1da2e005160,41,4875,9786,,,
code-creation,Function,11,2065352,0x1da2e006a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x17a246fd848,^
code-source-info,0x1da2e006a20,91,514,620,,,
code-creation,Function,11,2065439,0x1da2e006c40,104,next node:internal/per_context/primordials:282:9,0x3de43e49b18,^
code-source-info,0x1da2e006c40,6,8270,8317,,,
code-creation,Function,11,2065646,0x1da2e006d20,252,SafeMap node:internal/per_context/primordials:360:16,0x3de43e4a0a8,^
code-source-info,0x1da2e006d20,6,10694,10711,,,
code-creation,Function,11,2065762,0x1da2e006e80,272,validateString node:internal/validators:118:24,0x3de43e7ce70,^
code-source-info,0x1da2e006e80,15,3534,3646,,,
code-creation,Function,11,2065828,0x1da2e007000,412,isWindowsDeviceRoot node:path:60:29,0x1c24db8d408,^
code-source-info,0x1da2e007000,41,1991,2136,,,
code-creation,Function,11,2065881,0x1da2e007200,544,nextPart node:fs:2401:31,0x17a246d93a0,^
code-source-info,0x1da2e007200,80,66157,66408,,,
code-creation,LazyCompile,10,2066063,0x2bf34fe32ee,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x2bf34fd3988,~
code-source-info,0x2bf34fe32ee,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,LazyCompile,10,2066254,0x2bf34fe350e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x34826ddb228,~
code-source-info,0x2bf34fe350e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,2066463,0x2bf34fe386e,234,readPackage node:internal/modules/cjs/loader:290:21,0x34826ddb1d8,~
code-source-info,0x2bf34fe386e,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,2071993,0x2bf34fe3b76,199,read node:internal/modules/package_json_reader:16:14,0x34826de0da8,~
code-source-info,0x2bf34fe3b76,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
tick,0x7ffa19aaeec4,2100095,1,0x7ff634026480,6,0x7ff6349258c0,0x2bf34fe3ba6,0x2bf34fe38a1,0x2bf34fe3568,0x2bf34fe3344,0x2bf34fd4a57,0xe435fc2089
code-creation,LazyCompile,10,2101415,0x2bf34fe46b6,70,runMainESM node:internal/modules/run_main:47:20,0x2bf34fd39d8,~
code-source-info,0x2bf34fe46b6,132,1468,1817,C0O1468C12O1504C20O1504C25O1492C30O1573C38O1573C43O1555C49O1603C54O1621C59O1621C64O1603C69O1816,,
code-creation,LazyCompile,10,2101609,0x2bf34fe48f6,222,loadESM node:internal/process/esm_loader:85:41,0x34826de1870,~
code-source-info,0x2bf34fe48f6,113,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,2101813,0x2bf34fe4f16,284,initializeLoader node:internal/process/esm_loader:50:32,0x34826de1740,~
code-source-info,0x2bf34fe4f16,113,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,2103026,0x2bf34fe5206,175,handleMainPromise node:internal/modules/run_main:58:33,0x2bf34fd3a28,~
code-source-info,0x2bf34fe5206,132,1853,2010,C10O1853C18O1868C21O1876C31O1887C34O1876C43O1921C53O1928C90O1963C93O1971C103O1983C106O1971C150O2009,,
code-creation,LazyCompile,10,2103252,0x2bf34fe5446,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x3559fe9aa00,~
code-source-info,0x2bf34fe5446,32,1563,2540,C0O1575C2O1624C7O1615C12O1615C19O1659C21O1664C23O1663C27O1689C34O1714C36O1713C46O1689C54O1793C59O1821C65O1854C70O1913C75O1943C110O1974C111O1987C115O1974C119O1993C121O2021C122O2034C128O2043C132O2021C137O2049C139O2077C140O2090C146O2099C152O2108C156O2077C161O2114C163O2142C164O2155C170O2164C176O2173C182O2182C186O2142C191O2188C193O2217C198O2217C215O2288C220O2292C225O2324C230O2324C245O2364C250O2364C256O2396C261O2396C264O2442C269O2432C274O2432C282O2445C285O2445C290O1584C296O2477C301O2477C305O2508C312O2508C317O2539,,
code-creation,LazyCompile,10,2103338,0x2bf34fe571e,43,shift node:internal/fixed_queue:108:8,0x3559fe9fd20,~
code-source-info,0x2bf34fe571e,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,2103379,0x2bf34fe5866,54,shift node:internal/fixed_queue:80:8,0x3559fe9fb30,~
code-source-info,0x2bf34fe5866,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,2103426,0x2bf34fe599e,42,emitBeforeScript node:internal/async_hooks:510:26,0x3de43e78c78,~
code-source-info,0x2bf34fe599e,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,2103474,0x2bf34fe5aee,180,pushAsyncContext node:internal/async_hooks:540:26,0x3de43e78e20,~
code-source-info,0x2bf34fe5aee,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,2103560,0x2bf34fe5d06,125, node:internal/child_process:708:22,0x34826dcee58,~
code-source-info,0x2bf34fe5d06,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,2103615,0x2bf34fe5ec6,31,listenerCount node:events:854:23,0x1624ae2bf80,~
code-source-info,0x2bf34fe5ec6,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,2103701,0x2bf34fe5fce,13,destroyHooksExist node:internal/async_hooks:487:27,0x3de43e78b88,~
code-source-info,0x2bf34fe5fce,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,2103735,0x2bf34fe60be,32,emitAfterScript node:internal/async_hooks:518:25,0x3de43e78cc8,~
code-source-info,0x2bf34fe60be,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,2103788,0x2bf34fe6226,167,popAsyncContext node:internal/async_hooks:554:25,0x3de43e78e70,~
code-source-info,0x2bf34fe6226,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,2103839,0x2bf34fe6406,13,enabledHooksExist node:internal/async_hooks:475:27,0x3de43e78a78,~
code-source-info,0x2bf34fe6406,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,2103931,0x2bf34fe655e,77, node:internal/modules/run_main:51:29,0x2bf34fe45f0,~
code-source-info,0x2bf34fe655e,132,1629,1811,C0O1664C7O1669C15O1669C24O1699C30O1699C35O1722C44O1762C55O1786C60O1786C71O1768C76O1806,,
code-creation,LazyCompile,10,2104067,0x2bf34fe67de,283,pathToFileURL node:internal/url:1458:23,0x3559feb9198,~
code-source-info,0x2bf34fe67de
code-creation,LazyCompile,10,2104159,0x2bf34fe6aae,136,URL node:internal/url:621:14,0x3559feb7fb0,~
code-source-info,0x2bf34fe6aae,39,17620,18024,C13O17688C17O17717C19O17736C23O17769C30O17784C40O17798C42O17797C46O17820C50O17825C57O17840C60O17836C65O17834C69O17859C85O17912C93O17912C103O17969C117O17969C129O17859C135O18023,,
code-creation,LazyCompile,10,2104600,0x2bf34fe6c8e,51,URLContext node:internal/url:161:14,0x3559feb7750,~
code-source-info,0x2bf34fe6c8e,39,3883,4105,C0O3893C1O3904C5O3914C7O3926C11O3938C13O3952C17O3963C19O3977C23O3988C24O3998C28O4011C29O4021C33O4034C35O4044C39O4055C40O4066C44O4079C45O4093C50O4104,,
code-creation,LazyCompile,10,2105668,0x2bf34fe6ed6,190,onParseComplete node:internal/url:533:25,0x3559feb7ce0,~
code-source-info,0x2bf34fe6ed6,39,14738,15424,C0O14854C2O14859C4O14858C8O14872C10O14882C14O14894C16O14905C20O14920C22O14944C24O14942C29O14968C43O14933C47O14994C49O15018C51O15016C56O15042C70O15007C74O15068C76O15077C80O15088C82O15108C84O15106C89O15128C101O15136C103O15097C107O15150C109O15160C113O15172C115O15185C119O15200C121O15209C125O15220C127O15230C129O15229C134O15284C136O15289C141O15309C144O15305C149O15303C153O15333C155O15338C157O15337C163O15352C168O15361C172O15377C177O15399C179O15398C183O15377C189O15423,,
code-creation,LazyCompile,10,2106175,0x2bf34fe735e,889,URLSearchParams node:internal/url:183:14,0x3559feb77f0,~
code-source-info,0x2bf34fe735e
code-creation,LazyCompile,10,2106761,0x2bf34fe793e,35,initSearchParams node:internal/url:1019:26,0x3559feb8cf8,~
code-source-info,0x2bf34fe793e,39,28156,28277,C0O28173C4O28191C6O28195C11O28209C15O28220C16O28227C17O28236C19O28240C25O28256C29O28254C34O28276,,
code-creation,LazyCompile,10,2106908,0x2bf34fe7aee,199,encodePathChars node:internal/url:1443:25,0x3559feb9148,~
code-source-info,0x2bf34fe7aee,39,40900,41605,C0O40916C8O40920C15O40965C22O41009C31O40976C38O41091C46O41109C52O41109C59O41155C66O41199C75O41166C82O41226C90O41230C97O41276C104O41320C113O41287C120O41345C128O41349C135O41395C142O41439C151O41406C158O41471C166O41475C173O41521C180O41565C189O41532C196O41586C198O41602,,
code-creation,LazyCompile,10,2107712,0x2bf34fe7d1e,70,set pathname node:internal/url:887:15,0x3559feb88e8,~
code-source-info,0x2bf34fe7d1e,39,24614,24823,C0O24663C5O24686C9O24695C11O24694C16O24717C17O24724C18O24730C29O24742C38O24765C40O24764C49O24806C54O24806C63O24730C69O24822,,
tick,0x7ff6345e7001,2107953,0,0x0,2,0x7ff634553fe0,0x2bf34fe7d29,0x7ff6349f8ee1,0x2bf34fe68f2,0x2bf34fe657c,0x2bf34fe4935,0x7ff6349bb163,0x7ff633fa4720,0x2bf34fe554b
code-creation,LazyCompile,10,2108076,0x2bf34fe7e6e,31, node:internal/url:638:21,0x3559feb8088,~
code-source-info,0x2bf34fe7e6e,39,18137,18214,C0O18147C4O18160C6O18159C10O18169C19O18177C21O18175C26O18203C30O18209,,
code-creation,LazyCompile,10,2108202,0x2bf34fe7f9e,108,onParsePathComplete node:internal/url:592:29,0x3559feb7ec0,~
code-source-info,0x2bf34fe7f9e,39,16756,17238,C0O16876C2O16881C4O16880C8O16894C10O16907C12O16905C17O16927C22O16941C24O16950C28O16963C35O16976C40O16973C46O17013C48O17022C52O17033C59O17047C61O17046C66O17043C70O17129C72O17142C74O17140C79O17162C84O17176C86O17185C90O17198C97O17211C102O17208C107O17237,,
code-creation,LazyCompile,10,2108288,0x2bf34fe813e,18,get href node:internal/url:736:11,0x3559feb8218,~
code-source-info,0x2bf34fe813e,39,20900,20940,C0O20910C4O20922C6O20921C12O20930C17O20935,,
code-creation,LazyCompile,10,2108567,0x2bf34fe840e,393, node:internal/url:684:12,0x3559feb8178,~
code-source-info,0x2bf34fe840e,39,19483,20778,C0O19500C4O19520C14O19520C19O19563C30O19671C37O19704C41O19709C43O19708C47O19791C52O19812C58O19836C67O19881C74O19890C79O19930C86O19939C91O19966C99O19975C103O19991C105O20017C109O20057C120O20076C124O20105C127O20120C142O20141C151O20184C165O20223C170O20203C176O20235C184O20256C190O20280C193O20295C208O20315C212O20324C214O20323C219O20359C225O20363C237O20397C243O20418C248O20423C255O20430C260O20441C266O20445C272O20449C277O20468C286O20505C291O20510C297O20529C304O20542C307O20565C315O20542C320O20540C330O20610C336O20624C342O20647C345O20662C360O20688C366O20704C372O20730C375O20745C390O20762C392O20773,,
code-creation,LazyCompile,10,2108959,0x2bf34fe889e,308,import node:internal/modules/esm/loader:372:15,0x34826de2f20,~
code-source-info,0x2bf34fe889e,114,11547,12117,C10O11547C18O11611C25O11611C30O11642C32O11655C41O11669C50O11714C55O11740C64O11740C70O11778C81O11973C90O11793C98O11783C100O11783C116O11821C123O11844C137O11821C143O11887C154O11888C160O11922C170O11923C175O11814C186O11765C201O12001C212O12022C217O12018C223O12007C235O12001C261O12055C270O12108C283O12112,,
code-creation,LazyCompile,10,2109115,0x2bf34fe8c06,251,getModuleJob node:internal/modules/esm/loader:285:21,0x34826de2ed0,~
code-source-info,0x2bf34fe8c06,114,8519,9368,C10O8519C18O8571C20O8604C22O8613C26O8622C33O8629C38O8796C49O8847C54O8847C59O8834C65O8940C82O8940C95O8929C118O8906C123O8914C128O9021C133O9031C138O9057C143O9031C150O9132C154O9177C159O9187C166O9213C176O9187C181O9235C185O9267C187O9278C208O9294C214O9352C226O9363,,
code-creation,LazyCompile,10,2110329,0x2bf34fe905e,425,resolve node:internal/modules/esm/loader:556:16,0x34826de3060,~
code-source-info,0x2bf34fe905e,114,17002,18544,C10O17002C32O17068C37O17068C75O17114C79O17146C91O17217C94O17217C100O17249C120O17255C125O17249C126O17379C133O17430C135O17435C140O17445C144O17474C146O17479C150O17490C157O17497C168O17542C174O17552C178O17604C185O17641C191O17662C197O17689C207O17587C220O17581C246O17749C252O17794C270O17800C275O17794C276O17929C281O17937C286O17964C297O18044C318O18050C323O18044C324O18195C330O18279C351O18285C356O18279C357O18424C366O18424C371O18496C378O18512C384O18527C400O18539,,
code-creation,LazyCompile,10,2111541,0x2bf34fe98de,939,defaultResolve node:internal/modules/esm/resolve:1128:30,0x34826deb438,~
code-source-info,0x2bf34fe98de
code-creation,LazyCompile,10,2111960,0x2bf34fec71e,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:975:49,0x34826deb258,~
code-source-info,0x2bf34fec71e,118,32653,32792,C0O32670C2O32684C7O32692C8O32705C9O32709C10O32722C16O32726C21O32735C22O32747C23O32751C26O32758C30O32789,,
code-creation,LazyCompile,10,2112284,0x2bf34fec836,81,isRelativeSpecifier node:internal/modules/esm/resolve:965:29,0x34826deb208,~
code-source-info,0x2bf34fec836,118,32350,32601,C0O32367C1O32380C7O32384C12O32414C19O32421C26O32439C32O32443C37O32452C38O32464C39O32470C41O32483C47O32487C52O32519C59O32526C66O32544C72O32548C77O32557C78O32569C79O32585C80O32598,,
code-creation,LazyCompile,10,2112474,0x2bf34fec9c6,15,get protocol node:internal/url:772:15,0x3559feb8358,~
code-source-info,0x2bf34fec9c6,39,21820,21863,C0O21830C4O21842C6O21841C10O21851C14O21858,,
code-creation,LazyCompile,10,2112590,0x2bf34fecbbe,191,checkIfDisallowedImport node:internal/modules/esm/resolve:1059:33,0x34826deb348,~
code-source-info,0x2bf34fecbbe,118,35531,36707,C0O35573C4O35619C16O35648C24O35619C29O35692C36O35701C41O35739C48O35748C53O35777C56O35781C62O35940C66O35972C73O35981C78O36015C85O36024C90O36060C106O36066C111O36060C112O36252C117O36273C127O36280C128O36297C133O36314C138O36314C145O36358C161O36364C166O36358C167O36538C183O36544C188O36538C190O36706,,
code-creation,LazyCompile,10,2112825,0x2bf34fece26,104,throwIfUnsupportedURLScheme node:internal/modules/esm/resolve:1107:37,0x34826deb3e8,~
code-source-info,0x2bf34fece26,118,36954,37425,C0O36996C4O37028C11O37037C16O37064C23O37073C30O37103C32O37158C39O37167C44O37199C51O37208C56O37248C63O37297C77O37356C88O37297C96O37254C101O37248C103O37424,,
code-creation,LazyCompile,10,2113141,0x2bf34fecfde,64,getConditionsSet node:internal/modules/esm/resolve:170:26,0x34826deaa88,~
code-source-info,0x2bf34fecfde,118,5549,5885,C0O5567C6O5614C8O5610C13O5641C18O5646C24O5681C40O5687C45O5681C46O5812C53O5819C58O5843C59O5852C63O5882,,
code-creation,LazyCompile,10,2113295,0x2bf34fed15e,171,moduleResolve node:internal/modules/esm/resolve:988:23,0x34826deb2a8,~
code-source-info,0x2bf34fed15e,118,32994,33785,C0O33069C7O33078C12O33103C19O33112C23O33235C25O33248C28O33252C34O33311C47O33322C55O33358C60O33384C66O33388C71O33404C83O33420C89O33407C99O33503C106O33514C115O33512C116O33556C120O33582C132O33593C138O33675C145O33684C150O33702C152O33718C153O33722C165O33729C170O33782,,
code-creation,LazyCompile,10,2113645,0x2bf34fed4ee,490,finalizeResolution node:internal/modules/esm/resolve:397:28,0x34826dead08,~
code-source-info,0x2bf34fed4ee
code-creation,LazyCompile,10,2113764,0x2bf34fed90e,78,get pathname node:internal/url:878:15,0x3559feb8878,~
code-source-info,0x2bf34fed90e,39,24396,24596,C0O24418C4O24423C6O24422C10O24438C14O24447C16O24446C21O24480C27O24484C30O24488C31O24502C36O24507C42O24514C47O24528C49O24538C50O24544C57O24555C60O24578C68O24555C77O24591,,
code-creation,LazyCompile,10,2113956,0x2bf34fedb66,106,fileURLToPath node:internal/url:1416:23,0x3559feb90f8,~
code-source-info,0x2bf34fedb66,39,39764,40097,C0O39776C6O39811C13O39818C22O39841C25O39846C31O39872C49O39878C54O39872C55O39949C62O39958C67O39976C77O39982C82O39976C83O40021C92O40040C101O40068C105O40094,,
code-creation,LazyCompile,10,2114108,0x2bf34fedd9e,150,get origin node:internal/url:749:13,0x3559feb82e8,~
code-source-info,0x2bf34fedd9e,39,21222,21802,C0O21306C4O21311C6O21310C10O21338C59O21386C64O21391C70O21398C78O21435C83O21455C89O21459C95O21443C101O21465C105O21472C110O21570C116O21591C117O21703C122O21735C127O21747C132O21757C137O21710C142O21763C143O21776C149O21797,,
code-creation,LazyCompile,10,2114316,0x2bf34fee086,261,getPathFromURLWin32 node:internal/url:1363:29,0x3559feb9058,~
code-source-info,0x2bf34fee086,39,37816,39214,C0O37848C5O37880C10O37906C12O37922C16O37911C21O37942C23O37954C29O37958C34O37999C41O38013C45O37999C50O38018C54O38033C56O38049C59O38046C65O38054C72O38071C79O38117C82O38114C88O38122C95O38139C100O38171C110O38177C115O38171C116O37931C121O37893C124O38321C131O38329C137O38321C144O38358C149O38369C154O38402C156O38415C161O38811C167O38825C178O38853C182O38864C183O38961C191O38961C196O38976C200O38999C202O39007C206O39015C208O39028C210O39026C217O39057C219O39055C226O39104C231O39121C241O39127C246O39121C247O39202C255O39202C260O39211,,
code-creation,LazyCompile,10,2114443,0x2bf34fee32e,19,get hostname node:internal/url:844:15,0x3559feb86c8,~
code-source-info,0x2bf34fee32e,39,23572,23619,C0O23582C4O23594C6O23593C10O23603C18O23614,,
code-creation,LazyCompile,10,2114524,0x2bf34fee456,30,tryStatSync node:internal/modules/esm/resolve:189:3,0x34826deb488,~
code-source-info,0x2bf34fee456,118,6098,6164,C0O6153C5O6117C10O6108C21O6157C24O6153C29O6164,,
code-creation,LazyCompile,10,2114692,0x2bf34fee60e,123,statSync node:fs:1543:18,0x17a246d84e8,~
code-source-info,0x2bf34fee60e,80,40711,41125,C7O40711C16O40774C21O40781C26O40820C33O40822C40O40847C45O40855C52O40860C55O40871C60O40871C66O40933C76O40855C82O40973C88O40988C96O41001C102O41030C103O41047C104O41056C109O41056C113O41088C118O41095C122O41122,,
code-creation,LazyCompile,10,2114776,0x2bf34fee7ae,37, node:internal/fs/utils:681:42,0x17a246e2710,~
code-source-info,0x2bf34fee7ae,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,2114997,0x2bf34fee8ee,64,hasNoEntryError node:fs:1480:25,0x17a246d83b8,~
code-source-info,0x2bf34fee8ee,80,39085,39287,C0O39104C6O39132C11O39148C16O39132C21O39161C27O39175C36O39179C39O39192C40O39211C46O39236C51O39242C58O39247C61O39260C62O39271C63O39284,,
code-creation,LazyCompile,10,2115153,0x2bf34feea26,576,getStatsFromBinding node:internal/fs/utils:531:29,0x17a246e24e0,~
code-source-info,0x2bf34feea
code-creation,LazyCompile,10,2115314,0x2bf34feee56,16,isBigUint64Array node:internal/util/types:53:26,0x1624ae07880,~
code-source-info,0x2bf34feee56,17,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,2116796,0x2bf34feef76,19,msFromTimeSpec node:internal/fs/utils:447:24,0x17a246e2208,~
code-source-info,0x2bf34feef76,81,11486,11547,C0O11503C2O11516C4O11514C10O11535C12O11533C15O11526C18O11544,,
code-creation,LazyCompile,10,2117222,0x2bf34fef1b6,116,Stats node:internal/fs/utils:496:15,0x17a246e2400,~
code-source-info,0x2bf34fef1b6,81,13278,13819,C0O13418C41O13418C46O13548C48O13561C52O13575C54O13588C58O13602C60O13615C64O13629C66O13646C70O13664C73O13677C77O13675C81O13701C84O13714C88O13712C92O13738C95O13751C99O13749C103O13775C106O13792C110O13790C115O13818,,
code-creation,LazyCompile,10,2117320,0x2bf34fef38e,62,StatsBase node:internal/fs/utils:401:19,0x17a246e1dd8,~
code-source-info,0x2bf34fef38e,81,10347,10648,C0O10435C2O10444C6O10454C8O10464C12O10475C14O10486C18O10498C20O10507C24O10517C26O10526C30O10536C32O10546C36O10557C38O10570C42O10584C44O10593C48O10603C50O10613C54O10624C56O10636C61O10647,,
code-creation,LazyCompile,10,2117676,0x2bf34fef586,29,dateFromMs node:internal/fs/utils:461:20,0x17a246e22a8,~
code-source-info,0x2bf34fef586,81,12012,12059,C0O12022C7O12038C10O12038C17O12049C23O12029C28O12056,,
code-creation,LazyCompile,10,2118361,0x2bf34fef68e,16,StatsBase.isDirectory node:internal/fs/utils:415:43,0x17a246e1e28,~
code-source-info,0x2bf34fef68e,81,10694,10745,C0O10714C7O10733C10O10714C15O10742,,
code-creation,LazyCompile,10,2118438,0x2bf34fef7a6,54,Stats._checkModeProperty node:internal/fs/utils:518:46,0x17a246e2450,~
code-source-info,0x2bf34fef7a6,81,14177,14405,C0O14193C8O14224C10O14220C17O14248C19O14244C26O14277C28O14273C33O14295C34O14308C35O14374C42O14381C44O14379C50O14389C53O14402,,
code-creation,LazyCompile,10,2118500,0x2bf34fef8de,16,StatsBase.isFile node:internal/fs/utils:419:38,0x17a246e1eb8,~
code-source-info,0x2bf34fef8de,81,10787,10838,C0O10807C7O10826C10O10807C15O10835,,
code-creation,RegExp,3,2118798,0x1da2e007480,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
tick,0x7ffa19aaefe4,2123291,1,0x7ff634027210,6,0x7ff6349258c0,0x2bf34fd619d,0x2bf34fed690,0x2bf34fed203,0x2bf34fe9b49,0x2bf34fe912d,0x2bf34fe8c58,0x2bf34fe8927,0x2bf34fe65a5,0x2bf34fe4935,0x7ff6349bb163,0x7ff633fa4720,0x2bf34fe554b
code-creation,LazyCompile,10,2125549,0x2bf34fefbce,37,get search node:internal/url:896:13,0x3559feb8958,~
code-source-info,0x2bf34fefbce,39,24839,24970,C0O24867C4O24872C6O24871C10O24857C15O24887C19O24915C24O24930C26O24940C27O24946C32O24957C36O24965,,
code-creation,LazyCompile,10,2125870,0x2bf34fefd16,37,get hash node:internal/url:926:11,0x3559feb8aa8,~
code-source-info,0x2bf34fefd16,39,25601,25744,C0O25632C4O25637C6O25636C10O25619C15O25652C19O25686C24O25701C26O25711C27O25717C32O25728C36O25739,,
code-creation,LazyCompile,10,2126860,0x2bf34fefea6,181,set search node:internal/url:903:13,0x3559feb89c8,~
code-source-info,0x2bf34fefea6,39,24986,25509,C0O25014C4O25019C6O25018C10O25034C17O25043C23O25069C25O25080C30O25097C31O25107C35O25122C44O25136C46O25135C51O25132C57O25178C58O25188C64O25192C69O25201C79O25210C86O25250C88O25260C92O25273C101O25286C106O25283C110O25314C114O25337C125O25351C134O25385C142O25385C154O25337C159O25459C168O25481C170O25480C174O25459C180O25508,,
code-creation,LazyCompile,10,2127100,0x2bf34ff009e,41,toUSVString node:internal/util:59:21,0x1624ae05110,~
code-source-info,0x2bf34ff009e,16,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,2127324,0x2bf34ff0216,144,set hash node:internal/url:933:11,0x3559feb8b10,~
code-source-info,0x2bf34ff0216,39,25758,26205,C0O25784C4O25789C6O25788C10O25839C15O25862C17O25882C18O25895C22O25910C31O25924C33O25923C38O25920C42O25955C43O25962C44O25975C45O25983C51O25987C56O25996C66O26003C73O26039C75O26052C79O26063C88O26076C93O26073C97O26105C108O26117C117O26150C125O26150C137O26105C143O26204,,
code-creation,LazyCompile,10,2127424,0x2bf34ff03de,51,throwIfUnsupportedURLProtocol node:internal/modules/esm/resolve:1100:39,0x34826deb398,~
code-source-info,0x2bf34ff03de,118,36749,36914,C0O36768C7O36777C12O36796C19O36805C24O36831C31O36840C36O36860C43O36866C48O36860C50O36913,,
code-creation,LazyCompile,10,2127584,0x2bf34ff0576,64,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:103:39,0x34826def678,~
code-source-info,0x2bf34ff0576,119,3548,3759,C0O3583C7O3583C13O3600C20O3635C23O3660C28O3605C35O3676C36O3688C37O3692C42O3723C46O3715C58O3732C63O3756,,
code-creation,LazyCompile,10,2127646,0x2bf34ff0ab6,18,toString node:internal/url:732:11,0x3559feb81c8,~
code-source-info,0x2bf34ff0ab6,39,20846,20886,C0O20856C4O20868C6O20867C12O20876C17O20881,,
code-creation,LazyCompile,10,2127849,0x2bf34ff0e5e,280,getFileProtocolModuleFormat node:internal/modules/esm/get_format:51:37,0x34826def5d8,~
code-source-info,0x2bf34ff0e5e,119,1588,2922,C0O1639C5O1639C10O1674C15O1674C20O1696C22O1704C27O1722C32O1729C39O1749C50O1786C51O1812C58O1830C62O1840C64O1852C66O1866C67O1872C74O1908C79O2007C83O2025C84O2042C85O2065C88O2074C93O2078C100O2098C107O2118C112O2150C117O2150C122O2206C127O2206C132O2254C139O2275C142O2291C147O2275C156O2254C162O2324C167O2395C171O2491C182O2470C191O2568C201O2545C207O2621C216O2747C229O2765C239O2708C243O2799C259O2805C264O2799C265O2874C270O2881C279O2919,,
code-creation,Function,11,2128081,0x1da2e007b20,1916,getPathFromURLWin32 node:internal/url:1363:29,0x3559feb9058,^
code-source-info,0x1da2e007b20,39,37816,39214,,,
code-creation,Function,11,2128207,0x1da2e008300,152,hasHooks node:internal/async_hooks:471:18,0x3de43e78a28,^
code-source-info,0x1da2e008300,13,16531,16579,,,
code-creation,Function,11,2128391,0x1da2e008400,1936,toNamespacedPath node:path:618:19,0x1c24db8d6f8,^
code-source-info,0x1da2e008400,41,20086,21201,,,
code-creation,Function,11,2128432,0x1da2e008c00,320,isFileType node:fs:205:20,0x17a246d7010,^
code-source-info,0x1da2e008c00,80,5489,5737,,,
code-creation,Function,11,2128464,0x1da2e008da0,280, node:internal/url:638:21,0x3559feb8088,^
code-source-info,0x1da2e008da0,39,18137,18214,,,
code-creation,Function,11,2128644,0x1da2e008f20,156,get protocol node:internal/url:772:15,0x3559feb8358,^
code-source-info,0x1da2e008f20,39,21820,21863,,,
code-creation,LazyCompile,10,2129046,0x2bf34ff17c6,275,extname node:path:836:10,0x1c24db8d838,~
code-source-info,0x2bf34ff17c
code-creation,LazyCompile,10,2129192,0x2bf34ff1a56,13,getPackageType node:internal/modules/esm/resolve:848:24,0x34826deb0c8,~
code-source-info,0x2bf34ff1a56,118,28538,28631,C0O28571C3O28571C8O28623C12O28628,,
code-creation,LazyCompile,10,2129416,0x2bf34ff1cae,173,getPackageScopeConfig node:internal/modules/esm/resolve:253:31,0x34826deab28,~
code-source-info,0x2bf34ff1cae,118,7802,8901,C0O7839C13O7839C19O7938C24O7953C32O7957C39O8035C41O8069C46O8086C49O8086C54O8069C60O8195C66O8203C68O8224C69O8259C72O8280C85O8297C91O8506C96O8538C100O8515C105O8548C107O7879C110O8587C115O8587C120O8643C127O8661C132O8709C137O8731C142O8775C147O8800C154O8820C159O8837C164O8837C170O8877C172O8898,,
code-creation,LazyCompile,10,2129731,0x2bf34ff210e,331,getPackageConfig node:internal/modules/esm/resolve:197:26,0x34826deaad8,~
code-source-info,0x2bf34ff210e,118,6331,7694,C0O6377C5O6394C10O6394C16O6408C18O6443C20O6459C21O6483C26O6501C31O6501C37O6511C42O6523C44O6578C51O6598C56O6639C61O6663C66O6711C71O6738C78O6762C83O6779C88O6779C94O6810C96O6831C97O6846C102O6873C107O6887C115O6885C125O6932C137O6991C144O7002C163O7029C168O7043C174O7029C178O7027C185O7076C192O6938C197O6932C198O7108C203O7117C208O7123C213O7129C218O7162C223O7190C233O7243C235O7267C241O7297C243O7318C249O7348C251O7423C253O7432C260O7453C265O7469C268O7511C275O7529C281O7559C287O7570C293O7581C299O7592C305O7606C312O7624C317O7641C322O7641C328O7670C330O7691,,
code-creation,LazyCompile,10,2130046,0x2bf34ff2706,3, node:internal/per_context/primordials:285:21,0x3de43e49bc0,~
code-source-info,0x2bf34ff2706,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,2130204,0x2bf34ff27fe,78,get node:internal/modules/esm/module_map:18:6,0x34826de54e0,~
code-source-info,0x2bf34ff27fe,115,604,748,C11O617C18O645C28O645C33O678C43O678C48O713C50O726C61O726C71O736C77O743,,
code-creation,LazyCompile,10,2130338,0x2bf34ff29f6,111,#createModuleJob node:internal/modules/esm/loader:321:19,0x34826de2cf0,~
code-source-info,0x2bf34ff29f6,114,10035,10886,C0O10035C17O10108C22O10555C31O10598C37O10598C42O10657C70O10657C76O10810C79O10815C84O10825C92O10851C103O10825C108O10870C110O10881,,
code-creation,LazyCompile,10,2130543,0x2bf34ff2d1e,196,ModuleJob node:internal/modules/esm/module_job:56:14,0x34826de6370,~
code-source-info,0x2bf34ff2d1e,116,1367,3272,C0O1367C27O1400C32O1400C50O1478C55O1490C59O1505C64O1527C68O1552C73O1564C77O1579C82O1595C86O1616C90O1628C94O1766C101O1787C104O1816C113O1825C122O1830C135O1787C140O1785C144O1937C149O2948C152O2962C155O2960C159O3072C169O3099C178O3107C181O3072C186O3237C190O3255C195O3271,,
code-creation,LazyCompile,10,2130647,0x2bf34ff3796,193,moduleProvider node:internal/modules/esm/loader:322:28,0x2bf34ff2920,~
code-source-info,0x2bf34ff3796,114,10108,10527,C10O10108C18O10206C21O10217C26O10222C33O10238C39O10255C43O10217C57O10206C80O10165C85O10187C90O10312C97O10324C102O10324C108O10351C110O10379C125O10385C130O10379C131O10452C153O10459C168O10520,,
code-creation,LazyCompile,10,2130814,0x2bf34ff3ba6,397,load node:internal/modules/esm/loader:401:13,0x34826de2f70,~
code-source-info,0x2bf34ff3ba6,114,12495,13760,C10O12495C60O12544C62O12549C67O12557C71O12584C73O12589C77O12598C84O12605C95O12648C101O12656C105O12681C114O12687C127O12681C153O12731C159O12772C177O12778C182O12772C183O12907C188O12922C193O12954C198O12999C210O12999C216O13108C225O13154C229O13171C242O13114C247O13108C248O13214C254O13255C275O13261C280O13255C281O13406C296O13481C299O13481C309O13517C312O13517C318O13550C337O13556C342O13550C343O13709C350O13725C356O13740C372O13755,,
code-creation,LazyCompile,10,2131019,0x2bf34ff3f6e,226,defaultLoad node:internal/modules/esm/load:13:27,0x34826df87f8,~
code-source-info,0x2bf34ff3f6e,125,380,859,C10O380C18O408C23O452C28O465C33O494C38O521C43O536C56O530C84O578C98O578C103O634C105O651C112O680C117O707C121O732C126O759C131O774C144O768C172O816C179O830C185O843C201O856,,
code-creation,LazyCompile,10,2131123,0x2bf34ff42ee,150,validateAssertions node:internal/modules/esm/assert:55:28,0x34826de8470,~
code-source-info,0x2bf34ff42ee,117,1835,2993,C12O1897C17O1897C26O1940C33O1953C37O1968C38O1999C48O2155C55O2505C66O2130C67O2142C68O2320C76O2325C83O2393C84O2405C85O2422C88O2469C93O2429C98O2475C99O2581C100O2593C101O2745C109O2750C116O2862C129O2868C134O2862C135O2939C138O2979C143O2939C149O2992,,
code-creation,LazyCompile,10,2131352,0x2bf34ff465e,430,defaultGetSource node:internal/modules/esm/get_source:30:32,0x34826df8f38,~
code-source-info,0x2bf34ff465e,126,903,1881,C10O903C18O956C25O956C31O977C33O999C40O1008C45O1028C50O1043C62O1037C92O1087C99O1096C104O1130C111O1150C114O1175C119O1130C125O1191C127O1212C134O1218C139O1212C140O1267C147O1278C154O1299C161O1319C164O1319C171O1345C180O1308C188O1384C194O1432C201O1441C206O1469C213O1478C218O1515C223O1521C236O1515C262O1575C274O1565C304O1598C311O1647C324O1707C343O1647C350O1604C355O1598C356O1778C363O1788C372O1807C377O1814C382O1823C387O1823C393O1864C405O1878,,
code-creation,LazyCompile,10,2131681,0x2bf34ff4c2e,196,readFile node:internal/fs/promises:788:24,0x34826dfb258,~
code-source-info,0x2bf34ff4c2e,127,22848,23194,C10O22848C18O22869C23O22890C28O22879C35O22939C44O22957C46O22977C48O22966C53O22994C56O23001C71O23031C72O23037C75O23058C80O23037C84O23083C98O23089C111O23083C137O23117C145O23152C151O23184C156O23124C171O23191,,
code-creation,LazyCompile,10,2131774,0x2bf34ff6846,29,checkAborted node:internal/fs/promises:320:22,0x34826dfa588,~
code-source-info,0x2bf34ff6846,127,7483,7549,C0O7497C7O7507C16O7523C21O7529C26O7523C28O7548,,
code-creation,LazyCompile,10,2131824,0x2bf34ff69ee,182,open node:internal/fs/promises:450:20,0x34826dfa768,~
code-source-info,0x2bf34ff69ee,127,11766,12079,C10O11766C18O11791C23O11798C29O11845C34O11845C39O11870C55O11877C62O11916C69O11950C72O11958C79O11973C82O11984C87O11984C95O12061C104O11958C117O11944C142O11923C157O12076,,
code-creation,Function,11,2134323,0x1da2e009020,876, node:internal/validators:154:3,0x3de43e7d020,^
code-source-info,0x1da2e009020,15,4537,5108,,,
code-creation,Function,11,2134389,0x1da2e009400,340,URLContext node:internal/url:161:14,0x3559feb7750,^
code-source-info,0x1da2e009400,39,3883,4105,,,
code-creation,Function,11,2134685,0x1da2e0095c0,1468,onParseComplete node:internal/url:533:25,0x3559feb7ce0,^
code-source-info,0x1da2e0095c0,39,14738,15424,,,
code-creation,Function,11,2134749,0x1da2e009be0,956,URL node:internal/url:621:14,0x3559feb7fb0,^
code-source-info,0x1da2e009be0,39,17620,18024,,,
code-creation,Function,11,2134795,0x1da2e00a000,188,isURLInstance node:internal/url:1495:23,0x3559feb9208,^
code-source-info,0x1da2e00a000,39,42921,43020,,,
code-creation,LazyCompile,10,2135124,0x2bf34ff736e,515,stringToFlags node:internal/fs/utils:556:23,0x17a246e2530,~
code-source-info,0x2bf34ff736e
code-creation,LazyCompile,10,2135361,0x2bf34ff775e,97,parseFileMode node:internal/validators:59:23,0x3de43e7cd10,~
code-source-info,0x2bf34ff775e,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,2135501,0x2bf34ff78f6,206, node:internal/validators:84:3,0x3de43e7cdd0,~
code-source-info,0x2bf34ff78f6,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,2135584,0x2bf34ff7abe,9,isInt32 node:internal/validators:36:17,0x3de43e7c7b0,~
code-source-info,0x2bf34ff7abe,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,2136432,0x2bf34ff7d6e,263,link node:internal/modules/esm/module_job:69:18,0x2bf34ff2ba0,~
code-source-info,0x2bf34ff7d6e,116,1937,2889,C4O1937C26O1958C36O1983C48O1972C73O1970C77O2005C89O2017C98O2035C100O2024C104O2005C108O2357C110O2357C112O2385C117O2390C122O2397C132O2397C138O2728C140O2765C151O2786C156O2782C162O2771C174O2765C199O2825C210O2847C218O2843C224O2832C238O2882,,
code-creation,LazyCompile,10,2136536,0x2bf34ff7ff6,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:406:37,0x3de43e4a548,~
code-source-info,0x2bf34ff7ff6,6,11986,12074,C0O12018C13O12018C18O12074,,
code-creation,LazyCompile,10,2136720,0x2bf34ff81ce,216,set node:internal/modules/esm/module_map:23:6,0x34826de5530,~
code-source-info,0x2bf34ff81ce,115,755,1288,C11O768C21O801C31O801C36O834C46O834C51O869C55O888C57O877C62O898C73O955C91O961C96O955C97O1024C109O1041C124O1066C126O1062C137O1106C148O1024C152O1165C154O1171C165O1171C178O1183C183O1183C188O1208C190O1231C194O1243C196O1256C210O1256C215O1283,,
code-creation,LazyCompile,10,2136825,0x2bf34ff83ce,89,logger node:internal/util/debuglog:95:18,0x1624ae21f90,~
code-source-info,0x2bf34ff83ce,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,2136914,0x2bf34ff8536,140,debug node:internal/util/debuglog:76:15,0x1624ae21ef0,~
code-source-info,0x2bf34ff8536,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,2136988,0x2bf34ff86e6,41,init node:internal/util/debuglog:72:16,0x1624ae21ea0,~
code-source-info,0x2bf34ff86e6,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,2137092,0x2bf34ff87d6,2,testEnabled node:internal/util/debuglog:32:19,0xe435fd81b0,~
code-source-info,0x2bf34ff87d6,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,2137196,0x2bf34ff896e,116,debuglogImpl node:internal/util/debuglog:49:22,0x1624ae21cf0,~
code-source-info,0x2bf34ff896e,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,2137265,0x2bf34ff8b26,10, node:internal/modules/esm/module_map:9:63,0x34826de5440,~
code-source-info,0x2bf34ff8b26,115,271,298,C0O284C2O290C9O297,,
code-creation,LazyCompile,10,2137303,0x2bf34ff8bd6,2,noop node:internal/util/debuglog:47:14,0x1624ae21ca0,~
code-source-info,0x2bf34ff8bd6,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,2137349,0x2bf34ff8c8e,10, node:internal/modules/esm/loader:381:15,0x2bf34fe8708,~
code-source-info,0x2bf34ff8c8e,114,11893,11911,C0O11906C5O11906C9O11911,,
code-creation,LazyCompile,10,2137483,0x2bf34ff90e6,433,run node:internal/modules/esm/module_job:193:12,0x34826de6460,~
code-source-info,0x2bf34ff90e6,116,7177,8381,C10O7177C18O7198C23O7198C35O7187C58O7234C61O7265C66O7301C71O7308C76O7308C90O7290C128O7368C133O7373C143O7380C152O7415C158O7453C163O7415C169O7474C182O7484C186O7521C196O7553C204O7525C211O7588C224O7598C228O7688C235O7719C240O7726C248O7688C259O7758C267O7808C272O7815C277O7758C292O7836C297O7891C302O7919C307O7926C312O7892C318O7959C325O7964C330O7991C344O8140C358O8082C364O8163C370O8243C376O8001C380O8324C382O8324C383O8345C388O8367C408O8376,,
code-creation,LazyCompile,10,2137601,0x2bf34ff9416,24,instantiate node:internal/modules/esm/module_job:102:14,0x34826de63c0,~
code-source-info,0x2bf34ff9416,116,3289,3428,C0O3308C6O3370C11O3370C15O3363C19O3410C23O3423,,
code-creation,LazyCompile,10,2137829,0x2bf34ff9b1e,935,_instantiate node:internal/modules/esm/module_job:109:21,0x34826de6410,~
code-source-info,0x2bf34ff9b1e
code-creation,LazyCompile,10,2138028,0x2bf34ffa196,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:111:38,0x2bf34ff9860,~
code-source-info,0x2bf34ffa196,116,3535,3840,C10O3535C18O3565C23O3581C28O3581C35O3608C46O3615C47O3632C52O3644C57O3644C62O3706C74O3690C100O3721C111O3743C118O3771C123O3805C126O3771C134O3739C140O3728C154O3833,,
code-creation,LazyCompile,10,2138291,0x2bf34ffa52e,627,processPromiseRejections node:internal/process/promises:211:34,0x3559fe9e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x2bf34ffa52e
tick,0x7ffa19a37223,2139190,0,0x0,3,0x7ff634553fe0,0x2bf34fe5563
code-creation,LazyCompile,10,2139214,0x2bf34ffb486,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x3559fe9d9a8,~
code-source-info,0x2bf34ffb486,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
code-creation,LazyCompile,10,2139349,0x2bf34ffb5a6,112,FileHandle node:internal/fs/promises:117:14,0x34826dfb2a8,~
code-source-info,0x2bf34ffb5a6,127,2979,3152,C3O2999C11O2999C40O3013C45O3018C50O3027C54O3046C59O3051C67O3058C69O3082C77O3056C81O3098C86O3103C91O3110C95O3120C100O3125C104O3140C111O3151,,
code-creation,LazyCompile,10,2139444,0x2bf34ffb726,63,MixedEventEmitter node:internal/event_target:964:16,0x2bf34fc5d18,~
code-source-info,0x2bf34ffb726,44,26760,26894,C0O26760C8O26779C15O26786C21O26822C25O26831C29O26822C41O26845C48O26867C54O26845C62O26893,,
code-creation,LazyCompile,10,2139722,0x2bf34ffba0e,601,readFileHandle node:internal/fs/promises:360:30,0x34826dfa628,~
code-source-info,0x2bf34ffba0e
code-creation,LazyCompile,10,2139830,0x2bf34ffbe56,8,get fd node:internal/fs/promises:130:9,0x34826dfb360,~
code-source-info,0x2bf34ffbe56,127,3229,3261,C0O3239C2O3251C4O3250C7O3256,,
code-creation,LazyCompile,10,2139905,0x2bf34ffbfd6,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:418:43,0x3de43e4a600,~
code-source-info,0x2bf34ffbfd6,6,12582,12862,C0O12582C13O12718C27O12718C32O12862,,
code-creation,LazyCompile,10,2139963,0x2bf34ffc166,46, node:internal/per_context/primordials:421:15,0x2bf34ffbf28,~
code-source-info,0x2bf34ffc166,6,12730,12857,C0O12847C14O12745C20O12820C28O12827C34O12846C39O12847C45O12857,,
code-creation,LazyCompile,10,2140056,0x2bf34ffc2ae,27,SafePromise node:internal/per_context/primordials:402:16,0x3de43e4a4f8,~
code-source-info,0x2bf34ffc2ae,6,11906,11937,C3O11919C7O11925C11O11919C26O11936,,
code-creation,LazyCompile,10,2140110,0x2bf34ffc3a6,22, node:internal/per_context/primordials:422:21,0x2bf34ffc0b0,~
code-source-info,0x2bf34ffc3a6,6,12761,12810,C0O12771C16O12771C21O12810,,
code-creation,LazyCompile,10,2140194,0x2bf34ffc49e,19,allocUnsafeSlow node:buffer:383:50,0x1624ae371a8,~
code-source-info,0x2bf34ffc49e,24,11607,11675,C0O11619C5O11619C9O11640C14O11647C18O11672,,
code-creation,LazyCompile,10,2140254,0x2bf34ffc5ae,54, node:buffer:349:36,0x1624ae37080,~
code-source-info,0x2bf34ffc5ae,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,2140346,0x2bf34ffc6d6,30,validateNumber node:internal/validators:123:24,0x3de43e7cf10,~
code-source-info,0x2bf34ffc6d6,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,2140410,0x2bf34ffc806,71,createUnsafeBuffer node:internal/buffer:1059:28,0x3559fe8bd18,~
code-source-info,0x2bf34ffc806,25,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
tick,0x7ffa19ab1d94,2154305,0,0x0,8
code-creation,LazyCompile,10,2155280,0x2bf34ffcaf6,248,close node:internal/fs/promises:190:11,0x34826dfd4b0,~
code-source-info,0x2bf34ffcaf6,127,4415,5236,C0O4428C7O4437C9O4436C15O4442C20O4459C27O4466C30O4483C31O4498C38O4507C40O4506C45O4532C52O4544C54O4543C57O4559C58O4574C65O4579C73O4585C77O4594C84O4603C86O4602C91O4610C96O4626C103O4631C108O4636C112O4649C119O4654C126O4671C136O4714C138O4713C142O4723C147O4723C157O4671C162O4669C168O4815C175O4820C182O4837C189O4879C199O4875C210O4837C215O4835C219O5179C222O5184C230O5184C235O5204C242O5216C244O5215C247O5231,,
tick,0x7ffa19aaef04,2184527,0,0x0,3,0x7ff634553fe0,0x7ff634a407dc
code-creation,LazyCompile,10,2184911,0x2bf34ffce5e,17, node:internal/fs/promises:204:9,0x2bf34ffc8e0,~
code-source-info,0x2bf34ffce5e,127,4741,4783,C0O4749C7O4754C11O4769C16O4782,,
code-creation,LazyCompile,10,2185458,0x2bf34ffd1f6,193,moduleStrategy node:internal/modules/esm/translators:112:56,0x2bf34fc8ce0,~
code-source-info,0x2bf34ffd1f6,129,3253,3705,C0O3253C23O3280C36O3280C41O3325C46O3334C52O3356C59O3356C64O3393C76O3429C81O3393C85O3455C106O3455C112O3504C119O3515C124O3527C129O3531C134O3568C146O3653C150O3527C156O3688C168O3702,,
code-creation,LazyCompile,10,2185648,0x2bf34ffdf6e,83,assertBufferSource node:internal/modules/esm/translators:74:28,0x2bf34fc8ab0,~
code-source-info,0x2bf34ffdf6e,129,2103,2510,C0O2138C10O2190C11O2197C12O2254C15O2254C19O2214C24O2233C29O2274C35O2301C41O2332C42O2339C43O2348C50O2401C77O2354C82O2348,,
code-creation,LazyCompile,10,2185737,0x2bf34ffe0c6,31,lazyTypes node:internal/modules/esm/translators:22:19,0x2bf34fc8a10,~
code-source-info,0x2bf34ffe0c6,129,417,514,C0O425C6O446C10O460C11O464C17O480C24O478C30O511,,
code-creation,LazyCompile,10,2185918,0x2bf34ffe1de,72,stringify node:internal/modules/esm/translators:90:19,0x2bf34fc8b00,~
code-source-info,0x2bf34ffe1de,129,2532,2737,C0O2544C6O2574C8O2586C9O2590C20O2590C25O2645C33O2678C36O2674C45O2694C50O2653C56O2706C61O2721C66O2721C71O2734,,
code-creation,LazyCompile,10,2186242,0x2bf34ffe3ce,206,TextDecoder node:internal/encoding:380:16,0x3559fe93fe8,~
script-source,27,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x2bf34ffe3ce,27,10699,11509,C15O10699C21O10743C25O10776C35O10791C43O10776C48O10927C53O10927C58O10966C60O10998C69O11004C74O10998C75O11067C77O11077C81O11127C94O11135C103O11188C116O11200C125O11265C130O11265C136O11298C138O11333C147O11339C152O11333C153O11390C157O11395C161O11405C165O11420C169O11425C174O11434C178O11451C182O11456C187O11464C191O11480C195O11485C200O11496C205O11508,,
tick,0x7ff6349938ff,2188039,0,0x0,0,0x2bf34ff3c5d,0x7ff6349bb163
code-creation,LazyCompile,10,2188131,0x2bf34fff856,55,getEncodingFromLabel node:internal/encoding:314:30,0x3559fe93d20,~
code-source-info,0x2bf34fff856,27,8982,9136,C0O9007C5O9017C10O9017C16O9032C18O9055C20O9066C21O9070C26O9087C34O9117C39O9117C44O9091C49O9087C54O9133,,
code-creation,LazyCompile,10,2188343,0x2bf34fffb66,227,decode node:internal/encoding:409:11,0x3559fe94108,~
code-source-info,0x2bf34fffb66,27,11525,12371,C8O11534C25O11564C30O11564C34O11594C41O11598C47O11634C52O11642C56O11654C61O11655C69O11682C76O11687C82O11724C102O11730C107O11724C108O11904C118O11919C126O11904C131O12055C133O12065C137O12113C153O12126C159O12170C168O12183C170O12182C180O12170C186O12215C190O12255C197O12304C207O12261C212O12255C213O12347C221O12347C226O12364,,
code-creation,LazyCompile,10,2188460,0x2bf34fffd8e,37,validateDecoder node:internal/encoding:65:25,0x3559fe93c80,~
code-source-info,0x2bf34fffd8e,27,1357,1461,C0O1368C7O1391C9O1390C14O1401C19O1416C29O1422C34O1416C36O1460,,
new,MemoryChunk,0x3c255140000,262144
code-creation,LazyCompile,10,2188691,0x2bf34ffff06,162,toString node:buffer:783:46,0x1624ae38fc0,~
code-source-info,0x2bf34ffff06,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,2188906,0x3c255141336,499,getEncodingOps node:buffer:679:24,0x1624ae38e18,~
code-source-info,0x3c
code-creation,LazyCompile,10,2189235,0x3c25514171e,12,slice node:buffer:603:12,0x1624ae37ac8,~
code-source-info,0x3c25514171e,24,17607,17653,C0O17632C5O17632C11O17653,,
code-creation,LazyCompile,10,2189412,0x3c2551419ce,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x34826dd2ff8,~
code-source-info,0x3c2551419ce,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,2189549,0x3c255142426,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x34826dd2f58,~
code-source-info,0x3c255142426,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,2189646,0x3c25514259e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x34826dd2fa8,~
code-source-info,0x3c25514259e,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,2189734,0x3c255142716,30,validateBoolean node:internal/validators:139:25,0x3de43e7cfb0,~
code-source-info,0x3c255142716,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,2189821,0x3c25514280e,10, node:internal/modules/esm/translators:42:63,0x2bf34fc8c90,~
code-source-info,0x3c25514280e,129,1058,1085,C0O1071C2O1077C9O1084,,
code-creation,Script,10,2189974,0x3c255142b26,64, file:///C:/Users/nicolas/OneDrive/Escritorio/faker/src/forkCalculo.js:1:1,0x3c255142970,~
script-source,133,file:///C:/Users/nicolas/OneDrive/Escritorio/faker/src/forkCalculo.js,\x0d\n/*\x0d\nexport function sumar() {\x0d\n    let suma = 0;\x0d\n    for (let i = 0; i < 5e9; i++) {\x0d\n        suma += i;\x0d\n    }\x0d\n    return suma;\x0d\n}*/\x0d\n\x0d\nprocess.on('message'\x2C function (cantidadvalor) {\x0d\n;\x0d\n  \x0d\n    function calculo (){\x0d\n        let cantidad = cantidadvalor;\x0d\n        let resultado= []\x0d\n        \x0d\n        for (let i =0 ; i < cantidad ; i++){\x0d\n            resultado.push(Math.floor(Math.random() * 1000 + 1))\x0d\n        }\x0d\n        return resultado\x0d\n        }\x0d\n        \x0d\n\x0d\n   const calculorandom = calculo()\x0d\n   process.send( calculorandom )\x0d\n\x0d\n});\x0d\n
code-source-info,0x3c255142b26,133,0,549,C10O0C15O0C35O0C39O141C43O149C56O149C63O549,,
code-creation,LazyCompile,10,2190274,0x3c255142f3e,5,get node:internal/bootstrap/pre_execution:370:8,0x34826dd8478,~
code-source-info,0x3c255142f3e,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,2190418,0x3c25514305e,44,refCounted node:internal/child_process:539:13,0xe435fe3f28,~
code-source-info,0x3c25514305e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,2190537,0x3c2551432ee,15, node:internal/modules/esm/loader:382:15,0x2bf34fe8758,~
code-source-info,0x3c2551432ee,114,11928,11965,C0O11931C5O11951C10O11951C14O11965,,
code-creation,LazyCompile,10,2190729,0x3c25514345e,307,removeListener node:events:689:28,0x1624ae2bcd8,~
code-source-info,0x3c25514345e
code-creation,LazyCompile,10,2191021,0x3c255143746,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3de43e7dd70,~
code-source-info,0x3c255143746,93,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,2191117,0x3c25514388e,30,onRemoveListener node:child_process:178:57,0x34826dc8be0,~
code-source-info,0x3c25514388e,99,5444,5535,C0O5458C2O5467C9O5489C14O5507C19O5515C24O5515C29O5534,,
tick,0x7ffa19ab1d94,2202882,0,0x0,8
tick,0x7ffa19ab1d94,2217537,0,0x0,8
tick,0x7ffa19ab1d94,2231659,0,0x0,8
tick,0x7ffa19ab1d94,2253780,0,0x0,8
tick,0x7ffa19ab1d94,2270910,0,0x0,8
tick,0x7ffa19ab1d94,2278611,0,0x0,8
tick,0x7ffa19ab1d94,2294707,0,0x0,8
tick,0x7ffa19ab1d94,2310690,0,0x0,8
tick,0x7ffa19ab1d94,2326779,0,0x0,8
tick,0x7ffa19ab1d94,2342273,0,0x0,8
tick,0x7ffa19ab1d94,2357891,0,0x0,8
tick,0x7ffa19ab1d94,2373180,0,0x0,8
tick,0x7ffa19ab1d94,2388817,0,0x0,8
tick,0x7ffa19ab1d94,2404981,0,0x0,8
tick,0x7ffa19ab1d94,2419580,0,0x0,8
tick,0x7ffa19ab1d94,2436505,0,0x0,8
tick,0x7ffa19ab1d94,2451861,0,0x0,8
tick,0x7ffa19ab1d94,2467634,0,0x0,8
tick,0x7ffa19ab1d94,2483854,0,0x0,8
tick,0x7ffa19ab1d94,2498600,0,0x0,8
tick,0x7ffa19ab1d94,2514501,0,0x0,8
tick,0x7ffa19ab1d94,2529141,0,0x0,8
tick,0x7ffa19ab1d94,2544622,0,0x0,8
tick,0x7ffa19ab1d94,2560283,0,0x0,8
tick,0x7ffa19ab1d94,2575583,0,0x0,8
tick,0x7ffa19ab1d94,2591305,0,0x0,8
tick,0x7ffa19ab1d94,2606771,0,0x0,8
tick,0x7ffa19ab1d94,2622330,0,0x0,8
tick,0x7ffa19ab1d94,2637583,0,0x0,8
tick,0x7ffa19ab1d94,2653203,0,0x0,8
tick,0x7ffa19ab1d94,2668782,0,0x0,8
tick,0x7ffa19ab1d94,2683905,0,0x0,8
tick,0x7ffa19ab1d94,2699131,0,0x0,8
tick,0x7ffa19ab1d94,2715171,0,0x0,8
tick,0x7ffa19ab1d94,2731643,0,0x0,8
tick,0x7ffa19ab1d94,2746311,0,0x0,8
tick,0x7ffa19ab1d94,2763659,0,0x0,8
tick,0x7ffa19ab1d94,2777586,0,0x0,8
tick,0x7ffa19ab1d94,2793480,0,0x0,8
tick,0x7ffa19ab1d94,2888793,0,0x0,8
tick,0x7ffa19ab1d94,2910856,0,0x0,8
tick,0x7ffa19ab1d94,2934129,0,0x0,8
tick,0x7ffa19ab1d94,2968486,0,0x0,8
tick,0x7ffa19ab1d94,2997350,0,0x0,8
tick,0x7ffa19ab1d94,3038595,0,0x0,8
tick,0x7ffa19ab1d94,3050034,0,0x0,8
tick,0x7ffa19ab1d94,3068243,0,0x0,8
tick,0x7ffa19ab1d94,3079360,0,0x0,8
tick,0x7ffa19ab1d94,3098781,0,0x0,8
tick,0x7ffa19ab1d94,3112148,0,0x0,8
tick,0x7ffa19ab1d94,3128332,0,0x0,8
tick,0x7ffa19ab1d94,3143594,0,0x0,8
tick,0x7ffa19ab1d94,3161868,0,0x0,8
tick,0x7ffa19ab1d94,3175034,0,0x0,8
tick,0x7ffa19ab1d94,3188511,0,0x0,8
tick,0x7ffa19ab1d94,3216477,0,0x0,8
tick,0x7ffa19ab1d94,3241789,0,0x0,8
tick,0x7ffa19ab1d94,3260529,0,0x0,8
tick,0x7ffa19ab1d94,3276876,0,0x0,8
tick,0x7ffa19ab1d94,3306800,0,0x0,8
tick,0x7ffa19ab1d94,3328776,0,0x0,8
tick,0x7ffa19ab1d94,3346928,0,0x0,8
tick,0x7ffa19ab1d94,3360942,0,0x0,8
tick,0x7ffa19ab1d94,3377468,0,0x0,8
tick,0x7ffa19ab1d94,3392958,0,0x0,8
tick,0x7ffa19ab1d94,3404384,0,0x0,8
tick,0x7ffa19ab1d94,3436208,0,0x0,8
tick,0x7ffa19ab1d94,3461221,0,0x0,8
tick,0x7ffa19ab1d94,3478623,0,0x0,8
tick,0x7ffa19ab1d94,3490877,0,0x0,8
tick,0x7ffa19ab1d94,3515885,0,0x0,8
tick,0x7ffa19ab1d94,3550540,0,0x0,8
tick,0x7ffa19ab1d94,3567207,0,0x0,8
tick,0x7ffa19ab1d94,3585167,0,0x0,8
tick,0x7ffa19ab1d94,3595339,0,0x0,8
tick,0x7ffa19ab1d94,3606323,0,0x0,8
tick,0x7ffa19ab1d94,3625376,0,0x0,8
tick,0x7ffa19ab1d94,3650010,0,0x0,8
tick,0x7ffa19ab1d94,3662041,0,0x0,8
tick,0x7ffa19ab1d94,3682582,0,0x0,8
tick,0x7ffa19ab1d94,3705599,0,0x0,8
tick,0x7ffa19ab1d94,3721449,0,0x0,8
tick,0x7ffa19ab1d94,3745412,0,0x0,8
tick,0x7ffa19ab1d94,3755978,0,0x0,8
tick,0x7ffa19ab1d94,3778220,0,0x0,8
tick,0x7ffa19ab1d94,3787899,0,0x0,8
tick,0x7ffa19ab1d94,3809313,0,0x0,8
tick,0x7ffa19ab1d94,3823248,0,0x0,8
tick,0x7ffa19ab1d94,3833713,0,0x0,8
tick,0x7ffa19ab1d94,3859796,0,0x0,8
tick,0x7ffa19ab1d94,3903443,0,0x0,8
tick,0x7ffa19ab1d94,3927132,0,0x0,8
tick,0x7ffa19ab1d94,3966430,0,0x0,8
tick,0x7ffa19ab1d94,3984464,0,0x0,8
tick,0x7ffa19ab1d94,4021951,0,0x0,8
tick,0x7ffa19ab1d94,4053722,0,0x0,8
tick,0x7ffa19ab1d94,4063020,0,0x0,8
tick,0x7ffa19ab1d94,4087717,0,0x0,8
tick,0x7ffa19ab1d94,4101838,0,0x0,8
tick,0x7ffa19ab1d94,4117891,0,0x0,8
tick,0x7ffa19ab1d94,4126843,0,0x0,8
tick,0x7ffa19ab1d94,4138396,0,0x0,8
tick,0x7ffa19ab1d94,4163582,0,0x0,8
tick,0x7ffa19ab1d94,4176129,0,0x0,8
tick,0x7ffa19ab1d94,4204694,0,0x0,8
tick,0x7ffa19ab1d94,4224845,0,0x0,8
tick,0x7ffa19ab1d94,4234404,0,0x0,8
tick,0x7ffa19ab1d94,4253488,0,0x0,8
tick,0x7ffa19ab1d94,4275063,0,0x0,8
tick,0x7ffa19ab1d94,4290575,0,0x0,8
tick,0x7ffa19ab1d94,4300409,0,0x0,8
tick,0x7ffa19ab1d94,4319706,0,0x0,8
tick,0x7ffa19ab1d94,4333693,0,0x0,8
tick,0x7ffa19ab1d94,4352971,0,0x0,8
tick,0x7ffa19ab1d94,4365616,0,0x0,8
tick,0x7ffa19ab1d94,4376986,0,0x0,8
tick,0x7ffa19ab1d94,4389389,0,0x0,8
tick,0x7ffa19ab1d94,4402445,0,0x0,8
tick,0x7ffa19ab1d94,4431560,0,0x0,8
tick,0x7ffa19ab1d94,4436947,0,0x0,8
tick,0x7ffa19ab1d94,4460790,0,0x0,8
tick,0x7ffa19ab1d94,4466450,0,0x0,8
tick,0x7ffa19ab1d94,4485729,0,0x0,8
tick,0x7ffa19ab1d94,4496575,0,0x0,8
tick,0x7ffa19ab1d94,4520277,0,0x0,8
tick,0x7ffa19ab1d94,4528304,0,0x0,8
tick,0x7ffa19ab1d94,4548296,0,0x0,8
tick,0x7ffa19ab1d94,4562360,0,0x0,8
tick,0x7ffa19ab1d94,4579669,0,0x0,8
tick,0x7ffa19ab1d94,4599362,0,0x0,8
tick,0x7ffa19ab1d94,4610145,0,0x0,8
tick,0x7ffa19ab1d94,4628153,0,0x0,8
tick,0x7ffa19ab1d94,4637239,0,0x0,8
tick,0x7ffa19ab1d94,4653573,0,0x0,8
tick,0x7ffa19ab1d94,4669462,0,0x0,8
tick,0x7ffa19ab1d94,4683877,0,0x0,8
tick,0x7ffa19ab1d94,4705647,0,0x0,8
tick,0x7ffa19ab1d94,4719476,0,0x0,8
tick,0x7ffa19ab1d94,4735151,0,0x0,8
tick,0x7ffa19ab1d94,4751600,0,0x0,8
tick,0x7ffa19ab1d94,4765547,0,0x0,8
tick,0x7ffa19ab1d94,4783379,0,0x0,8
tick,0x7ffa19ab1d94,4807097,0,0x0,8
tick,0x7ffa19ab1d94,4812028,0,0x0,8
tick,0x7ffa19ab1d94,4829151,0,0x0,8
tick,0x7ffa19ab1d94,4842899,0,0x0,8
tick,0x7ffa19ab1d94,4858704,0,0x0,8
tick,0x7ffa19ab1d94,4875470,0,0x0,8
tick,0x7ffa19ab1d94,4887782,0,0x0,8
tick,0x7ffa19ab1d94,4903426,0,0x0,8
tick,0x7ffa19ab1d94,4918886,0,0x0,8
tick,0x7ffa19ab1d94,4934853,0,0x0,8
tick,0x7ffa19ab1d94,4950009,0,0x0,8
tick,0x7ffa19ab1d94,4965413,0,0x0,8
tick,0x7ffa19ab1d94,4981530,0,0x0,8
tick,0x7ffa19ab1d94,4998843,0,0x0,8
tick,0x7ffa19ab1d94,5012199,0,0x0,8
tick,0x7ffa19ab1d94,5027928,0,0x0,8
tick,0x7ffa19ab1d94,5044764,0,0x0,8
tick,0x7ffa19ab1d94,5058834,0,0x0,8
tick,0x7ffa19ab1d94,5074509,0,0x0,8
tick,0x7ffa19ab1d94,5089729,0,0x0,8
tick,0x7ffa19ab1d94,5105783,0,0x0,8
tick,0x7ffa19ab1d94,5121698,0,0x0,8
tick,0x7ffa19ab1d94,5137466,0,0x0,8
tick,0x7ffa19ab1d94,5152921,0,0x0,8
tick,0x7ffa19ab1d94,5168976,0,0x0,8
tick,0x7ffa19ab1d94,5185016,0,0x0,8
tick,0x7ffa19ab1d94,5202377,0,0x0,8
tick,0x7ffa19ab1d94,5217789,0,0x0,8
tick,0x7ffa19ab1d94,5233085,0,0x0,8
tick,0x7ffa19ab1d94,5249070,0,0x0,8
tick,0x7ffa19ab1d94,5264755,0,0x0,8
tick,0x7ffa19ab1d94,5281212,0,0x0,8
tick,0x7ffa19ab1d94,5296892,0,0x0,8
tick,0x7ffa19ab1d94,5311366,0,0x0,8
tick,0x7ffa19ab1d94,5326926,0,0x0,8
tick,0x7ffa19ab1d94,5342754,0,0x0,8
tick,0x7ffa19ab1d94,5357578,0,0x0,8
tick,0x7ffa19ab1d94,5373929,0,0x0,8
tick,0x7ffa19ab1d94,5389262,0,0x0,8
tick,0x7ffa19ab1d94,5404638,0,0x0,8
tick,0x7ffa19ab1d94,5419816,0,0x0,8
tick,0x7ffa19ab1d94,5435144,0,0x0,8
tick,0x7ffa19ab1d94,5450593,0,0x0,8
tick,0x7ffa19ab1d94,5466168,0,0x0,8
tick,0x7ffa19ab1d94,5481502,0,0x0,8
tick,0x7ffa19ab1d94,5497884,0,0x0,8
tick,0x7ffa19ab1d94,5514440,0,0x0,8
tick,0x7ffa19ab1d94,5528320,0,0x0,8
tick,0x7ffa19ab1d94,5544170,0,0x0,8
tick,0x7ffa19ab1d94,5561552,0,0x0,8
tick,0x7ffa19ab1d94,5575397,0,0x0,8
tick,0x7ffa19ab1d94,5589809,0,0x0,8
tick,0x7ffa19ab1d94,5605630,0,0x0,8
tick,0x7ffa19ab1d94,5621995,0,0x0,8
tick,0x7ffa19ab1d94,5636784,0,0x0,8
tick,0x7ffa19ab1d94,5652535,0,0x0,8
tick,0x7ffa19ab1d94,5671551,0,0x0,8
tick,0x7ffa19ab1d94,5683863,0,0x0,8
tick,0x7ffa19ab1d94,5701192,0,0x0,8
tick,0x7ffa19ab1d94,5716862,0,0x0,8
tick,0x7ffa19ab1d94,5737201,0,0x0,8
tick,0x7ffa19ab1d94,5751181,0,0x0,8
tick,0x7ffa19ab1d94,5768955,0,0x0,8
tick,0x7ffa19ab1d94,5782690,0,0x0,8
tick,0x7ffa19ab1d94,5799674,0,0x0,8
tick,0x7ffa19ab1d94,5821023,0,0x0,8
tick,0x7ffa19ab1d94,5826760,0,0x0,8
tick,0x7ffa19ab1d94,5853342,0,0x0,8
tick,0x7ffa19ab1d94,5869408,0,0x0,8
tick,0x7ffa19ab1d94,5885055,0,0x0,8
tick,0x7ffa19ab1d94,5908333,0,0x0,8
tick,0x7ffa19ab1d94,5926901,0,0x0,8
tick,0x7ffa19ab1d94,5935218,0,0x0,8
tick,0x7ffa19ab1d94,5946979,0,0x0,8
tick,0x7ffa19ab1d94,5969055,0,0x0,8
tick,0x7ffa19ab1d94,5983954,0,0x0,8
tick,0x7ffa19ab1d94,6000049,0,0x0,8
tick,0x7ffa19ab1d94,6008514,0,0x0,8
tick,0x7ffa19ab1d94,6027738,0,0x0,8
tick,0x7ffa19ab1d94,6042775,0,0x0,8
tick,0x7ffa19ab1d94,6087434,0,0x0,8
tick,0x7ffa19ab1d94,6106095,0,0x0,8
tick,0x7ffa19ab1d94,6117659,0,0x0,8
tick,0x7ffa19ab1d94,6134390,0,0x0,8
tick,0x7ffa19ab1d94,6151404,0,0x0,8
tick,0x7ffa19ab1d94,6164724,0,0x0,8
tick,0x7ffa19ab1d94,6181559,0,0x0,8
tick,0x7ffa19ab1d94,6195915,0,0x0,8
tick,0x7ffa19ab1d94,6216138,0,0x0,8
tick,0x7ffa19ab1d94,6227565,0,0x0,8
tick,0x7ffa19ab1d94,6242872,0,0x0,8
tick,0x7ffa19ab1d94,6259023,0,0x0,8
tick,0x7ffa19ab1d94,6274803,0,0x0,8
tick,0x7ffa19ab1d94,6290696,0,0x0,8
tick,0x7ffa19ab1d94,6305973,0,0x0,8
tick,0x7ffa19ab1d94,6321471,0,0x0,8
tick,0x7ffa19ab1d94,6337254,0,0x0,8
tick,0x7ffa19ab1d94,6353166,0,0x0,8
tick,0x7ffa19ab1d94,6369086,0,0x0,8
tick,0x7ffa19ab1d94,6385055,0,0x0,8
tick,0x7ffa19ab1d94,6401433,0,0x0,8
tick,0x7ffa19ab1d94,6417603,0,0x0,8
tick,0x7ffa19ab1d94,6433736,0,0x0,8
tick,0x7ffa19ab1d94,6449421,0,0x0,8
tick,0x7ffa19ab1d94,6464601,0,0x0,8
tick,0x7ffa19ab1d94,6480003,0,0x0,8
tick,0x7ffa19ab1d94,6496802,0,0x0,8
tick,0x7ffa19ab1d94,6510789,0,0x0,8
tick,0x7ffa19ab1d94,6526392,0,0x0,8
tick,0x7ffa19ab1d94,6541679,0,0x0,8
tick,0x7ffa19ab1d94,6560768,0,0x0,8
tick,0x7ffa19ab1d94,6572915,0,0x0,8
tick,0x7ffa19ab1d94,6588448,0,0x0,8
tick,0x7ffa19ab1d94,6604691,0,0x0,8
tick,0x7ffa19ab1d94,6619862,0,0x0,8
tick,0x7ffa19ab1d94,6635713,0,0x0,8
tick,0x7ffa19ab1d94,6651651,0,0x0,8
tick,0x7ffa19ab1d94,6667241,0,0x0,8
tick,0x7ffa19ab1d94,6682981,0,0x0,8
tick,0x7ffa19ab1d94,6698708,0,0x0,8
tick,0x7ffa19ab1d94,6714043,0,0x0,8
tick,0x7ffa19ab1d94,6730170,0,0x0,8
tick,0x7ffa19ab1d94,6746784,0,0x0,8
tick,0x7ffa19ab1d94,6763366,0,0x0,8
tick,0x7ffa19ab1d94,6776472,0,0x0,8
tick,0x7ffa19ab1d94,6791792,0,0x0,8
tick,0x7ffa19ab1d94,6806955,0,0x0,8
tick,0x7ffa19ab1d94,6822923,0,0x0,8
tick,0x7ffa19ab1d94,6838896,0,0x0,8
tick,0x7ffa19ab1d94,6854558,0,0x0,8
tick,0x7ffa19ab1d94,6870530,0,0x0,8
tick,0x7ffa19ab1d94,6885767,0,0x0,8
tick,0x7ffa19ab1d94,6901983,0,0x0,8
tick,0x7ffa19ab1d94,6918057,0,0x0,8
tick,0x7ffa19ab1d94,6933891,0,0x0,8
tick,0x7ffa19ab1d94,6949762,0,0x0,8
tick,0x7ffa19ab1d94,6964778,0,0x0,8
tick,0x7ffa19ab1d94,6981668,0,0x0,8
tick,0x7ffa19ab1d94,6996840,0,0x0,8
tick,0x7ffa19ab1d94,7011930,0,0x0,8
tick,0x7ffa19ab1d94,7028115,0,0x0,8
tick,0x7ffa19ab1d94,7043794,0,0x0,8
tick,0x7ffa19ab1d94,7059417,0,0x0,8
tick,0x7ffa19ab1d94,7074983,0,0x0,8
tick,0x7ffa19ab1d94,7090519,0,0x0,8
tick,0x7ffa19ab1d94,7106778,0,0x0,8
tick,0x7ffa19ab1d94,7121979,0,0x0,8
tick,0x7ffa19ab1d94,7138219,0,0x0,8
tick,0x7ffa19ab1d94,7153510,0,0x0,8
tick,0x7ffa19ab1d94,7168823,0,0x0,8
tick,0x7ffa19ab1d94,7184530,0,0x0,8
tick,0x7ffa19ab1d94,7200359,0,0x0,8
tick,0x7ffa19ab1d94,7215764,0,0x0,8
tick,0x7ffa19ab1d94,7231940,0,0x0,8
tick,0x7ffa19ab1d94,7247159,0,0x0,8
tick,0x7ffa19ab1d94,7262719,0,0x0,8
tick,0x7ffa19ab1d94,7278014,0,0x0,8
tick,0x7ffa19ab1d94,7293705,0,0x0,8
tick,0x7ffa19ab1d94,7309669,0,0x0,8
tick,0x7ffa19ab1d94,7324232,0,0x0,8
tick,0x7ffa19ab1d94,7340986,0,0x0,8
tick,0x7ffa19ab1d94,7355266,0,0x0,8
tick,0x7ffa19ab1d94,7371785,0,0x0,8
tick,0x7ffa19ab1d94,7387452,0,0x0,8
tick,0x7ffa19ab1d94,7402831,0,0x0,8
tick,0x7ffa19ab1d94,7418851,0,0x0,8
tick,0x7ffa19ab1d94,7433925,0,0x0,8
tick,0x7ffa19ab1d94,7449516,0,0x0,8
tick,0x7ffa19ab1d94,7465885,0,0x0,8
tick,0x7ffa19ab1d94,7482060,0,0x0,8
tick,0x7ffa19ab1d94,7497563,0,0x0,8
tick,0x7ffa19ab1d94,7512958,0,0x0,8
tick,0x7ffa19ab1d94,7528392,0,0x0,8
tick,0x7ffa19ab1d94,7544299,0,0x0,8
tick,0x7ffa19ab1d94,7559218,0,0x0,8
tick,0x7ffa19ab1d94,7576038,0,0x0,8
tick,0x7ffa19ab1d94,7589842,0,0x0,8
tick,0x7ffa19ab1d94,7606009,0,0x0,8
tick,0x7ffa19ab1d94,7621836,0,0x0,8
tick,0x7ffa19ab1d94,7637985,0,0x0,8
tick,0x7ffa19ab1d94,7653724,0,0x0,8
tick,0x7ffa19ab1d94,7669550,0,0x0,8
tick,0x7ffa19ab1d94,7684840,0,0x0,8
tick,0x7ffa19ab1d94,7700612,0,0x0,8
tick,0x7ffa19ab1d94,7716355,0,0x0,8
tick,0x7ffa19ab1d94,7732335,0,0x0,8
tick,0x7ffa19ab1d94,7748184,0,0x0,8
tick,0x7ffa19ab1d94,7765185,0,0x0,8
tick,0x7ffa19ab1d94,7779994,0,0x0,8
tick,0x7ffa19ab1d94,7795132,0,0x0,8
tick,0x7ffa19ab1d94,7811263,0,0x0,8
tick,0x7ffa19ab1d94,7827794,0,0x0,8
tick,0x7ffa19ab1d94,7842832,0,0x0,8
tick,0x7ffa19ab1d94,7858712,0,0x0,8
tick,0x7ffa19ab1d94,7874421,0,0x0,8
tick,0x7ffa19ab1d94,7890393,0,0x0,8
tick,0x7ffa19ab1d94,7905850,0,0x0,8
tick,0x7ffa19ab1d94,7922109,0,0x0,8
tick,0x7ffa19ab1d94,7937479,0,0x0,8
tick,0x7ffa19ab1d94,7953506,0,0x0,8
tick,0x7ffa19ab1d94,7969498,0,0x0,8
tick,0x7ffa19ab1d94,7985495,0,0x0,8
tick,0x7ffa19ab1d94,8001754,0,0x0,8
tick,0x7ffa19ab1d94,8016751,0,0x0,8
tick,0x7ffa19ab1d94,8033368,0,0x0,8
tick,0x7ffa19ab1d94,8048781,0,0x0,8
tick,0x7ffa19ab1d94,8065050,0,0x0,8
tick,0x7ffa19ab1d94,8080042,0,0x0,8
tick,0x7ffa19ab1d94,8095481,0,0x0,8
tick,0x7ffa19ab1d94,8111101,0,0x0,8
tick,0x7ffa19ab1d94,8127426,0,0x0,8
tick,0x7ffa19ab1d94,8142200,0,0x0,8
tick,0x7ffa19ab1d94,8157912,0,0x0,8
tick,0x7ffa19ab1d94,8173498,0,0x0,8
tick,0x7ffa19ab1d94,8188473,0,0x0,8
tick,0x7ffa19ab1d94,8203816,0,0x0,8
tick,0x7ffa19ab1d94,8219599,0,0x0,8
tick,0x7ffa19ab1d94,8235028,0,0x0,8
tick,0x7ffa19ab1d94,8251499,0,0x0,8
tick,0x7ffa19ab1d94,8267009,0,0x0,8
tick,0x7ffa19ab1d94,8282185,0,0x0,8
tick,0x7ffa19ab1d94,8297714,0,0x0,8
tick,0x7ffa19ab1d94,8312786,0,0x0,8
tick,0x7ffa19ab1d94,8328633,0,0x0,8
tick,0x7ffa19ab1d94,8344334,0,0x0,8
tick,0x7ffa19ab1d94,8360017,0,0x0,8
tick,0x7ffa19ab1d94,8375349,0,0x0,8
tick,0x7ffa19ab1d94,8390783,0,0x0,8
tick,0x7ffa19ab1d94,8405486,0,0x0,8
tick,0x7ffa19ab1d94,8421798,0,0x0,8
tick,0x7ffa19ab1d94,8437765,0,0x0,8
tick,0x7ffa19ab1d94,8453979,0,0x0,8
tick,0x7ffa19ab1d94,8470147,0,0x0,8
tick,0x7ffa19ab1d94,8485534,0,0x0,8
tick,0x7ffa19ab1d94,8501893,0,0x0,8
tick,0x7ffa19ab1d94,8517635,0,0x0,8
tick,0x7ffa19ab1d94,8533521,0,0x0,8
tick,0x7ffa19ab1d94,8548929,0,0x0,8
tick,0x7ffa19ab1d94,8564173,0,0x0,8
tick,0x7ffa19ab1d94,8579944,0,0x0,8
tick,0x7ffa19ab1d94,8595482,0,0x0,8
tick,0x7ffa19ab1d94,8612390,0,0x0,8
tick,0x7ffa19ab1d94,8627752,0,0x0,8
tick,0x7ffa19ab1d94,8642077,0,0x0,8
tick,0x7ffa19ab1d94,8658218,0,0x0,8
tick,0x7ffa19ab1d94,8672968,0,0x0,8
tick,0x7ffa19ab1d94,8689703,0,0x0,8
tick,0x7ffa19ab1d94,8704508,0,0x0,8
tick,0x7ffa19ab1d94,8720277,0,0x0,8
tick,0x7ffa19ab1d94,8736081,0,0x0,8
tick,0x7ffa19ab1d94,8751662,0,0x0,8
tick,0x7ffa19ab1d94,8767370,0,0x0,8
tick,0x7ffa19ab1d94,8783527,0,0x0,8
tick,0x7ffa19ab1d94,8798991,0,0x0,8
tick,0x7ffa19ab1d94,8813825,0,0x0,8
tick,0x7ffa19ab1d94,8829156,0,0x0,8
tick,0x7ffa19ab1d94,8845194,0,0x0,8
tick,0x7ffa19ab1d94,8860530,0,0x0,8
tick,0x7ffa19ab1d94,8877976,0,0x0,8
tick,0x7ffa19ab1d94,8891677,0,0x0,8
tick,0x7ffa19ab1d94,8906970,0,0x0,8
tick,0x7ffa19ab1d94,8922872,0,0x0,8
tick,0x7ffa19ab1d94,8938278,0,0x0,8
tick,0x7ffa19ab1d94,8953786,0,0x0,8
tick,0x7ffa19ab1d94,8969248,0,0x0,8
tick,0x7ffa19ab1d94,8984516,0,0x0,8
tick,0x7ffa19ab1d94,9000780,0,0x0,8
tick,0x7ffa19ab1d94,9016343,0,0x0,8
tick,0x7ffa19ab1d94,9031699,0,0x0,8
tick,0x7ffa19ab1d94,9047075,0,0x0,8
tick,0x7ffa19ab1d94,9063410,0,0x0,8
tick,0x7ffa19ab1d94,9079343,0,0x0,8
tick,0x7ffa19ab1d94,9094454,0,0x0,8
tick,0x7ffa19ab1d94,9110178,0,0x0,8
tick,0x7ffa19ab1d94,9126424,0,0x0,8
tick,0x7ffa19ab1d94,9150065,0,0x0,8
tick,0x7ffa19ab1d94,9161013,0,0x0,8
tick,0x7ffa19ab1d94,9173974,0,0x0,8
tick,0x7ffa19ab1d94,9190696,0,0x0,8
tick,0x7ffa19ab1d94,9213977,0,0x0,8
tick,0x7ffa19ab1d94,9221473,0,0x0,8
tick,0x7ffa19ab1d94,9236189,0,0x0,8
tick,0x7ffa19ab1d94,9249064,0,0x0,8
tick,0x7ffa19ab1d94,9264791,0,0x0,8
tick,0x7ffa19ab1d94,9280687,0,0x0,8
tick,0x7ffa19ab1d94,9296651,0,0x0,8
tick,0x7ffa19ab1d94,9312224,0,0x0,8
tick,0x7ffa19ab1d94,9327643,0,0x0,8
tick,0x7ffa19ab1d94,9343608,0,0x0,8
tick,0x7ffa19ab1d94,9359956,0,0x0,8
tick,0x7ffa19ab1d94,9376628,0,0x0,8
tick,0x7ffa19ab1d94,9391592,0,0x0,8
tick,0x7ffa19ab1d94,9407165,0,0x0,8
tick,0x7ffa19ab1d94,9422247,0,0x0,8
tick,0x7ffa19ab1d94,9438208,0,0x0,8
tick,0x7ffa19ab1d94,9454233,0,0x0,8
tick,0x7ffa19ab1d94,9469744,0,0x0,8
tick,0x7ffa19ab1d94,9486051,0,0x0,8
tick,0x7ffa19ab1d94,9501801,0,0x0,8
tick,0x7ffa19ab1d94,9517114,0,0x0,8
tick,0x7ffa19ab1d94,9533166,0,0x0,8
tick,0x7ffa19ab1d94,9548184,0,0x0,8
tick,0x7ffa19ab1d94,9564197,0,0x0,8
tick,0x7ffa19ab1d94,9580351,0,0x0,8
tick,0x7ffa19ab1d94,9595946,0,0x0,8
tick,0x7ffa19ab1d94,9611628,0,0x0,8
tick,0x7ffa19ab1d94,9627856,0,0x0,8
tick,0x7ffa19ab1d94,9643053,0,0x0,8
tick,0x7ffa19ab1d94,9658950,0,0x0,8
tick,0x7ffa19ab1d94,9674123,0,0x0,8
tick,0x7ffa19ab1d94,9689766,0,0x0,8
tick,0x7ffa19ab1d94,9705606,0,0x0,8
tick,0x7ffa19ab1d94,9721588,0,0x0,8
tick,0x7ffa19ab1d94,9745982,0,0x0,8
tick,0x7ffa19ab1d94,9755976,0,0x0,8
tick,0x7ffa19ab1d94,9768535,0,0x0,8
tick,0x7ffa19ab1d94,9784505,0,0x0,8
tick,0x7ffa19ab1d94,9799828,0,0x0,8
tick,0x7ffa19ab1d94,9816932,0,0x0,8
tick,0x7ffa19ab1d94,9830382,0,0x0,8
tick,0x7ffa19ab1d94,9845831,0,0x0,8
tick,0x7ffa19ab1d94,9862254,0,0x0,8
tick,0x7ffa19ab1d94,9877089,0,0x0,8
tick,0x7ffa19ab1d94,9893428,0,0x0,8
tick,0x7ffa19ab1d94,9910351,0,0x0,8
tick,0x7ffa19ab1d94,9925208,0,0x0,8
tick,0x7ffa19ab1d94,9940123,0,0x0,8
tick,0x7ffa19ab1d94,9955453,0,0x0,8
tick,0x7ffa19ab1d94,9971384,0,0x0,8
tick,0x7ffa19ab1d94,9986894,0,0x0,8
tick,0x7ffa19ab1d94,10002772,0,0x0,8
tick,0x7ffa19ab1d94,10018216,0,0x0,8
tick,0x7ffa19ab1d94,10033920,0,0x0,8
tick,0x7ffa19ab1d94,10049829,0,0x0,8
tick,0x7ffa19ab1d94,10065711,0,0x0,8
tick,0x7ffa19ab1d94,10080483,0,0x0,8
tick,0x7ffa19ab1d94,10095843,0,0x0,8
tick,0x7ffa19ab1d94,10111747,0,0x0,8
tick,0x7ffa19ab1d94,10127259,0,0x0,8
tick,0x7ffa19ab1d94,10143005,0,0x0,8
tick,0x7ffa19ab1d94,10157805,0,0x0,8
tick,0x7ffa19ab1d94,10173074,0,0x0,8
tick,0x7ffa19ab1d94,10188663,0,0x0,8
tick,0x7ffa19ab1d94,10204037,0,0x0,8
tick,0x7ffa19ab1d94,10219757,0,0x0,8
tick,0x7ffa19ab1d94,10235368,0,0x0,8
tick,0x7ffa19ab1d94,10251754,0,0x0,8
tick,0x7ffa19ab1d94,10267625,0,0x0,8
tick,0x7ffa19ab1d94,10283474,0,0x0,8
tick,0x7ffa19ab1d94,10298851,0,0x0,8
tick,0x7ffa19ab1d94,10314346,0,0x0,8
tick,0x7ffa19ab1d94,10330031,0,0x0,8
tick,0x7ffa19ab1d94,10345885,0,0x0,8
tick,0x7ffa19ab1d94,10361597,0,0x0,8
tick,0x7ffa19ab1d94,10377259,0,0x0,8
tick,0x7ffa19ab1d94,10393345,0,0x0,8
tick,0x7ffa19ab1d94,10408960,0,0x0,8
tick,0x7ffa19ab1d94,10424427,0,0x0,8
tick,0x7ffa19ab1d94,10440339,0,0x0,8
tick,0x7ffa19ab1d94,10456229,0,0x0,8
tick,0x7ffa19ab1d94,10471954,0,0x0,8
tick,0x7ffa19ab1d94,10487795,0,0x0,8
tick,0x7ffa19ab1d94,10503947,0,0x0,8
tick,0x7ffa19ab1d94,10519348,0,0x0,8
tick,0x7ffa19ab1d94,10535413,0,0x0,8
tick,0x7ffa19ab1d94,10551029,0,0x0,8
tick,0x7ffa19ab1d94,10566662,0,0x0,8
tick,0x7ffa19ab1d94,10581665,0,0x0,8
tick,0x7ffa19ab1d94,10597077,0,0x0,8
tick,0x7ffa19ab1d94,10612837,0,0x0,8
tick,0x7ffa19ab1d94,10628323,0,0x0,8
tick,0x7ffa19ab1d94,10644028,0,0x0,8
tick,0x7ffa19ab1d94,10659264,0,0x0,8
tick,0x7ffa19ab1d94,10674577,0,0x0,8
tick,0x7ffa19ab1d94,10690645,0,0x0,8
tick,0x7ffa19ab1d94,10706336,0,0x0,8
tick,0x7ffa19ab1d94,10721775,0,0x0,8
tick,0x7ffa19ab1d94,10737379,0,0x0,8
tick,0x7ffa19ab1d94,10753614,0,0x0,8
tick,0x7ffa19ab1d94,10768944,0,0x0,8
tick,0x7ffa19ab1d94,10785116,0,0x0,8
tick,0x7ffa19ab1d94,10800805,0,0x0,8
tick,0x7ffa19ab1d94,10815518,0,0x0,8
tick,0x7ffa19ab1d94,10831508,0,0x0,8
tick,0x7ffa19ab1d94,10847115,0,0x0,8
tick,0x7ffa19ab1d94,10863112,0,0x0,8
tick,0x7ffa19ab1d94,10879160,0,0x0,8
tick,0x7ffa19ab1d94,10895236,0,0x0,8
tick,0x7ffa19ab1d94,10910789,0,0x0,8
tick,0x7ffa19ab1d94,10926341,0,0x0,8
tick,0x7ffa19ab1d94,10943060,0,0x0,8
tick,0x7ffa19ab1d94,10956727,0,0x0,8
tick,0x7ffa19ab1d94,10971984,0,0x0,8
tick,0x7ffa19ab1d94,10987230,0,0x0,8
tick,0x7ffa19ab1d94,11003223,0,0x0,8
tick,0x7ffa19ab1d94,11018764,0,0x0,8
tick,0x7ffa19ab1d94,11034497,0,0x0,8
tick,0x7ffa19ab1d94,11049866,0,0x0,8
tick,0x7ffa19ab1d94,11065064,0,0x0,8
tick,0x7ffa19ab1d94,11080299,0,0x0,8
tick,0x7ffa19ab1d94,11095678,0,0x0,8
tick,0x7ffa19ab1d94,11111987,0,0x0,8
tick,0x7ffa19ab1d94,11127495,0,0x0,8
tick,0x7ffa19ab1d94,11142901,0,0x0,8
tick,0x7ffa19ab1d94,11158717,0,0x0,8
tick,0x7ffa19ab1d94,11174169,0,0x0,8
tick,0x7ffa19ab1d94,11189239,0,0x0,8
tick,0x7ffa19ab1d94,11205214,0,0x0,8
tick,0x7ffa19ab1d94,11220778,0,0x0,8
tick,0x7ffa19ab1d94,11236416,0,0x0,8
tick,0x7ffa19ab1d94,11251634,0,0x0,8
tick,0x7ffa19ab1d94,11266782,0,0x0,8
tick,0x7ffa19ab1d94,11282215,0,0x0,8
tick,0x7ffa19ab1d94,11297580,0,0x0,8
tick,0x7ffa19ab1d94,11312795,0,0x0,8
tick,0x7ffa19ab1d94,11328287,0,0x0,8
tick,0x7ffa19ab1d94,11343639,0,0x0,8
tick,0x7ffa19ab1d94,11359322,0,0x0,8
tick,0x7ffa19ab1d94,11375476,0,0x0,8
tick,0x7ffa19ab1d94,11391758,0,0x0,8
tick,0x7ffa19ab1d94,11408241,0,0x0,8
tick,0x7ffa19ab1d94,11424277,0,0x0,8
tick,0x7ffa19ab1d94,11437863,0,0x0,8
tick,0x7ffa19ab1d94,11453681,0,0x0,8
tick,0x7ffa19ab1d94,11469765,0,0x0,8
tick,0x7ffa19ab1d94,11485478,0,0x0,8
tick,0x7ffa19ab1d94,11500549,0,0x0,8
tick,0x7ffa19ab1d94,11515758,0,0x0,8
tick,0x7ffa19ab1d94,11531769,0,0x0,8
tick,0x7ffa19ab1d94,11547610,0,0x0,8
tick,0x7ffa19ab1d94,11563612,0,0x0,8
tick,0x7ffa19ab1d94,11579315,0,0x0,8
tick,0x7ffa19ab1d94,11594778,0,0x0,8
tick,0x7ffa19ab1d94,11609499,0,0x0,8
tick,0x7ffa19ab1d94,11625320,0,0x0,8
tick,0x7ffa19ab1d94,11640778,0,0x0,8
tick,0x7ffa19ab1d94,11655965,0,0x0,8
tick,0x7ffa19ab1d94,11671524,0,0x0,8
tick,0x7ffa19ab1d94,11686767,0,0x0,8
tick,0x7ffa19ab1d94,11702975,0,0x0,8
tick,0x7ffa19ab1d94,11717876,0,0x0,8
tick,0x7ffa19ab1d94,11732924,0,0x0,8
tick,0x7ffa19ab1d94,11749025,0,0x0,8
tick,0x7ffa19ab1d94,11764772,0,0x0,8
tick,0x7ffa19ab1d94,11780754,0,0x0,8
tick,0x7ffa19ab1d94,11796237,0,0x0,8
tick,0x7ffa19ab1d94,11811481,0,0x0,8
tick,0x7ffa19ab1d94,11826778,0,0x0,8
tick,0x7ffa19ab1d94,11853937,0,0x0,8
tick,0x7ffa19ab1d94,11857993,0,0x0,8
tick,0x7ffa19ab1d94,11872885,0,0x0,8
tick,0x7ffa19ab1d94,11888580,0,0x0,8
tick,0x7ffa19ab1d94,11904175,0,0x0,8
tick,0x7ffa19ab1d94,11919918,0,0x0,8
tick,0x7ffa19ab1d94,11935173,0,0x0,8
tick,0x7ffa19ab1d94,11950886,0,0x0,8
tick,0x7ffa19ab1d94,11966147,0,0x0,8
tick,0x7ffa19ab1d94,11981325,0,0x0,8
tick,0x7ffa19ab1d94,11996665,0,0x0,8
tick,0x7ffa19ab1d94,12013016,0,0x0,8
tick,0x7ffa19ab1d94,12028369,0,0x0,8
tick,0x7ffa19ab1d94,12044141,0,0x0,8
tick,0x7ffa19ab1d94,12060184,0,0x0,8
tick,0x7ffa19ab1d94,12076039,0,0x0,8
tick,0x7ffa19ab1d94,12091604,0,0x0,8
tick,0x7ffa19ab1d94,12107620,0,0x0,8
tick,0x7ffa19ab1d94,12122343,0,0x0,8
tick,0x7ffa19ab1d94,12137674,0,0x0,8
tick,0x7ffa19ab1d94,12153013,0,0x0,8
tick,0x7ffa19ab1d94,12168425,0,0x0,8
tick,0x7ffa19ab1d94,12183904,0,0x0,8
tick,0x7ffa19ab1d94,12199851,0,0x0,8
tick,0x7ffa19ab1d94,12215314,0,0x0,8
tick,0x7ffa19ab1d94,12231548,0,0x0,8
tick,0x7ffa19ab1d94,12248164,0,0x0,8
tick,0x7ffa19ab1d94,12262339,0,0x0,8
tick,0x7ffa19ab1d94,12277863,0,0x0,8
tick,0x7ffa19ab1d94,12292698,0,0x0,8
tick,0x7ffa19ab1d94,12308829,0,0x0,8
tick,0x7ffa19ab1d94,12324810,0,0x0,8
tick,0x7ffa19ab1d94,12340609,0,0x0,8
tick,0x7ffa19ab1d94,12356722,0,0x0,8
tick,0x7ffa19ab1d94,12373620,0,0x0,8
tick,0x7ffa19ab1d94,12388571,0,0x0,8
tick,0x7ffa19ab1d94,12403526,0,0x0,8
tick,0x7ffa19ab1d94,12419392,0,0x0,8
tick,0x7ffa19ab1d94,12435306,0,0x0,8
tick,0x7ffa19ab1d94,12450576,0,0x0,8
tick,0x7ffa19ab1d94,12465766,0,0x0,8
tick,0x7ffa19ab1d94,12481570,0,0x0,8
tick,0x7ffa19ab1d94,12496223,0,0x0,8
tick,0x7ffa19ab1d94,12511909,0,0x0,8
tick,0x7ffa19ab1d94,12527163,0,0x0,8
tick,0x7ffa19ab1d94,12542901,0,0x0,8
tick,0x7ffa19ab1d94,12559074,0,0x0,8
tick,0x7ffa19ab1d94,12574001,0,0x0,8
tick,0x7ffa19ab1d94,12589628,0,0x0,8
tick,0x7ffa19ab1d94,12604631,0,0x0,8
tick,0x7ffa19ab1d94,12620266,0,0x0,8
tick,0x7ffa19ab1d94,12635343,0,0x0,8
tick,0x7ffa19ab1d94,12650773,0,0x0,8
tick,0x7ffa19ab1d94,12667158,0,0x0,8
tick,0x7ffa19ab1d94,12682987,0,0x0,8
tick,0x7ffa19ab1d94,12698728,0,0x0,8
tick,0x7ffa19ab1d94,12714723,0,0x0,8
tick,0x7ffa19ab1d94,12730182,0,0x0,8
tick,0x7ffa19ab1d94,12745379,0,0x0,8
tick,0x7ffa19ab1d94,12761324,0,0x0,8
tick,0x7ffa19ab1d94,12776305,0,0x0,8
tick,0x7ffa19ab1d94,12792112,0,0x0,8
tick,0x7ffa19ab1d94,12807604,0,0x0,8
tick,0x7ffa19ab1d94,12822680,0,0x0,8
tick,0x7ffa19ab1d94,12837291,0,0x0,8
tick,0x7ffa19ab1d94,12852447,0,0x0,8
tick,0x7ffa19ab1d94,12867803,0,0x0,8
tick,0x7ffa19ab1d94,12883058,0,0x0,8
tick,0x7ffa19ab1d94,12898614,0,0x0,8
tick,0x7ffa19ab1d94,12913810,0,0x0,8
tick,0x7ffa19ab1d94,12929821,0,0x0,8
tick,0x7ffa19ab1d94,12945096,0,0x0,8
tick,0x7ffa19ab1d94,12960618,0,0x0,8
tick,0x7ffa19ab1d94,12976307,0,0x0,8
tick,0x7ffa19ab1d94,12991650,0,0x0,8
tick,0x7ffa19ab1d94,13007685,0,0x0,8
tick,0x7ffa19ab1d94,13025202,0,0x0,8
tick,0x7ffa19ab1d94,13041018,0,0x0,8
tick,0x7ffa19ab1d94,13054917,0,0x0,8
tick,0x7ffa19ab1d94,13070921,0,0x0,8
tick,0x7ffa19ab1d94,13087701,0,0x0,8
tick,0x7ffa19ab1d94,13102604,0,0x0,8
tick,0x7ffa19ab1d94,13117992,0,0x0,8
tick,0x7ffa19ab1d94,13133261,0,0x0,8
tick,0x7ffa19ab1d94,13148557,0,0x0,8
tick,0x7ffa19ab1d94,13165056,0,0x0,8
tick,0x7ffa19ab1d94,13180166,0,0x0,8
tick,0x7ffa19ab1d94,13196166,0,0x0,8
tick,0x7ffa19ab1d94,13211889,0,0x0,8
tick,0x7ffa19ab1d94,13227305,0,0x0,8
tick,0x7ffa19ab1d94,13243169,0,0x0,8
tick,0x7ffa19ab1d94,13258808,0,0x0,8
tick,0x7ffa19ab1d94,13273966,0,0x0,8
tick,0x7ffa19ab1d94,13289430,0,0x0,8
tick,0x7ffa19ab1d94,13305118,0,0x0,8
tick,0x7ffa19ab1d94,13320276,0,0x0,8
tick,0x7ffa19ab1d94,13335654,0,0x0,8
tick,0x7ffa19ab1d94,13351376,0,0x0,8
tick,0x7ffa19ab1d94,13366999,0,0x0,8
tick,0x7ffa19ab1d94,13382564,0,0x0,8
tick,0x7ffa19ab1d94,13398316,0,0x0,8
tick,0x7ffa19ab1d94,13413456,0,0x0,8
tick,0x7ffa19ab1d94,13429154,0,0x0,8
tick,0x7ffa19ab1d94,13445278,0,0x0,8
tick,0x7ffa19ab1d94,13460614,0,0x0,8
tick,0x7ffa19ab1d94,13476105,0,0x0,8
tick,0x7ffa19ab1d94,13491403,0,0x0,8
tick,0x7ffa19ab1d94,13507406,0,0x0,8
tick,0x7ffa19ab1d94,13523391,0,0x0,8
tick,0x7ffa19ab1d94,13538705,0,0x0,8
tick,0x7ffa19ab1d94,13554660,0,0x0,8
tick,0x7ffa19ab1d94,13570227,0,0x0,8
tick,0x7ffa19ab1d94,13585583,0,0x0,8
tick,0x7ffa19ab1d94,13601565,0,0x0,8
tick,0x7ffa19ab1d94,13617313,0,0x0,8
tick,0x7ffa19ab1d94,13633199,0,0x0,8
tick,0x7ffa19ab1d94,13649005,0,0x0,8
tick,0x7ffa19ab1d94,13664957,0,0x0,8
tick,0x7ffa19ab1d94,13680245,0,0x0,8
tick,0x7ffa19ab1d94,13696337,0,0x0,8
tick,0x7ffa19ab1d94,13711546,0,0x0,8
tick,0x7ffa19ab1d94,13726925,0,0x0,8
tick,0x7ffa19ab1d94,13742248,0,0x0,8
tick,0x7ffa19ab1d94,13758173,0,0x0,8
tick,0x7ffa19ab1d94,13773417,0,0x0,8
tick,0x7ffa19ab1d94,13789389,0,0x0,8
tick,0x7ffa19ab1d94,13804664,0,0x0,8
tick,0x7ffa19ab1d94,13819965,0,0x0,8
tick,0x7ffa19ab1d94,13836075,0,0x0,8
tick,0x7ffa19ab1d94,13851832,0,0x0,8
tick,0x7ffa19ab1d94,13867213,0,0x0,8
tick,0x7ffa19ab1d94,13882833,0,0x0,8
tick,0x7ffa19ab1d94,13898549,0,0x0,8
tick,0x7ffa19ab1d94,13914085,0,0x0,8
tick,0x7ffa19ab1d94,13929875,0,0x0,8
tick,0x7ffa19ab1d94,13945289,0,0x0,8
tick,0x7ffa19ab1d94,13960585,0,0x0,8
tick,0x7ffa19ab1d94,13975556,0,0x0,8
tick,0x7ffa19ab1d94,13991562,0,0x0,8
tick,0x7ffa19ab1d94,14007607,0,0x0,8
tick,0x7ffa19ab1d94,14022831,0,0x0,8
tick,0x7ffa19ab1d94,14038402,0,0x0,8
tick,0x7ffa19ab1d94,14053712,0,0x0,8
tick,0x7ffa19ab1d94,14069339,0,0x0,8
tick,0x7ffa19ab1d94,14084569,0,0x0,8
tick,0x7ffa19ab1d94,14100055,0,0x0,8
tick,0x7ffa19ab1d94,14115650,0,0x0,8
tick,0x7ffa19ab1d94,14130783,0,0x0,8
tick,0x7ffa19ab1d94,14146797,0,0x0,8
tick,0x7ffa19ab1d94,14161835,0,0x0,8
tick,0x7ffa19ab1d94,14178093,0,0x0,8
tick,0x7ffa19ab1d94,14193256,0,0x0,8
tick,0x7ffa19ab1d94,14208845,0,0x0,8
tick,0x7ffa19ab1d94,14224776,0,0x0,8
tick,0x7ffa19ab1d94,14240719,0,0x0,8
tick,0x7ffa19ab1d94,14256836,0,0x0,8
tick,0x7ffa19ab1d94,14272973,0,0x0,8
tick,0x7ffa19ab1d94,14288596,0,0x0,8
tick,0x7ffa19ab1d94,14304915,0,0x0,8
tick,0x7ffa19ab1d94,14321532,0,0x0,8
tick,0x7ffa19ab1d94,14337139,0,0x0,8
tick,0x7ffa19ab1d94,14353184,0,0x0,8
tick,0x7ffa19ab1d94,14368335,0,0x0,8
tick,0x7ffa19ab1d94,14383975,0,0x0,8
tick,0x7ffa19ab1d94,14400016,0,0x0,8
tick,0x7ffa19ab1d94,14415362,0,0x0,8
tick,0x7ffa19ab1d94,14430786,0,0x0,8
tick,0x7ffa19ab1d94,14445950,0,0x0,8
tick,0x7ffa19ab1d94,14461947,0,0x0,8
tick,0x7ffa19ab1d94,14477905,0,0x0,8
tick,0x7ffa19ab1d94,14492896,0,0x0,8
tick,0x7ffa19ab1d94,14508308,0,0x0,8
tick,0x7ffa19ab1d94,14523828,0,0x0,8
tick,0x7ffa19ab1d94,14539558,0,0x0,8
tick,0x7ffa19ab1d94,14554873,0,0x0,8
tick,0x7ffa19ab1d94,14570502,0,0x0,8
tick,0x7ffa19ab1d94,14586174,0,0x0,8
tick,0x7ffa19ab1d94,14601458,0,0x0,8
tick,0x7ffa19ab1d94,14617193,0,0x0,8
tick,0x7ffa19ab1d94,14632622,0,0x0,8
tick,0x7ffa19ab1d94,14648294,0,0x0,8
tick,0x7ffa19ab1d94,14663569,0,0x0,8
tick,0x7ffa19ab1d94,14678939,0,0x0,8
tick,0x7ffa19ab1d94,14695109,0,0x0,8
tick,0x7ffa19ab1d94,14710014,0,0x0,8
tick,0x7ffa19ab1d94,14726733,0,0x0,8
tick,0x7ffa19ab1d94,14741979,0,0x0,8
tick,0x7ffa19ab1d94,14757462,0,0x0,8
tick,0x7ffa19ab1d94,14772667,0,0x0,8
tick,0x7ffa19ab1d94,14788556,0,0x0,8
tick,0x7ffa19ab1d94,14803745,0,0x0,8
tick,0x7ffa19ab1d94,14819254,0,0x0,8
tick,0x7ffa19ab1d94,14834677,0,0x0,8
tick,0x7ffa19ab1d94,14849633,0,0x0,8
tick,0x7ffa19ab1d94,14864868,0,0x0,8
tick,0x7ffa19ab1d94,14880381,0,0x0,8
tick,0x7ffa19ab1d94,14896223,0,0x0,8
tick,0x7ffa19ab1d94,14911458,0,0x0,8
tick,0x7ffa19ab1d94,14926798,0,0x0,8
tick,0x7ffa19ab1d94,14942581,0,0x0,8
tick,0x7ffa19ab1d94,14958180,0,0x0,8
tick,0x7ffa19ab1d94,14973485,0,0x0,8
tick,0x7ffa19ab1d94,14988926,0,0x0,8
tick,0x7ffa19ab1d94,15005060,0,0x0,8
tick,0x7ffa19ab1d94,15020860,0,0x0,8
tick,0x7ffa19ab1d94,15036383,0,0x0,8
tick,0x7ffa19ab1d94,15052475,0,0x0,8
tick,0x7ffa19ab1d94,15068125,0,0x0,8
tick,0x7ffa19ab1d94,15083654,0,0x0,8
tick,0x7ffa19ab1d94,15100252,0,0x0,8
tick,0x7ffa19ab1d94,15115126,0,0x0,8
tick,0x7ffa19ab1d94,15131898,0,0x0,8
tick,0x7ffa19ab1d94,15147461,0,0x0,8
tick,0x7ffa19ab1d94,15163550,0,0x0,8
tick,0x7ffa19ab1d94,15179565,0,0x0,8
tick,0x7ffa19ab1d94,15195355,0,0x0,8
tick,0x7ffa19ab1d94,15210617,0,0x0,8
tick,0x7ffa19ab1d94,15226548,0,0x0,8
tick,0x7ffa19ab1d94,15242630,0,0x0,8
tick,0x7ffa19ab1d94,15257861,0,0x0,8
tick,0x7ffa19ab1d94,15273835,0,0x0,8
tick,0x7ffa19ab1d94,15288965,0,0x0,8
tick,0x7ffa19ab1d94,15304487,0,0x0,8
tick,0x7ffa19ab1d94,15320123,0,0x0,8
tick,0x7ffa19ab1d94,15335431,0,0x0,8
tick,0x7ffa19ab1d94,15351475,0,0x0,8
tick,0x7ffa19ab1d94,15367434,0,0x0,8
tick,0x7ffa19ab1d94,15382717,0,0x0,8
tick,0x7ffa19ab1d94,15398663,0,0x0,8
tick,0x7ffa19ab1d94,15413831,0,0x0,8
tick,0x7ffa19ab1d94,15429812,0,0x0,8
tick,0x7ffa19ab1d94,15445656,0,0x0,8
tick,0x7ffa19ab1d94,15461803,0,0x0,8
tick,0x7ffa19ab1d94,15477913,0,0x0,8
tick,0x7ffa19ab1d94,15492857,0,0x0,8
tick,0x7ffa19ab1d94,15509026,0,0x0,8
tick,0x7ffa19ab1d94,15524406,0,0x0,8
tick,0x7ffa19ab1d94,15540306,0,0x0,8
tick,0x7ffa19ab1d94,15556084,0,0x0,8
tick,0x7ffa19ab1d94,15572216,0,0x0,8
tick,0x7ffa19ab1d94,15587953,0,0x0,8
tick,0x7ffa19ab1d94,15604685,0,0x0,8
tick,0x7ffa19ab1d94,15618902,0,0x0,8
tick,0x7ffa19ab1d94,15634105,0,0x0,8
tick,0x7ffa19ab1d94,15649221,0,0x0,8
tick,0x7ffa19ab1d94,15664438,0,0x0,8
tick,0x7ffa19ab1d94,15680346,0,0x0,8
tick,0x7ffa19ab1d94,15695508,0,0x0,8
tick,0x7ffa19ab1d94,15711647,0,0x0,8
tick,0x7ffa19ab1d94,15727640,0,0x0,8
tick,0x7ffa19ab1d94,15743539,0,0x0,8
tick,0x7ffa19ab1d94,15758555,0,0x0,8
tick,0x7ffa19ab1d94,15773766,0,0x0,8
tick,0x7ffa19ab1d94,15790367,0,0x0,8
tick,0x7ffa19ab1d94,15805354,0,0x0,8
tick,0x7ffa19ab1d94,15820471,0,0x0,8
tick,0x7ffa19ab1d94,15836872,0,0x0,8
tick,0x7ffa19ab1d94,15851820,0,0x0,8
tick,0x7ffa19ab1d94,15867910,0,0x0,8
tick,0x7ffa19ab1d94,15883563,0,0x0,8
tick,0x7ffa19ab1d94,15898702,0,0x0,8
tick,0x7ffa19ab1d94,15913968,0,0x0,8
tick,0x7ffa19ab1d94,15929597,0,0x0,8
tick,0x7ffa19ab1d94,15945168,0,0x0,8
tick,0x7ffa19ab1d94,15960370,0,0x0,8
tick,0x7ffa19ab1d94,15976199,0,0x0,8
tick,0x7ffa19ab1d94,15991402,0,0x0,8
tick,0x7ffa19ab1d94,16006582,0,0x0,8
tick,0x7ffa19ab1d94,16022498,0,0x0,8
tick,0x7ffa19ab1d94,16038396,0,0x0,8
tick,0x7ffa19ab1d94,16053595,0,0x0,8
tick,0x7ffa19ab1d94,16069560,0,0x0,8
tick,0x7ffa19ab1d94,16084656,0,0x0,8
tick,0x7ffa19ab1d94,16100983,0,0x0,8
tick,0x7ffa19ab1d94,16116134,0,0x0,8
tick,0x7ffa19ab1d94,16131838,0,0x0,8
tick,0x7ffa19ab1d94,16148023,0,0x0,8
tick,0x7ffa19ab1d94,16164057,0,0x0,8
tick,0x7ffa19ab1d94,16179731,0,0x0,8
tick,0x7ffa19ab1d94,16195440,0,0x0,8
tick,0x7ffa19ab1d94,16210796,0,0x0,8
tick,0x7ffa19ab1d94,16226080,0,0x0,8
tick,0x7ffa19ab1d94,16252433,0,0x0,8
tick,0x7ffa19ab1d94,16256791,0,0x0,8
tick,0x7ffa19ab1d94,16272985,0,0x0,8
tick,0x7ffa19ab1d94,16289377,0,0x0,8
tick,0x7ffa19ab1d94,16304251,0,0x0,8
tick,0x7ffa19ab1d94,16320361,0,0x0,8
tick,0x7ffa19ab1d94,16371306,0,0x0,8
tick,0x7ffa19ab1d94,16425908,0,0x0,8
tick,0x7ffa19ab1d94,16433637,0,0x0,8
tick,0x7ffa19ab1d94,16497404,0,0x0,8
tick,0x7ffa19ab1d94,16517231,0,0x0,8
tick,0x7ffa19ab1d94,16525135,0,0x0,8
tick,0x7ffa19ab1d94,16542158,0,0x0,8
tick,0x7ffa19ab1d94,16568152,0,0x0,8
tick,0x7ffa19ab1d94,16577542,0,0x0,8
tick,0x7ffa19ab1d94,16598588,0,0x0,8
tick,0x7ffa19ab1d94,16611435,0,0x0,8
tick,0x7ffa19ab1d94,16632975,0,0x0,8
tick,0x7ffa19ab1d94,16651317,0,0x0,8
tick,0x7ffa19ab1d94,16684849,0,0x0,8
tick,0x7ffa19ab1d94,16711800,0,0x0,8
tick,0x7ffa19ab1d94,16789020,0,0x0,8
tick,0x7ffa19ab1d94,16790208,0,0x0,8
tick,0x7ffa19ab1d94,16833867,0,0x0,8
tick,0x7ffa19ab1d94,16848743,0,0x0,8
tick,0x7ffa19ab1d94,16862289,0,0x0,8
tick,0x7ffa19ab1d94,16890900,0,0x0,8
tick,0x7ffa19ab1d94,16907733,0,0x0,8
tick,0x7ffa19ab1d94,16928956,0,0x0,8
tick,0x7ffa19ab1d94,16954112,0,0x0,8
tick,0x7ffa19ab1d94,16976922,0,0x0,8
tick,0x7ffa19ab1d94,17006236,0,0x0,8
tick,0x7ffa19ab1d94,17013302,0,0x0,8
tick,0x7ffa19ab1d94,17032778,0,0x0,8
tick,0x7ffa19ab1d94,17040232,0,0x0,8
tick,0x7ffa19ab1d94,17057611,0,0x0,8
tick,0x7ffa19ab1d94,17073049,0,0x0,8
tick,0x7ffa19ab1d94,17087073,0,0x0,8
tick,0x7ffa19ab1d94,17103240,0,0x0,8
tick,0x7ffa19ab1d94,17118800,0,0x0,8
tick,0x7ffa19ab1d94,17134850,0,0x0,8
tick,0x7ffa19ab1d94,17150166,0,0x0,8
tick,0x7ffa19ab1d94,17165493,0,0x0,8
tick,0x7ffa19ab1d94,17180358,0,0x0,8
tick,0x7ffa19ab1d94,17195757,0,0x0,8
tick,0x7ffa19ab1d94,17211081,0,0x0,8
tick,0x7ffa19ab1d94,17226210,0,0x0,8
tick,0x7ffa19ab1d94,17242474,0,0x0,8
tick,0x7ffa19ab1d94,17257019,0,0x0,8
tick,0x7ffa19ab1d94,17272233,0,0x0,8
tick,0x7ffa19ab1d94,17287657,0,0x0,8
tick,0x7ffa19ab1d94,17303500,0,0x0,8
tick,0x7ffa19ab1d94,17319697,0,0x0,8
tick,0x7ffa19ab1d94,17336032,0,0x0,8
tick,0x7ffa19ab1d94,17352906,0,0x0,8
tick,0x7ffa19ab1d94,17367495,0,0x0,8
tick,0x7ffa19ab1d94,17382860,0,0x0,8
tick,0x7ffa19ab1d94,17397980,0,0x0,8
tick,0x7ffa19ab1d94,17413099,0,0x0,8
tick,0x7ffa19ab1d94,17428513,0,0x0,8
tick,0x7ffa19ab1d94,17443412,0,0x0,8
tick,0x7ffa19ab1d94,17458919,0,0x0,8
tick,0x7ffa19ab1d94,17474756,0,0x0,8
tick,0x7ffa19ab1d94,17490356,0,0x0,8
tick,0x7ffa19ab1d94,17506032,0,0x0,8
tick,0x7ffa19ab1d94,17521997,0,0x0,8
tick,0x7ffa19ab1d94,17537909,0,0x0,8
tick,0x7ffa19ab1d94,17553751,0,0x0,8
tick,0x7ffa19ab1d94,17569449,0,0x0,8
tick,0x7ffa19ab1d94,17585012,0,0x0,8
tick,0x7ffa19ab1d94,17601360,0,0x0,8
tick,0x7ffa19ab1d94,17617062,0,0x0,8
tick,0x7ffa19ab1d94,17632247,0,0x0,8
tick,0x7ffa19ab1d94,17654094,0,0x0,8
tick,0x7ffa19ab1d94,17663317,0,0x0,8
tick,0x7ffa19ab1d94,17678237,0,0x0,8
tick,0x7ffa19ab1d94,17694785,0,0x0,8
tick,0x7ffa19ab1d94,17710290,0,0x0,8
tick,0x7ffa19ab1d94,17726203,0,0x0,8
tick,0x7ffa19ab1d94,17742764,0,0x0,8
tick,0x7ffa19ab1d94,17757547,0,0x0,8
tick,0x7ffa19ab1d94,17772894,0,0x0,8
tick,0x7ffa19ab1d94,17788458,0,0x0,8
tick,0x7ffa19ab1d94,17804059,0,0x0,8
tick,0x7ffa19ab1d94,17819773,0,0x0,8
tick,0x7ffa19ab1d94,17835125,0,0x0,8
tick,0x7ffa19ab1d94,17850224,0,0x0,8
tick,0x7ffa19ab1d94,17865610,0,0x0,8
tick,0x7ffa19ab1d94,17881154,0,0x0,8
tick,0x7ffa19ab1d94,17896992,0,0x0,8
tick,0x7ffa19ab1d94,17912823,0,0x0,8
tick,0x7ffa19ab1d94,17929026,0,0x0,8
tick,0x7ffa19ab1d94,17945150,0,0x0,8
tick,0x7ffa19ab1d94,17959420,0,0x0,8
tick,0x7ffa19ab1d94,17977463,0,0x0,8
tick,0x7ffa19ab1d94,17991259,0,0x0,8
tick,0x7ffa19ab1d94,18006322,0,0x0,8
tick,0x7ffa19ab1d94,18023335,0,0x0,8
tick,0x7ffa19ab1d94,18037488,0,0x0,8
tick,0x7ffa19ab1d94,18052968,0,0x0,8
tick,0x7ffa19ab1d94,18068647,0,0x0,8
tick,0x7ffa19ab1d94,18083592,0,0x0,8
tick,0x7ffa19ab1d94,18099964,0,0x0,8
tick,0x7ffa19ab1d94,18115468,0,0x0,8
tick,0x7ffa19ab1d94,18131131,0,0x0,8
tick,0x7ffa19ab1d94,18147101,0,0x0,8
tick,0x7ffa19ab1d94,18163461,0,0x0,8
tick,0x7ffa19ab1d94,18178935,0,0x0,8
tick,0x7ffa19ab1d94,18194969,0,0x0,8
tick,0x7ffa19ab1d94,18210755,0,0x0,8
tick,0x7ffa19ab1d94,18226141,0,0x0,8
tick,0x7ffa19ab1d94,18241155,0,0x0,8
tick,0x7ffa19ab1d94,18256652,0,0x0,8
tick,0x7ffa19ab1d94,18272450,0,0x0,8
tick,0x7ffa19ab1d94,18288428,0,0x0,8
tick,0x7ffa19ab1d94,18304471,0,0x0,8
tick,0x7ffa19ab1d94,18320358,0,0x0,8
tick,0x7ffa19ab1d94,18335977,0,0x0,8
tick,0x7ffa19ab1d94,18351195,0,0x0,8
tick,0x7ffa19ab1d94,18366460,0,0x0,8
tick,0x7ffa19ab1d94,18382530,0,0x0,8
tick,0x7ffa19ab1d94,18397735,0,0x0,8
tick,0x7ffa19ab1d94,18413338,0,0x0,8
tick,0x7ffa19ab1d94,18429219,0,0x0,8
tick,0x7ffa19ab1d94,18445238,0,0x0,8
tick,0x7ffa19ab1d94,18461076,0,0x0,8
tick,0x7ffa19ab1d94,18476829,0,0x0,8
tick,0x7ffa19ab1d94,18492289,0,0x0,8
tick,0x7ffa19ab1d94,18507413,0,0x0,8
tick,0x7ffa19ab1d94,18523788,0,0x0,8
tick,0x7ffa19ab1d94,18539459,0,0x0,8
tick,0x7ffa19ab1d94,18555175,0,0x0,8
tick,0x7ffa19ab1d94,18570685,0,0x0,8
tick,0x7ffa19ab1d94,18586745,0,0x0,8
tick,0x7ffa19ab1d94,18601911,0,0x0,8
tick,0x7ffa19ab1d94,18617824,0,0x0,8
tick,0x7ffa19ab1d94,18633121,0,0x0,8
tick,0x7ffa19ab1d94,18648500,0,0x0,8
tick,0x7ffa19ab1d94,18663966,0,0x0,8
tick,0x7ffa19ab1d94,18679259,0,0x0,8
tick,0x7ffa19ab1d94,18695074,0,0x0,8
tick,0x7ffa19ab1d94,18710824,0,0x0,8
tick,0x7ffa19ab1d94,18726336,0,0x0,8
tick,0x7ffa19ab1d94,18741610,0,0x0,8
tick,0x7ffa19ab1d94,18756558,0,0x0,8
tick,0x7ffa19ab1d94,18772580,0,0x0,8
tick,0x7ffa19ab1d94,18787433,0,0x0,8
tick,0x7ffa19ab1d94,18803720,0,0x0,8
tick,0x7ffa19ab1d94,18819864,0,0x0,8
tick,0x7ffa19ab1d94,18835752,0,0x0,8
tick,0x7ffa19ab1d94,18850656,0,0x0,8
tick,0x7ffa19ab1d94,18865999,0,0x0,8
tick,0x7ffa19ab1d94,18881413,0,0x0,8
tick,0x7ffa19ab1d94,18896768,0,0x0,8
tick,0x7ffa19ab1d94,18912002,0,0x0,8
tick,0x7ffa19ab1d94,18927175,0,0x0,8
tick,0x7ffa19ab1d94,18942642,0,0x0,8
tick,0x7ffa19ab1d94,18958193,0,0x0,8
tick,0x7ffa19ab1d94,18973541,0,0x0,8
tick,0x7ffa19ab1d94,18988890,0,0x0,8
tick,0x7ffa19ab1d94,19004043,0,0x0,8
tick,0x7ffa19ab1d94,19019849,0,0x0,8
tick,0x7ffa19ab1d94,19034876,0,0x0,8
tick,0x7ffa19ab1d94,19050384,0,0x0,8
tick,0x7ffa19ab1d94,19065476,0,0x0,8
tick,0x7ffa19ab1d94,19081603,0,0x0,8
tick,0x7ffa19ab1d94,19097397,0,0x0,8
tick,0x7ffa19ab1d94,19112833,0,0x0,8
tick,0x7ffa19ab1d94,19128834,0,0x0,8
tick,0x7ffa19ab1d94,19144761,0,0x0,8
tick,0x7ffa19ab1d94,19160423,0,0x0,8
tick,0x7ffa19ab1d94,19177452,0,0x0,8
tick,0x7ffa19ab1d94,19192439,0,0x0,8
tick,0x7ffa19ab1d94,19208053,0,0x0,8
tick,0x7ffa19ab1d94,19224115,0,0x0,8
tick,0x7ffa19ab1d94,19238958,0,0x0,8
tick,0x7ffa19ab1d94,19254609,0,0x0,8
tick,0x7ffa19ab1d94,19270575,0,0x0,8
tick,0x7ffa19ab1d94,19285859,0,0x0,8
tick,0x7ffa19ab1d94,19301169,0,0x0,8
tick,0x7ffa19ab1d94,19316834,0,0x0,8
tick,0x7ffa19ab1d94,19331857,0,0x0,8
tick,0x7ffa19ab1d94,19347778,0,0x0,8
tick,0x7ffa19ab1d94,19362655,0,0x0,8
tick,0x7ffa19ab1d94,19377809,0,0x0,8
tick,0x7ffa19ab1d94,19392945,0,0x0,8
tick,0x7ffa19ab1d94,19408733,0,0x0,8
tick,0x7ffa19ab1d94,19424203,0,0x0,8
tick,0x7ffa19ab1d94,19439958,0,0x0,8
tick,0x7ffa19ab1d94,19455384,0,0x0,8
tick,0x7ffa19ab1d94,19471033,0,0x0,8
tick,0x7ffa19ab1d94,19486452,0,0x0,8
tick,0x7ffa19ab1d94,19501598,0,0x0,8
tick,0x7ffa19ab1d94,19517375,0,0x0,8
tick,0x7ffa19ab1d94,19532623,0,0x0,8
tick,0x7ffa19ab1d94,19548179,0,0x0,8
tick,0x7ffa19ab1d94,19564125,0,0x0,8
tick,0x7ffa19ab1d94,19579846,0,0x0,8
tick,0x7ffa19ab1d94,19595404,0,0x0,8
tick,0x7ffa19ab1d94,19611258,0,0x0,8
tick,0x7ffa19ab1d94,19627167,0,0x0,8
tick,0x7ffa19ab1d94,19642549,0,0x0,8
tick,0x7ffa19ab1d94,19657697,0,0x0,8
tick,0x7ffa19ab1d94,19673727,0,0x0,8
tick,0x7ffa19ab1d94,19689722,0,0x0,8
tick,0x7ffa19ab1d94,19705432,0,0x0,8
tick,0x7ffa19ab1d94,19721476,0,0x0,8
tick,0x7ffa19ab1d94,19736726,0,0x0,8
tick,0x7ffa19ab1d94,19751980,0,0x0,8
tick,0x7ffa19ab1d94,19767502,0,0x0,8
tick,0x7ffa19ab1d94,19783331,0,0x0,8
tick,0x7ffa19ab1d94,19798607,0,0x0,8
tick,0x7ffa19ab1d94,19814566,0,0x0,8
tick,0x7ffa19ab1d94,19830519,0,0x0,8
tick,0x7ffa19ab1d94,19845548,0,0x0,8
tick,0x7ffa19ab1d94,19860817,0,0x0,8
tick,0x7ffa19ab1d94,19876390,0,0x0,8
tick,0x7ffa19ab1d94,19891959,0,0x0,8
tick,0x7ffa19ab1d94,19907178,0,0x0,8
tick,0x7ffa19ab1d94,19922445,0,0x0,8
tick,0x7ffa19ab1d94,19938518,0,0x0,8
tick,0x7ffa19ab1d94,19953842,0,0x0,8
tick,0x7ffa19ab1d94,19969630,0,0x0,8
tick,0x7ffa19ab1d94,19985401,0,0x0,8
tick,0x7ffa19ab1d94,20000910,0,0x0,8
tick,0x7ffa19ab1d94,20017534,0,0x0,8
tick,0x7ffa19ab1d94,20031557,0,0x0,8
tick,0x7ffa19ab1d94,20047079,0,0x0,8
tick,0x7ffa19ab1d94,20062868,0,0x0,8
tick,0x7ffa19ab1d94,20077887,0,0x0,8
tick,0x7ffa19ab1d94,20093478,0,0x0,8
tick,0x7ffa19ab1d94,20109464,0,0x0,8
tick,0x7ffa19ab1d94,20124987,0,0x0,8
tick,0x7ffa19ab1d94,20140770,0,0x0,8
tick,0x7ffa19ab1d94,20155730,0,0x0,8
tick,0x7ffa19ab1d94,20171164,0,0x0,8
tick,0x7ffa19ab1d94,20187475,0,0x0,8
tick,0x7ffa19ab1d94,20201964,0,0x0,8
tick,0x7ffa19ab1d94,20217636,0,0x0,8
tick,0x7ffa19ab1d94,20233787,0,0x0,8
tick,0x7ffa19ab1d94,20249647,0,0x0,8
tick,0x7ffa19ab1d94,20264375,0,0x0,8
tick,0x7ffa19ab1d94,20279955,0,0x0,8
tick,0x7ffa19ab1d94,20295731,0,0x0,8
tick,0x7ffa19ab1d94,20311886,0,0x0,8
tick,0x7ffa19ab1d94,20327334,0,0x0,8
tick,0x7ffa19ab1d94,20342696,0,0x0,8
tick,0x7ffa19ab1d94,20358679,0,0x0,8
tick,0x7ffa19ab1d94,20374406,0,0x0,8
tick,0x7ffa19ab1d94,20390180,0,0x0,8
tick,0x7ffa19ab1d94,20405509,0,0x0,8
tick,0x7ffa19ab1d94,20421870,0,0x0,8
tick,0x7ffa19ab1d94,20436882,0,0x0,8
tick,0x7ffa19ab1d94,20452058,0,0x0,8
tick,0x7ffa19ab1d94,20467941,0,0x0,8
tick,0x7ffa19ab1d94,20484172,0,0x0,8
tick,0x7ffa19ab1d94,20499761,0,0x0,8
tick,0x7ffa19ab1d94,20515568,0,0x0,8
tick,0x7ffa19ab1d94,20531784,0,0x0,8
tick,0x7ffa19ab1d94,20549155,0,0x0,8
tick,0x7ffa19ab1d94,20563316,0,0x0,8
tick,0x7ffa19ab1d94,20579149,0,0x0,8
tick,0x7ffa19ab1d94,20594799,0,0x0,8
tick,0x7ffa19ab1d94,20610608,0,0x0,8
tick,0x7ffa19ab1d94,20626449,0,0x0,8
tick,0x7ffa19ab1d94,20641926,0,0x0,8
tick,0x7ffa19ab1d94,20657616,0,0x0,8
tick,0x7ffa19ab1d94,20673593,0,0x0,8
tick,0x7ffa19ab1d94,20689251,0,0x0,8
tick,0x7ffa19ab1d94,20704639,0,0x0,8
tick,0x7ffa19ab1d94,20719904,0,0x0,8
tick,0x7ffa19ab1d94,20735694,0,0x0,8
tick,0x7ffa19ab1d94,20751545,0,0x0,8
tick,0x7ffa19ab1d94,20766823,0,0x0,8
tick,0x7ffa19ab1d94,20782707,0,0x0,8
tick,0x7ffa19ab1d94,20798214,0,0x0,8
tick,0x7ffa19ab1d94,20813656,0,0x0,8
tick,0x7ffa19ab1d94,20829052,0,0x0,8
tick,0x7ffa19ab1d94,20844322,0,0x0,8
tick,0x7ffa19ab1d94,20860161,0,0x0,8
tick,0x7ffa19ab1d94,20875304,0,0x0,8
tick,0x7ffa19ab1d94,20891888,0,0x0,8
tick,0x7ffa19ab1d94,20906624,0,0x0,8
tick,0x7ffa19ab1d94,20921894,0,0x0,8
tick,0x7ffa19ab1d94,20937131,0,0x0,8
tick,0x7ffa19ab1d94,20953305,0,0x0,8
tick,0x7ffa19ab1d94,20969368,0,0x0,8
tick,0x7ffa19ab1d94,20985431,0,0x0,8
tick,0x7ffa19ab1d94,21001476,0,0x0,8
tick,0x7ffa19ab1d94,21017257,0,0x0,8
tick,0x7ffa19ab1d94,21033264,0,0x0,8
tick,0x7ffa19ab1d94,21049041,0,0x0,8
tick,0x7ffa19ab1d94,21064842,0,0x0,8
tick,0x7ffa19ab1d94,21080107,0,0x0,8
tick,0x7ffa19ab1d94,21096053,0,0x0,8
tick,0x7ffa19ab1d94,21111778,0,0x0,8
tick,0x7ffa19ab1d94,21127287,0,0x0,8
tick,0x7ffa19ab1d94,21142724,0,0x0,8
tick,0x7ffa19ab1d94,21158484,0,0x0,8
tick,0x7ffa19ab1d94,21173771,0,0x0,8
tick,0x7ffa19ab1d94,21189762,0,0x0,8
tick,0x7ffa19ab1d94,21205568,0,0x0,8
tick,0x7ffa19ab1d94,21221495,0,0x0,8
tick,0x7ffa19ab1d94,21237062,0,0x0,8
tick,0x7ffa19ab1d94,21252333,0,0x0,8
tick,0x7ffa19ab1d94,21268202,0,0x0,8
tick,0x7ffa19ab1d94,21283529,0,0x0,8
tick,0x7ffa19ab1d94,21299180,0,0x0,8
tick,0x7ffa19ab1d94,21314898,0,0x0,8
tick,0x7ffa19ab1d94,21330998,0,0x0,8
tick,0x7ffa19ab1d94,21346783,0,0x0,8
tick,0x7ffa19ab1d94,21362621,0,0x0,8
tick,0x7ffa19ab1d94,21378215,0,0x0,8
tick,0x7ffa19ab1d94,21394264,0,0x0,8
tick,0x7ffa19ab1d94,21409969,0,0x0,8
tick,0x7ffa19ab1d94,21425831,0,0x0,8
tick,0x7ffa19ab1d94,21441669,0,0x0,8
tick,0x7ffa19ab1d94,21457068,0,0x0,8
tick,0x7ffa19ab1d94,21472314,0,0x0,8
tick,0x7ffa19ab1d94,21487812,0,0x0,8
tick,0x7ffa19ab1d94,21503022,0,0x0,8
tick,0x7ffa19ab1d94,21517823,0,0x0,8
tick,0x7ffa19ab1d94,21533095,0,0x0,8
tick,0x7ffa19ab1d94,21548399,0,0x0,8
tick,0x7ffa19ab1d94,21564512,0,0x0,8
tick,0x7ffa19ab1d94,21580368,0,0x0,8
tick,0x7ffa19ab1d94,21595984,0,0x0,8
tick,0x7ffa19ab1d94,21611641,0,0x0,8
tick,0x7ffa19ab1d94,21627184,0,0x0,8
tick,0x7ffa19ab1d94,21642682,0,0x0,8
tick,0x7ffa19ab1d94,21658382,0,0x0,8
tick,0x7ffa19ab1d94,21673635,0,0x0,8
tick,0x7ffa19ab1d94,21689255,0,0x0,8
tick,0x7ffa19ab1d94,21705037,0,0x0,8
tick,0x7ffa19ab1d94,21720473,0,0x0,8
tick,0x7ffa19ab1d94,21735794,0,0x0,8
tick,0x7ffa19ab1d94,21751794,0,0x0,8
tick,0x7ffa19ab1d94,21767271,0,0x0,8
tick,0x7ffa19ab1d94,21782792,0,0x0,8
tick,0x7ffa19ab1d94,21798117,0,0x0,8
tick,0x7ffa19ab1d94,21813194,0,0x0,8
tick,0x7ffa19ab1d94,21828436,0,0x0,8
tick,0x7ffa19ab1d94,21844163,0,0x0,8
tick,0x7ffa19ab1d94,21860188,0,0x0,8
tick,0x7ffa19ab1d94,21875851,0,0x0,8
tick,0x7ffa19ab1d94,21891716,0,0x0,8
tick,0x7ffa19ab1d94,21907849,0,0x0,8
tick,0x7ffa19ab1d94,21922653,0,0x0,8
tick,0x7ffa19ab1d94,21938384,0,0x0,8
tick,0x7ffa19ab1d94,21954450,0,0x0,8
tick,0x7ffa19ab1d94,21969990,0,0x0,8
tick,0x7ffa19ab1d94,21985182,0,0x0,8
tick,0x7ffa19ab1d94,22000352,0,0x0,8
tick,0x7ffa19ab1d94,22015485,0,0x0,8
tick,0x7ffa19ab1d94,22030881,0,0x0,8
tick,0x7ffa19ab1d94,22046734,0,0x0,8
tick,0x7ffa19ab1d94,22061805,0,0x0,8
tick,0x7ffa19ab1d94,22077659,0,0x0,8
tick,0x7ffa19ab1d94,22092899,0,0x0,8
tick,0x7ffa19ab1d94,22108965,0,0x0,8
tick,0x7ffa19ab1d94,22124188,0,0x0,8
tick,0x7ffa19ab1d94,22139823,0,0x0,8
tick,0x7ffa19ab1d94,22155849,0,0x0,8
tick,0x7ffa19ab1d94,22171711,0,0x0,8
tick,0x7ffa19ab1d94,22186634,0,0x0,8
tick,0x7ffa19ab1d94,22202255,0,0x0,8
tick,0x7ffa19ab1d94,22218054,0,0x0,8
tick,0x7ffa19ab1d94,22233435,0,0x0,8
tick,0x7ffa19ab1d94,22249497,0,0x0,8
tick,0x7ffa19ab1d94,22265185,0,0x0,8
tick,0x7ffa19ab1d94,22280511,0,0x0,8
tick,0x7ffa19ab1d94,22295982,0,0x0,8
tick,0x7ffa19ab1d94,22311491,0,0x0,8
tick,0x7ffa19ab1d94,22326993,0,0x0,8
tick,0x7ffa19ab1d94,22342503,0,0x0,8
tick,0x7ffa19ab1d94,22358063,0,0x0,8
tick,0x7ffa19ab1d94,22373707,0,0x0,8
tick,0x7ffa19ab1d94,22388766,0,0x0,8
tick,0x7ffa19ab1d94,22404858,0,0x0,8
tick,0x7ffa19ab1d94,22420488,0,0x0,8
tick,0x7ffa19ab1d94,22435920,0,0x0,8
tick,0x7ffa19ab1d94,22451549,0,0x0,8
tick,0x7ffa19ab1d94,22466838,0,0x0,8
tick,0x7ffa19ab1d94,22481510,0,0x0,8
tick,0x7ffa19ab1d94,22496661,0,0x0,8
tick,0x7ffa19ab1d94,22511853,0,0x0,8
tick,0x7ffa19ab1d94,22527426,0,0x0,8
tick,0x7ffa19ab1d94,22543132,0,0x0,8
tick,0x7ffa19ab1d94,22558854,0,0x0,8
tick,0x7ffa19ab1d94,22574458,0,0x0,8
tick,0x7ffa19ab1d94,22590300,0,0x0,8
tick,0x7ffa19ab1d94,22605845,0,0x0,8
tick,0x7ffa19ab1d94,22622040,0,0x0,8
tick,0x7ffa19ab1d94,22637186,0,0x0,8
tick,0x7ffa19ab1d94,22652800,0,0x0,8
tick,0x7ffa19ab1d94,22668089,0,0x0,8
tick,0x7ffa19ab1d94,22683791,0,0x0,8
tick,0x7ffa19ab1d94,22698953,0,0x0,8
tick,0x7ffa19ab1d94,22714511,0,0x0,8
tick,0x7ffa19ab1d94,22730226,0,0x0,8
tick,0x7ffa19ab1d94,22746144,0,0x0,8
tick,0x7ffa19ab1d94,22761486,0,0x0,8
tick,0x7ffa19ab1d94,22777118,0,0x0,8
tick,0x7ffa19ab1d94,22793064,0,0x0,8
tick,0x7ffa19ab1d94,22808793,0,0x0,8
tick,0x7ffa19ab1d94,22823909,0,0x0,8
tick,0x7ffa19ab1d94,22839056,0,0x0,8
tick,0x7ffa19ab1d94,22854449,0,0x0,8
tick,0x7ffa19ab1d94,22870415,0,0x0,8
tick,0x7ffa19ab1d94,22885599,0,0x0,8
tick,0x7ffa19ab1d94,22901589,0,0x0,8
tick,0x7ffa19ab1d94,22917415,0,0x0,8
tick,0x7ffa19ab1d94,22932545,0,0x0,8
tick,0x7ffa19ab1d94,22948424,0,0x0,8
tick,0x7ffa19ab1d94,22964084,0,0x0,8
tick,0x7ffa19ab1d94,22979995,0,0x0,8
tick,0x7ffa19ab1d94,22995255,0,0x0,8
tick,0x7ffa19ab1d94,23011533,0,0x0,8
tick,0x7ffa19ab1d94,23027487,0,0x0,8
tick,0x7ffa19ab1d94,23043020,0,0x0,8
tick,0x7ffa19ab1d94,23058585,0,0x0,8
tick,0x7ffa19ab1d94,23074370,0,0x0,8
tick,0x7ffa19ab1d94,23089642,0,0x0,8
tick,0x7ffa19ab1d94,23105443,0,0x0,8
tick,0x7ffa19ab1d94,23121896,0,0x0,8
tick,0x7ffa19ab1d94,23137321,0,0x0,8
tick,0x7ffa19ab1d94,23153392,0,0x0,8
tick,0x7ffa19ab1d94,23168768,0,0x0,8
tick,0x7ffa19ab1d94,23183880,0,0x0,8
tick,0x7ffa19ab1d94,23199748,0,0x0,8
tick,0x7ffa19ab1d94,23215543,0,0x0,8
tick,0x7ffa19ab1d94,23232203,0,0x0,8
tick,0x7ffa19ab1d94,23247468,0,0x0,8
tick,0x7ffa19ab1d94,23263768,0,0x0,8
tick,0x7ffa19ab1d94,23279053,0,0x0,8
tick,0x7ffa19ab1d94,23293944,0,0x0,8
tick,0x7ffa19ab1d94,23310390,0,0x0,8
tick,0x7ffa19ab1d94,23325373,0,0x0,8
tick,0x7ffa19ab1d94,23341687,0,0x0,8
tick,0x7ffa19ab1d94,23357570,0,0x0,8
tick,0x7ffa19ab1d94,23373496,0,0x0,8
tick,0x7ffa19ab1d94,23388561,0,0x0,8
tick,0x7ffa19ab1d94,23404136,0,0x0,8
tick,0x7ffa19ab1d94,23420044,0,0x0,8
tick,0x7ffa19ab1d94,23435586,0,0x0,8
tick,0x7ffa19ab1d94,23450746,0,0x0,8
tick,0x7ffa19ab1d94,23466862,0,0x0,8
tick,0x7ffa19ab1d94,23482787,0,0x0,8
tick,0x7ffa19ab1d94,23498413,0,0x0,8
tick,0x7ffa19ab1d94,23513768,0,0x0,8
tick,0x7ffa19ab1d94,23530081,0,0x0,8
tick,0x7ffa19ab1d94,23545237,0,0x0,8
tick,0x7ffa19ab1d94,23560649,0,0x0,8
tick,0x7ffa19ab1d94,23576019,0,0x0,8
tick,0x7ffa19ab1d94,23591519,0,0x0,8
tick,0x7ffa19ab1d94,23607544,0,0x0,8
tick,0x7ffa19ab1d94,23623272,0,0x0,8
tick,0x7ffa19ab1d94,23638746,0,0x0,8
tick,0x7ffa19ab1d94,23654662,0,0x0,8
tick,0x7ffa19ab1d94,23669765,0,0x0,8
tick,0x7ffa19ab1d94,23685344,0,0x0,8
tick,0x7ffa19ab1d94,23701765,0,0x0,8
tick,0x7ffa19ab1d94,23717327,0,0x0,8
tick,0x7ffa19ab1d94,23733076,0,0x0,8
tick,0x7ffa19ab1d94,23748406,0,0x0,8
tick,0x7ffa19ab1d94,23764230,0,0x0,8
tick,0x7ffa19ab1d94,23779999,0,0x0,8
tick,0x7ffa19ab1d94,23795802,0,0x0,8
tick,0x7ffa19ab1d94,23811954,0,0x0,8
tick,0x7ffa19ab1d94,23830253,0,0x0,8
tick,0x7ffa19ab1d94,23843552,0,0x0,8
tick,0x7ffa19ab1d94,23858809,0,0x0,8
tick,0x7ffa19ab1d94,23874453,0,0x0,8
tick,0x7ffa19ab1d94,23890030,0,0x0,8
tick,0x7ffa19ab1d94,23905383,0,0x0,8
tick,0x7ffa19ab1d94,23921048,0,0x0,8
tick,0x7ffa19ab1d94,23936227,0,0x0,8
tick,0x7ffa19ab1d94,23951808,0,0x0,8
tick,0x7ffa19ab1d94,23966689,0,0x0,8
tick,0x7ffa19ab1d94,23983001,0,0x0,8
tick,0x7ffa19ab1d94,23997666,0,0x0,8
tick,0x7ffa19ab1d94,24012895,0,0x0,8
tick,0x7ffa19ab1d94,24027829,0,0x0,8
tick,0x7ffa19ab1d94,24043899,0,0x0,8
tick,0x7ffa19ab1d94,24059653,0,0x0,8
tick,0x7ffa19ab1d94,24074598,0,0x0,8
tick,0x7ffa19ab1d94,24090171,0,0x0,8
tick,0x7ffa19ab1d94,24105344,0,0x0,8
tick,0x7ffa19ab1d94,24121381,0,0x0,8
tick,0x7ffa19ab1d94,24137513,0,0x0,8
tick,0x7ffa19ab1d94,24153031,0,0x0,8
tick,0x7ffa19ab1d94,24168690,0,0x0,8
tick,0x7ffa19ab1d94,24184576,0,0x0,8
tick,0x7ffa19ab1d94,24200731,0,0x0,8
tick,0x7ffa19ab1d94,24215997,0,0x0,8
tick,0x7ffa19ab1d94,24232244,0,0x0,8
tick,0x7ffa19ab1d94,24248339,0,0x0,8
tick,0x7ffa19ab1d94,24264745,0,0x0,8
tick,0x7ffa19ab1d94,24280426,0,0x0,8
tick,0x7ffa19ab1d94,24294514,0,0x0,8
tick,0x7ffa19ab1d94,24309894,0,0x0,8
tick,0x7ffa19ab1d94,24325629,0,0x0,8
tick,0x7ffa19ab1d94,24340757,0,0x0,8
tick,0x7ffa19ab1d94,24356590,0,0x0,8
tick,0x7ffa19ab1d94,24371789,0,0x0,8
tick,0x7ffa19ab1d94,24387867,0,0x0,8
tick,0x7ffa19ab1d94,24403811,0,0x0,8
tick,0x7ffa19ab1d94,24419870,0,0x0,8
tick,0x7ffa19ab1d94,24435442,0,0x0,8
tick,0x7ffa19ab1d94,24451045,0,0x0,8
tick,0x7ffa19ab1d94,24467292,0,0x0,8
tick,0x7ffa19ab1d94,24483115,0,0x0,8
tick,0x7ffa19ab1d94,24498499,0,0x0,8
tick,0x7ffa19ab1d94,24514012,0,0x0,8
tick,0x7ffa19ab1d94,24529836,0,0x0,8
tick,0x7ffa19ab1d94,24545190,0,0x0,8
tick,0x7ffa19ab1d94,24560338,0,0x0,8
tick,0x7ffa19ab1d94,24575012,0,0x0,8
tick,0x7ffa19ab1d94,24590546,0,0x0,8
tick,0x7ffa19ab1d94,24605719,0,0x0,8
tick,0x7ffa19ab1d94,24621555,0,0x0,8
tick,0x7ffa19ab1d94,24638097,0,0x0,8
tick,0x7ffa19ab1d94,24652758,0,0x0,8
tick,0x7ffa19ab1d94,24668349,0,0x0,8
tick,0x7ffa19ab1d94,24683934,0,0x0,8
tick,0x7ffa19ab1d94,24699611,0,0x0,8
tick,0x7ffa19ab1d94,24714887,0,0x0,8
tick,0x7ffa19ab1d94,24730830,0,0x0,8
tick,0x7ffa19ab1d94,24746971,0,0x0,8
tick,0x7ffa19ab1d94,24762623,0,0x0,8
tick,0x7ffa19ab1d94,24777969,0,0x0,8
tick,0x7ffa19ab1d94,24793063,0,0x0,8
tick,0x7ffa19ab1d94,24808791,0,0x0,8
tick,0x7ffa19ab1d94,24824442,0,0x0,8
tick,0x7ffa19ab1d94,24839611,0,0x0,8
tick,0x7ffa19ab1d94,24854549,0,0x0,8
tick,0x7ffa19ab1d94,24869910,0,0x0,8
tick,0x7ffa19ab1d94,24885786,0,0x0,8
tick,0x7ffa19ab1d94,24901859,0,0x0,8
tick,0x7ffa19ab1d94,24917783,0,0x0,8
tick,0x7ffa19ab1d94,24933476,0,0x0,8
tick,0x7ffa19ab1d94,24949388,0,0x0,8
tick,0x7ffa19ab1d94,24965267,0,0x0,8
tick,0x7ffa19ab1d94,24981374,0,0x0,8
tick,0x7ffa19ab1d94,24996333,0,0x0,8
tick,0x7ffa19ab1d94,25011532,0,0x0,8
tick,0x7ffa19ab1d94,25026942,0,0x0,8
tick,0x7ffa19ab1d94,25042743,0,0x0,8
tick,0x7ffa19ab1d94,25058041,0,0x0,8
tick,0x7ffa19ab1d94,25074058,0,0x0,8
tick,0x7ffa19ab1d94,25089533,0,0x0,8
tick,0x7ffa19ab1d94,25104600,0,0x0,8
tick,0x7ffa19ab1d94,25119903,0,0x0,8
tick,0x7ffa19ab1d94,25135287,0,0x0,8
tick,0x7ffa19ab1d94,25151678,0,0x0,8
tick,0x7ffa19ab1d94,25167736,0,0x0,8
tick,0x7ffa19ab1d94,25183140,0,0x0,8
tick,0x7ffa19ab1d94,25199145,0,0x0,8
tick,0x7ffa19ab1d94,25215353,0,0x0,8
tick,0x7ffa19ab1d94,25231094,0,0x0,8
tick,0x7ffa19ab1d94,25247108,0,0x0,8
tick,0x7ffa19ab1d94,25263204,0,0x0,8
tick,0x7ffa19ab1d94,25278178,0,0x0,8
tick,0x7ffa19ab1d94,25293643,0,0x0,8
tick,0x7ffa19ab1d94,25308712,0,0x0,8
tick,0x7ffa19ab1d94,25323642,0,0x0,8
tick,0x7ffa19ab1d94,25340011,0,0x0,8
tick,0x7ffa19ab1d94,25355439,0,0x0,8
tick,0x7ffa19ab1d94,25371513,0,0x0,8
tick,0x7ffa19ab1d94,25387727,0,0x0,8
tick,0x7ffa19ab1d94,25404034,0,0x0,8
tick,0x7ffa19ab1d94,25419569,0,0x0,8
tick,0x7ffa19ab1d94,25435511,0,0x0,8
tick,0x7ffa19ab1d94,25451796,0,0x0,8
tick,0x7ffa19ab1d94,25467734,0,0x0,8
tick,0x7ffa19ab1d94,25483778,0,0x0,8
tick,0x7ffa19ab1d94,25498706,0,0x0,8
tick,0x7ffa19ab1d94,25514683,0,0x0,8
tick,0x7ffa19ab1d94,25529602,0,0x0,8
tick,0x7ffa19ab1d94,25545325,0,0x0,8
tick,0x7ffa19ab1d94,25561915,0,0x0,8
tick,0x7ffa19ab1d94,25577859,0,0x0,8
tick,0x7ffa19ab1d94,25593570,0,0x0,8
tick,0x7ffa19ab1d94,25609536,0,0x0,8
tick,0x7ffa19ab1d94,25624951,0,0x0,8
tick,0x7ffa19ab1d94,25639973,0,0x0,8
tick,0x7ffa19ab1d94,25655221,0,0x0,8
tick,0x7ffa19ab1d94,25670478,0,0x0,8
tick,0x7ffa19ab1d94,25686321,0,0x0,8
tick,0x7ffa19ab1d94,25701513,0,0x0,8
tick,0x7ffa19ab1d94,25717596,0,0x0,8
tick,0x7ffa19ab1d94,25733359,0,0x0,8
tick,0x7ffa19ab1d94,25748776,0,0x0,8
tick,0x7ffa19ab1d94,25764777,0,0x0,8
tick,0x7ffa19ab1d94,25780754,0,0x0,8
tick,0x7ffa19ab1d94,25795920,0,0x0,8
tick,0x7ffa19ab1d94,25811466,0,0x0,8
tick,0x7ffa19ab1d94,25827289,0,0x0,8
tick,0x7ffa19ab1d94,25844178,0,0x0,8
tick,0x7ffa19ab1d94,25857416,0,0x0,8
tick,0x7ffa19ab1d94,25872312,0,0x0,8
tick,0x7ffa19ab1d94,25887896,0,0x0,8
tick,0x7ffa19ab1d94,25903103,0,0x0,8
tick,0x7ffa19ab1d94,25918637,0,0x0,8
tick,0x7ffa19ab1d94,25934240,0,0x0,8
tick,0x7ffa19ab1d94,25950287,0,0x0,8
tick,0x7ffa19ab1d94,25965595,0,0x0,8
tick,0x7ffa19ab1d94,25981327,0,0x0,8
tick,0x7ffa19ab1d94,25998447,0,0x0,8
tick,0x7ffa19ab1d94,26012756,0,0x0,8
tick,0x7ffa19ab1d94,26028725,0,0x0,8
tick,0x7ffa19ab1d94,26044212,0,0x0,8
tick,0x7ffa19ab1d94,26060233,0,0x0,8
tick,0x7ffa19ab1d94,26075510,0,0x0,8
tick,0x7ffa19ab1d94,26091666,0,0x0,8
tick,0x7ffa19ab1d94,26107363,0,0x0,8
tick,0x7ffa19ab1d94,26123214,0,0x0,8
tick,0x7ffa19ab1d94,26138697,0,0x0,8
tick,0x7ffa19ab1d94,26154516,0,0x0,8
tick,0x7ffa19ab1d94,26169561,0,0x0,8
tick,0x7ffa19ab1d94,26185091,0,0x0,8
tick,0x7ffa19ab1d94,26201520,0,0x0,8
tick,0x7ffa19ab1d94,26216830,0,0x0,8
tick,0x7ffa19ab1d94,26233266,0,0x0,8
tick,0x7ffa19ab1d94,26248263,0,0x0,8
tick,0x7ffa19ab1d94,26264129,0,0x0,8
tick,0x7ffa19ab1d94,26279002,0,0x0,8
tick,0x7ffa19ab1d94,26294464,0,0x0,8
tick,0x7ffa19ab1d94,26309858,0,0x0,8
tick,0x7ffa19ab1d94,26330976,0,0x0,8
tick,0x7ffa19ab1d94,26344279,0,0x0,8
tick,0x7ffa19ab1d94,26357644,0,0x0,8
tick,0x7ffa19ab1d94,26373762,0,0x0,8
tick,0x7ffa19ab1d94,26391492,0,0x0,8
tick,0x7ffa19ab1d94,26404630,0,0x0,8
tick,0x7ffa19ab1d94,26420698,0,0x0,8
tick,0x7ffa19ab1d94,26435858,0,0x0,8
tick,0x7ffa19ab1d94,26450659,0,0x0,8
tick,0x7ffa19ab1d94,26465958,0,0x0,8
tick,0x7ffa19ab1d94,26481801,0,0x0,8
tick,0x7ffa19ab1d94,26497608,0,0x0,8
tick,0x7ffa19ab1d94,26514179,0,0x0,8
tick,0x7ffa19ab1d94,26535612,0,0x0,8
tick,0x7ffa19ab1d94,26545514,0,0x0,8
tick,0x7ffa19ab1d94,26558671,0,0x0,8
tick,0x7ffa19ab1d94,26574302,0,0x0,8
tick,0x7ffa19ab1d94,26590180,0,0x0,8
tick,0x7ffa19ab1d94,26605416,0,0x0,8
tick,0x7ffa19ab1d94,26620635,0,0x0,8
tick,0x7ffa19ab1d94,26636410,0,0x0,8
tick,0x7ffa19ab1d94,26651802,0,0x0,8
tick,0x7ffa19ab1d94,26666844,0,0x0,8
tick,0x7ffa19ab1d94,26682732,0,0x0,8
tick,0x7ffa19ab1d94,26697824,0,0x0,8
tick,0x7ffa19ab1d94,26713359,0,0x0,8
tick,0x7ffa19ab1d94,26729213,0,0x0,8
tick,0x7ffa19ab1d94,26745183,0,0x0,8
tick,0x7ffa19ab1d94,26760092,0,0x0,8
tick,0x7ffa19ab1d94,26775049,0,0x0,8
tick,0x7ffa19ab1d94,26790189,0,0x0,8
tick,0x7ffa19ab1d94,26805829,0,0x0,8
tick,0x7ffa19ab1d94,26821664,0,0x0,8
tick,0x7ffa19ab1d94,26836857,0,0x0,8
tick,0x7ffa19ab1d94,26853036,0,0x0,8
tick,0x7ffa19ab1d94,26868693,0,0x0,8
tick,0x7ffa19ab1d94,26884095,0,0x0,8
tick,0x7ffa19ab1d94,26899905,0,0x0,8
tick,0x7ffa19ab1d94,26915157,0,0x0,8
tick,0x7ffa19ab1d94,26930233,0,0x0,8
tick,0x7ffa19ab1d94,26945588,0,0x0,8
tick,0x7ffa19ab1d94,26961450,0,0x0,8
tick,0x7ffa19ab1d94,26977025,0,0x0,8
tick,0x7ffa19ab1d94,26993004,0,0x0,8
tick,0x7ffa19ab1d94,27009090,0,0x0,8
tick,0x7ffa19ab1d94,27024475,0,0x0,8
tick,0x7ffa19ab1d94,27039647,0,0x0,8
tick,0x7ffa19ab1d94,27055711,0,0x0,8
tick,0x7ffa19ab1d94,27070565,0,0x0,8
tick,0x7ffa19ab1d94,27086430,0,0x0,8
tick,0x7ffa19ab1d94,27101671,0,0x0,8
tick,0x7ffa19ab1d94,27116944,0,0x0,8
tick,0x7ffa19ab1d94,27132808,0,0x0,8
tick,0x7ffa19ab1d94,27150750,0,0x0,8
tick,0x7ffa19ab1d94,27163808,0,0x0,8
tick,0x7ffa19ab1d94,27178717,0,0x0,8
tick,0x7ffa19ab1d94,27194292,0,0x0,8
tick,0x7ffa19ab1d94,27210414,0,0x0,8
tick,0x7ffa19ab1d94,27226483,0,0x0,8
tick,0x7ffa19ab1d94,27242939,0,0x0,8
tick,0x7ffa19ab1d94,27256920,0,0x0,8
tick,0x7ffa19ab1d94,27272419,0,0x0,8
tick,0x7ffa19ab1d94,27287990,0,0x0,8
tick,0x7ffa19ab1d94,27303714,0,0x0,8
tick,0x7ffa19ab1d94,27319335,0,0x0,8
tick,0x7ffa19ab1d94,27334736,0,0x0,8
tick,0x7ffa19ab1d94,27350544,0,0x0,8
tick,0x7ffa19ab1d94,27367207,0,0x0,8
tick,0x7ffa19ab1d94,27381601,0,0x0,8
tick,0x7ffa19ab1d94,27397288,0,0x0,8
tick,0x7ffa19ab1d94,27413348,0,0x0,8
tick,0x7ffa19ab1d94,27428711,0,0x0,8
tick,0x7ffa19ab1d94,27444149,0,0x0,8
tick,0x7ffa19ab1d94,27459513,0,0x0,8
tick,0x7ffa19ab1d94,27476623,0,0x0,8
tick,0x7ffa19ab1d94,27490704,0,0x0,8
tick,0x7ffa19ab1d94,27506474,0,0x0,8
tick,0x7ffa19ab1d94,27521938,0,0x0,8
tick,0x7ffa19ab1d94,27537672,0,0x0,8
tick,0x7ffa19ab1d94,27552327,0,0x0,8
tick,0x7ffa19ab1d94,27567663,0,0x0,8
tick,0x7ffa19ab1d94,27583052,0,0x0,8
tick,0x7ffa19ab1d94,27598627,0,0x0,8
tick,0x7ffa19ab1d94,27613931,0,0x0,8
tick,0x7ffa19ab1d94,27629476,0,0x0,8
tick,0x7ffa19ab1d94,27645519,0,0x0,8
tick,0x7ffa19ab1d94,27660565,0,0x0,8
tick,0x7ffa19ab1d94,27676521,0,0x0,8
tick,0x7ffa19ab1d94,27694354,0,0x0,8
tick,0x7ffa19ab1d94,27710189,0,0x0,8
tick,0x7ffa19ab1d94,27723008,0,0x0,8
tick,0x7ffa19ab1d94,27739100,0,0x0,8
tick,0x7ffa19ab1d94,27754064,0,0x0,8
tick,0x7ffa19ab1d94,27769776,0,0x0,8
tick,0x7ffa19ab1d94,27785766,0,0x0,8
tick,0x7ffa19ab1d94,27801806,0,0x0,8
tick,0x7ffa19ab1d94,27817068,0,0x0,8
tick,0x7ffa19ab1d94,27832853,0,0x0,8
tick,0x7ffa19ab1d94,27849259,0,0x0,8
tick,0x7ffa19ab1d94,27863762,0,0x0,8
tick,0x7ffa19ab1d94,27878810,0,0x0,8
tick,0x7ffa19ab1d94,27893971,0,0x0,8
tick,0x7ffa19ab1d94,27909878,0,0x0,8
tick,0x7ffa19ab1d94,27926642,0,0x0,8
tick,0x7ffa19ab1d94,27940430,0,0x0,8
tick,0x7ffa19ab1d94,27955861,0,0x0,8
tick,0x7ffa19ab1d94,27971854,0,0x0,8
tick,0x7ffa19ab1d94,27987971,0,0x0,8
tick,0x7ffa19ab1d94,28003508,0,0x0,8
tick,0x7ffa19ab1d94,28019360,0,0x0,8
tick,0x7ffa19ab1d94,28034481,0,0x0,8
tick,0x7ffa19ab1d94,28049803,0,0x0,8
tick,0x7ffa19ab1d94,28066027,0,0x0,8
tick,0x7ffa19ab1d94,28081515,0,0x0,8
tick,0x7ffa19ab1d94,28097624,0,0x0,8
tick,0x7ffa19ab1d94,28112738,0,0x0,8
tick,0x7ffa19ab1d94,28127862,0,0x0,8
tick,0x7ffa19ab1d94,28143900,0,0x0,8
tick,0x7ffa19ab1d94,28159189,0,0x0,8
tick,0x7ffa19ab1d94,28174193,0,0x0,8
tick,0x7ffa19ab1d94,28190183,0,0x0,8
tick,0x7ffa19ab1d94,28205622,0,0x0,8
tick,0x7ffa19ab1d94,28221776,0,0x0,8
tick,0x7ffa19ab1d94,28237762,0,0x0,8
tick,0x7ffa19ab1d94,28253399,0,0x0,8
tick,0x7ffa19ab1d94,28269092,0,0x0,8
tick,0x7ffa19ab1d94,28284711,0,0x0,8
tick,0x7ffa19ab1d94,28300154,0,0x0,8
tick,0x7ffa19ab1d94,28316167,0,0x0,8
tick,0x7ffa19ab1d94,28331773,0,0x0,8
tick,0x7ffa19ab1d94,28347303,0,0x0,8
tick,0x7ffa19ab1d94,28363172,0,0x0,8
tick,0x7ffa19ab1d94,28378639,0,0x0,8
tick,0x7ffa19ab1d94,28393756,0,0x0,8
tick,0x7ffa19ab1d94,28414896,0,0x0,8
tick,0x7ffa19ab1d94,28425713,0,0x0,8
tick,0x7ffa19ab1d94,28440848,0,0x0,8
tick,0x7ffa19ab1d94,28461227,0,0x0,8
tick,0x7ffa19ab1d94,28480297,0,0x0,8
tick,0x7ffa19ab1d94,28495488,0,0x0,8
tick,0x7ffa19ab1d94,28502511,0,0x0,8
tick,0x7ffa19ab1d94,28517575,0,0x0,8
tick,0x7ffa19ab1d94,28533477,0,0x0,8
tick,0x7ffa19ab1d94,28549004,0,0x0,8
tick,0x7ffa19ab1d94,28564701,0,0x0,8
tick,0x7ffa19ab1d94,28580201,0,0x0,8
tick,0x7ffa19ab1d94,28595183,0,0x0,8
tick,0x7ffa19ab1d94,28610665,0,0x0,8
tick,0x7ffa19ab1d94,28626313,0,0x0,8
tick,0x7ffa19ab1d94,28642195,0,0x0,8
tick,0x7ffa19ab1d94,28658583,0,0x0,8
tick,0x7ffa19ab1d94,28673631,0,0x0,8
tick,0x7ffa19ab1d94,28688935,0,0x0,8
tick,0x7ffa19ab1d94,28704965,0,0x0,8
tick,0x7ffa19ab1d94,28721312,0,0x0,8
tick,0x7ffa19ab1d94,28736004,0,0x0,8
tick,0x7ffa19ab1d94,28751718,0,0x0,8
tick,0x7ffa19ab1d94,28767620,0,0x0,8
tick,0x7ffa19ab1d94,28783137,0,0x0,8
tick,0x7ffa19ab1d94,28798281,0,0x0,8
tick,0x7ffa19ab1d94,28814047,0,0x0,8
tick,0x7ffa19ab1d94,28829952,0,0x0,8
tick,0x7ffa19ab1d94,28846191,0,0x0,8
tick,0x7ffa19ab1d94,28861598,0,0x0,8
tick,0x7ffa19ab1d94,28877849,0,0x0,8
tick,0x7ffa19ab1d94,28893335,0,0x0,8
tick,0x7ffa19ab1d94,28908500,0,0x0,8
tick,0x7ffa19ab1d94,28925356,0,0x0,8
tick,0x7ffa19ab1d94,28940664,0,0x0,8
tick,0x7ffa19ab1d94,28956424,0,0x0,8
tick,0x7ffa19ab1d94,28972060,0,0x0,8
tick,0x7ffa19ab1d94,28987547,0,0x0,8
tick,0x7ffa19ab1d94,29003116,0,0x0,8
tick,0x7ffa19ab1d94,29019071,0,0x0,8
tick,0x7ffa19ab1d94,29035283,0,0x0,8
tick,0x7ffa19ab1d94,29050236,0,0x0,8
tick,0x7ffa19ab1d94,29065452,0,0x0,8
tick,0x7ffa19ab1d94,29080874,0,0x0,8
tick,0x7ffa19ab1d94,29096214,0,0x0,8
tick,0x7ffa19ab1d94,29111980,0,0x0,8
tick,0x7ffa19ab1d94,29127256,0,0x0,8
tick,0x7ffa19ab1d94,29144168,0,0x0,8
tick,0x7ffa19ab1d94,29158281,0,0x0,8
tick,0x7ffa19ab1d94,29174405,0,0x0,8
tick,0x7ffa19ab1d94,29190540,0,0x0,8
tick,0x7ffa19ab1d94,29206172,0,0x0,8
tick,0x7ffa19ab1d94,29222021,0,0x0,8
tick,0x7ffa19ab1d94,29237430,0,0x0,8
tick,0x7ffa19ab1d94,29253480,0,0x0,8
tick,0x7ffa19ab1d94,29269064,0,0x0,8
tick,0x7ffa19ab1d94,29284330,0,0x0,8
tick,0x7ffa19ab1d94,29300047,0,0x0,8
tick,0x7ffa19ab1d94,29315811,0,0x0,8
tick,0x7ffa19ab1d94,29331757,0,0x0,8
tick,0x7ffa19ab1d94,29346678,0,0x0,8
tick,0x7ffa19ab1d94,29361649,0,0x0,8
tick,0x7ffa19ab1d94,29376873,0,0x0,8
tick,0x7ffa19ab1d94,29393064,0,0x0,8
tick,0x7ffa19ab1d94,29409728,0,0x0,8
tick,0x7ffa19ab1d94,29427659,0,0x0,8
tick,0x7ffa19ab1d94,29439048,0,0x0,8
tick,0x7ffa19ab1d94,29454410,0,0x0,8
tick,0x7ffa19ab1d94,29470142,0,0x0,8
tick,0x7ffa19ab1d94,29486383,0,0x0,8
tick,0x7ffa19ab1d94,29501945,0,0x0,8
tick,0x7ffa19ab1d94,29517143,0,0x0,8
tick,0x7ffa19ab1d94,29532920,0,0x0,8
tick,0x7ffa19ab1d94,29548382,0,0x0,8
tick,0x7ffa19ab1d94,29563698,0,0x0,8
tick,0x7ffa19ab1d94,29579576,0,0x0,8
tick,0x7ffa19ab1d94,29595330,0,0x0,8
tick,0x7ffa19ab1d94,29611597,0,0x0,8
tick,0x7ffa19ab1d94,29627264,0,0x0,8
tick,0x7ffa19ab1d94,29642959,0,0x0,8
tick,0x7ffa19ab1d94,29658620,0,0x0,8
tick,0x7ffa19ab1d94,29674084,0,0x0,8
tick,0x7ffa19ab1d94,29690262,0,0x0,8
tick,0x7ffa19ab1d94,29705062,0,0x0,8
tick,0x7ffa19ab1d94,29720627,0,0x0,8
tick,0x7ffa19ab1d94,29736616,0,0x0,8
tick,0x7ffa19ab1d94,29751610,0,0x0,8
tick,0x7ffa19ab1d94,29767413,0,0x0,8
tick,0x7ffa19ab1d94,29782757,0,0x0,8
tick,0x7ffa19ab1d94,29798558,0,0x0,8
tick,0x7ffa19ab1d94,29814175,0,0x0,8
tick,0x7ffa19ab1d94,29829346,0,0x0,8
tick,0x7ffa19ab1d94,29845129,0,0x0,8
tick,0x7ffa19ab1d94,29862347,0,0x0,8
tick,0x7ffa19ab1d94,29876521,0,0x0,8
tick,0x7ffa19ab1d94,29892720,0,0x0,8
tick,0x7ffa19ab1d94,29908790,0,0x0,8
tick,0x7ffa19ab1d94,29924609,0,0x0,8
tick,0x7ffa19ab1d94,29941220,0,0x0,8
tick,0x7ffa19ab1d94,29955164,0,0x0,8
tick,0x7ffa19ab1d94,29970922,0,0x0,8
tick,0x7ffa19ab1d94,29986605,0,0x0,8
tick,0x7ffa19ab1d94,30002176,0,0x0,8
tick,0x7ffa19ab1d94,30017528,0,0x0,8
tick,0x7ffa19ab1d94,30033533,0,0x0,8
tick,0x7ffa19ab1d94,30049156,0,0x0,8
tick,0x7ffa19ab1d94,30063988,0,0x0,8
tick,0x7ffa19ab1d94,30080823,0,0x0,8
tick,0x7ffa19ab1d94,30095557,0,0x0,8
tick,0x7ffa19ab1d94,30111745,0,0x0,8
tick,0x7ffa19ab1d94,30127055,0,0x0,8
tick,0x7ffa19ab1d94,30142883,0,0x0,8
tick,0x7ffa19ab1d94,30157882,0,0x0,8
tick,0x7ffa19ab1d94,30173765,0,0x0,8
tick,0x7ffa19ab1d94,30189739,0,0x0,8
tick,0x7ffa19ab1d94,30204666,0,0x0,8
tick,0x7ffa19ab1d94,30219858,0,0x0,8
tick,0x7ffa19ab1d94,30235387,0,0x0,8
tick,0x7ffa19ab1d94,30252075,0,0x0,8
tick,0x7ffa19ab1d94,30268031,0,0x0,8
tick,0x7ffa19ab1d94,30282959,0,0x0,8
tick,0x7ffa19ab1d94,30298810,0,0x0,8
tick,0x7ffa19ab1d94,30314644,0,0x0,8
tick,0x7ffa19ab1d94,30329495,0,0x0,8
tick,0x7ffa19ab1d94,30344796,0,0x0,8
tick,0x7ffa19ab1d94,30359947,0,0x0,8
tick,0x7ffa19ab1d94,30375686,0,0x0,8
tick,0x7ffa19ab1d94,30391908,0,0x0,8
tick,0x7ffa19ab1d94,30431151,0,0x0,8
tick,0x7ffa19ab1d94,30447784,0,0x0,8
tick,0x7ffa19ab1d94,30453105,0,0x0,8
tick,0x7ffa19ab1d94,30468371,0,0x0,8
tick,0x7ffa19ab1d94,30484059,0,0x0,8
tick,0x7ffa19ab1d94,30499281,0,0x0,8
tick,0x7ffa19ab1d94,30514998,0,0x0,8
tick,0x7ffa19ab1d94,30530930,0,0x0,8
tick,0x7ffa19ab1d94,30546319,0,0x0,8
tick,0x7ffa19ab1d94,30563237,0,0x0,8
tick,0x7ffa19ab1d94,30577490,0,0x0,8
tick,0x7ffa19ab1d94,30592838,0,0x0,8
tick,0x7ffa19ab1d94,30608320,0,0x0,8
tick,0x7ffa19ab1d94,30624755,0,0x0,8
tick,0x7ffa19ab1d94,30641452,0,0x0,8
tick,0x7ffa19ab1d94,30655131,0,0x0,8
tick,0x7ffa19ab1d94,30670939,0,0x0,8
tick,0x7ffa19ab1d94,30686670,0,0x0,8
tick,0x7ffa19ab1d94,30702724,0,0x0,8
tick,0x7ffa19ab1d94,30718356,0,0x0,8
tick,0x7ffa19ab1d94,30733792,0,0x0,8
tick,0x7ffa19ab1d94,30748935,0,0x0,8
tick,0x7ffa19ab1d94,30764555,0,0x0,8
tick,0x7ffa19ab1d94,30780056,0,0x0,8
tick,0x7ffa19ab1d94,30795566,0,0x0,8
tick,0x7ffa19ab1d94,30810842,0,0x0,8
tick,0x7ffa19ab1d94,30826113,0,0x0,8
tick,0x7ffa19ab1d94,30841793,0,0x0,8
tick,0x7ffa19ab1d94,30857783,0,0x0,8
tick,0x7ffa19ab1d94,30874477,0,0x0,8
tick,0x7ffa19ab1d94,30889607,0,0x0,8
tick,0x7ffa19ab1d94,30904481,0,0x0,8
tick,0x7ffa19ab1d94,30919413,0,0x0,8
tick,0x7ffa19ab1d94,30934804,0,0x0,8
tick,0x7ffa19ab1d94,30949645,0,0x0,8
tick,0x7ffa19ab1d94,30964443,0,0x0,8
tick,0x7ffa19ab1d94,30980915,0,0x0,8
tick,0x7ffa19ab1d94,30996791,0,0x0,8
tick,0x7ffa19ab1d94,31012861,0,0x0,8
tick,0x7ffa19ab1d94,31028930,0,0x0,8
tick,0x7ffa19ab1d94,31044582,0,0x0,8
tick,0x7ffa19ab1d94,31060220,0,0x0,8
tick,0x7ffa19ab1d94,31075742,0,0x0,8
tick,0x7ffa19ab1d94,31091540,0,0x0,8
tick,0x7ffa19ab1d94,31107080,0,0x0,8
tick,0x7ffa19ab1d94,31125252,0,0x0,8
tick,0x7ffa19ab1d94,31139451,0,0x0,8
tick,0x7ffa19ab1d94,31154128,0,0x0,8
tick,0x7ffa19ab1d94,31170082,0,0x0,8
tick,0x7ffa19ab1d94,31185851,0,0x0,8
tick,0x7ffa19ab1d94,31201593,0,0x0,8
tick,0x7ffa19ab1d94,31217351,0,0x0,8
tick,0x7ffa19ab1d94,31233071,0,0x0,8
tick,0x7ffa19ab1d94,31248879,0,0x0,8
tick,0x7ffa19ab1d94,31264702,0,0x0,8
tick,0x7ffa19ab1d94,31280988,0,0x0,8
tick,0x7ffa19ab1d94,31296191,0,0x0,8
tick,0x7ffa19ab1d94,31311435,0,0x0,8
tick,0x7ffa19ab1d94,31328292,0,0x0,8
tick,0x7ffa19ab1d94,31342990,0,0x0,8
tick,0x7ffa19ab1d94,31358456,0,0x0,8
tick,0x7ffa19ab1d94,31374073,0,0x0,8
tick,0x7ffa19ab1d94,31390267,0,0x0,8
tick,0x7ffa19ab1d94,31407004,0,0x0,8
tick,0x7ffa19ab1d94,31422013,0,0x0,8
tick,0x7ffa19ab1d94,31437451,0,0x0,8
tick,0x7ffa19ab1d94,31461277,0,0x0,8
tick,0x7ffa19ab1d94,31472984,0,0x0,8
tick,0x7ffa19ab1d94,31485132,0,0x0,8
tick,0x7ffa19ab1d94,31500587,0,0x0,8
tick,0x7ffa19ab1d94,31516414,0,0x0,8
tick,0x7ffa19ab1d94,31531484,0,0x0,8
tick,0x7ffa19ab1d94,31547230,0,0x0,8
tick,0x7ffa19ab1d94,31562308,0,0x0,8
tick,0x7ffa19ab1d94,31578266,0,0x0,8
tick,0x7ffa19ab1d94,31593409,0,0x0,8
tick,0x7ffa19ab1d94,31609048,0,0x0,8
tick,0x7ffa19ab1d94,31624350,0,0x0,8
tick,0x7ffa19ab1d94,31643834,0,0x0,8
tick,0x7ffa19ab1d94,31655332,0,0x0,8
tick,0x7ffa19ab1d94,31670368,0,0x0,8
tick,0x7ffa19ab1d94,31685575,0,0x0,8
tick,0x7ffa19ab1d94,31700968,0,0x0,8
tick,0x7ffa19ab1d94,31716666,0,0x0,8
tick,0x7ffa19ab1d94,31732762,0,0x0,8
tick,0x7ffa19ab1d94,31748302,0,0x0,8
tick,0x7ffa19ab1d94,31763688,0,0x0,8
tick,0x7ffa19ab1d94,31780522,0,0x0,8
tick,0x7ffa19ab1d94,31795616,0,0x0,8
tick,0x7ffa19ab1d94,31811438,0,0x0,8
tick,0x7ffa19ab1d94,31826613,0,0x0,8
tick,0x7ffa19ab1d94,31842696,0,0x0,8
tick,0x7ffa19ab1d94,31858357,0,0x0,8
tick,0x7ffa19ab1d94,31875077,0,0x0,8
tick,0x7ffa19ab1d94,31889190,0,0x0,8
tick,0x7ffa19ab1d94,31905145,0,0x0,8
tick,0x7ffa19ab1d94,31919297,0,0x0,8
tick,0x7ffa19ab1d94,31934776,0,0x0,8
tick,0x7ffa19ab1d94,31950943,0,0x0,8
tick,0x7ffa19ab1d94,31966358,0,0x0,8
tick,0x7ffa19ab1d94,31981920,0,0x0,8
tick,0x7ffa19ab1d94,31997253,0,0x0,8
tick,0x7ffa19ab1d94,32012692,0,0x0,8
tick,0x7ffa19ab1d94,32028624,0,0x0,8
tick,0x7ffa19ab1d94,32043914,0,0x0,8
tick,0x7ffa19ab1d94,32059501,0,0x0,8
tick,0x7ffa19ab1d94,32074598,0,0x0,8
tick,0x7ffa19ab1d94,32090642,0,0x0,8
tick,0x7ffa19ab1d94,32106518,0,0x0,8
tick,0x7ffa19ab1d94,32121791,0,0x0,8
tick,0x7ffa19ab1d94,32138197,0,0x0,8
tick,0x7ffa19ab1d94,32153736,0,0x0,8
tick,0x7ffa19ab1d94,32169774,0,0x0,8
tick,0x7ffa19ab1d94,32184448,0,0x0,8
tick,0x7ffa19ab1d94,32200227,0,0x0,8
tick,0x7ffa19ab1d94,32216186,0,0x0,8
tick,0x7ffa19ab1d94,32231879,0,0x0,8
tick,0x7ffa19ab1d94,32248200,0,0x0,8
tick,0x7ffa19ab1d94,32263260,0,0x0,8
tick,0x7ffa19ab1d94,32278486,0,0x0,8
tick,0x7ffa19ab1d94,32294939,0,0x0,8
tick,0x7ffa19ab1d94,32309874,0,0x0,8
tick,0x7ffa19ab1d94,32325743,0,0x0,8
tick,0x7ffa19ab1d94,32341888,0,0x0,8
tick,0x7ffa19ab1d94,32357197,0,0x0,8
tick,0x7ffa19ab1d94,32373354,0,0x0,8
tick,0x7ffa19ab1d94,32389477,0,0x0,8
tick,0x7ffa19ab1d94,32405964,0,0x0,8
tick,0x7ffa19ab1d94,32420589,0,0x0,8
tick,0x7ffa19ab1d94,32436840,0,0x0,8
tick,0x7ffa19ab1d94,32451929,0,0x0,8
tick,0x7ffa19ab1d94,32467313,0,0x0,8
tick,0x7ffa19ab1d94,32482938,0,0x0,8
tick,0x7ffa19ab1d94,32499162,0,0x0,8
tick,0x7ffa19ab1d94,32513704,0,0x0,8
tick,0x7ffa19ab1d94,32529043,0,0x0,8
tick,0x7ffa19ab1d94,32544404,0,0x0,8
tick,0x7ffa19ab1d94,32560413,0,0x0,8
tick,0x7ffa19ab1d94,32575723,0,0x0,8
tick,0x7ffa19ab1d94,32591795,0,0x0,8
tick,0x7ffa19ab1d94,32607630,0,0x0,8
tick,0x7ffa19ab1d94,32622953,0,0x0,8
tick,0x7ffa19ab1d94,32638945,0,0x0,8
tick,0x7ffa19ab1d94,32654268,0,0x0,8
tick,0x7ffa19ab1d94,32670216,0,0x0,8
tick,0x7ffa19ab1d94,32686451,0,0x0,8
tick,0x7ffa19ab1d94,32703294,0,0x0,8
tick,0x7ffa19ab1d94,32717923,0,0x0,8
tick,0x7ffa19ab1d94,32733523,0,0x0,8
tick,0x7ffa19ab1d94,32749429,0,0x0,8
tick,0x7ffa19ab1d94,32764862,0,0x0,8
tick,0x7ffa19ab1d94,32780841,0,0x0,8
tick,0x7ffa19ab1d94,32796365,0,0x0,8
tick,0x7ffa19ab1d94,32812509,0,0x0,8
tick,0x7ffa19ab1d94,32827833,0,0x0,8
tick,0x7ffa19ab1d94,32843508,0,0x0,8
tick,0x7ffa19ab1d94,32858798,0,0x0,8
tick,0x7ffa19ab1d94,32874185,0,0x0,8
tick,0x7ffa19ab1d94,32889900,0,0x0,8
tick,0x7ffa19ab1d94,32905553,0,0x0,8
tick,0x7ffa19ab1d94,32921091,0,0x0,8
tick,0x7ffa19ab1d94,32936770,0,0x0,8
tick,0x7ffa19ab1d94,32952616,0,0x0,8
tick,0x7ffa19ab1d94,32967933,0,0x0,8
tick,0x7ffa19ab1d94,32983339,0,0x0,8
tick,0x7ffa19ab1d94,32998734,0,0x0,8
tick,0x7ffa19ab1d94,33013966,0,0x0,8
tick,0x7ffa19ab1d94,33029362,0,0x0,8
tick,0x7ffa19ab1d94,33045077,0,0x0,8
tick,0x7ffa19ab1d94,33060110,0,0x0,8
tick,0x7ffa19ab1d94,33075651,0,0x0,8
tick,0x7ffa19ab1d94,33091759,0,0x0,8
tick,0x7ffa19ab1d94,33106829,0,0x0,8
tick,0x7ffa19ab1d94,33122022,0,0x0,8
tick,0x7ffa19ab1d94,33137132,0,0x0,8
tick,0x7ffa19ab1d94,33153801,0,0x0,8
tick,0x7ffa19ab1d94,33168303,0,0x0,8
tick,0x7ffa19ab1d94,33183601,0,0x0,8
tick,0x7ffa19ab1d94,33199301,0,0x0,8
tick,0x7ffa19ab1d94,33214472,0,0x0,8
tick,0x7ffa19ab1d94,33230832,0,0x0,8
tick,0x7ffa19ab1d94,33246162,0,0x0,8
tick,0x7ffa19ab1d94,33261814,0,0x0,8
tick,0x7ffa19ab1d94,33277309,0,0x0,8
tick,0x7ffa19ab1d94,33293411,0,0x0,8
tick,0x7ffa19ab1d94,33309587,0,0x0,8
tick,0x7ffa19ab1d94,33324946,0,0x0,8
tick,0x7ffa19ab1d94,33340502,0,0x0,8
tick,0x7ffa19ab1d94,33356794,0,0x0,8
tick,0x7ffa19ab1d94,33372835,0,0x0,8
tick,0x7ffa19ab1d94,33388091,0,0x0,8
tick,0x7ffa19ab1d94,33403849,0,0x0,8
tick,0x7ffa19ab1d94,33419591,0,0x0,8
tick,0x7ffa19ab1d94,33435415,0,0x0,8
tick,0x7ffa19ab1d94,33450745,0,0x0,8
tick,0x7ffa19ab1d94,33466768,0,0x0,8
tick,0x7ffa19ab1d94,33481638,0,0x0,8
tick,0x7ffa19ab1d94,33496621,0,0x0,8
tick,0x7ffa19ab1d94,33512820,0,0x0,8
tick,0x7ffa19ab1d94,33528576,0,0x0,8
tick,0x7ffa19ab1d94,33544687,0,0x0,8
tick,0x7ffa19ab1d94,33560149,0,0x0,8
tick,0x7ffa19ab1d94,33575977,0,0x0,8
tick,0x7ffa19ab1d94,33591687,0,0x0,8
tick,0x7ffa19ab1d94,33607606,0,0x0,8
tick,0x7ffa19ab1d94,33623255,0,0x0,8
tick,0x7ffa19ab1d94,33638892,0,0x0,8
tick,0x7ffa19ab1d94,33654453,0,0x0,8
tick,0x7ffa19ab1d94,33670339,0,0x0,8
tick,0x7ffa19ab1d94,33685878,0,0x0,8
tick,0x7ffa19ab1d94,33701965,0,0x0,8
tick,0x7ffa19ab1d94,33717050,0,0x0,8
tick,0x7ffa19ab1d94,33732593,0,0x0,8
tick,0x7ffa19ab1d94,33748027,0,0x0,8
tick,0x7ffa19ab1d94,33763883,0,0x0,8
tick,0x7ffa19ab1d94,33779065,0,0x0,8
tick,0x7ffa19ab1d94,33795357,0,0x0,8
tick,0x7ffa19ab1d94,33810598,0,0x0,8
tick,0x7ffa19ab1d94,33826039,0,0x0,8
tick,0x7ffa19ab1d94,33841452,0,0x0,8
tick,0x7ffa19ab1d94,33857132,0,0x0,8
tick,0x7ffa19ab1d94,33872597,0,0x0,8
tick,0x7ffa19ab1d94,33888312,0,0x0,8
tick,0x7ffa19ab1d94,33903851,0,0x0,8
tick,0x7ffa19ab1d94,33920476,0,0x0,8
tick,0x7ffa19ab1d94,33936491,0,0x0,8
tick,0x7ffa19ab1d94,33951645,0,0x0,8
tick,0x7ffa19ab1d94,33967610,0,0x0,8
tick,0x7ffa19ab1d94,33983631,0,0x0,8
tick,0x7ffa19ab1d94,33998709,0,0x0,8
tick,0x7ffa19ab1d94,34014460,0,0x0,8
tick,0x7ffa19ab1d94,34029828,0,0x0,8
tick,0x7ffa19ab1d94,34045622,0,0x0,8
tick,0x7ffa19ab1d94,34061708,0,0x0,8
tick,0x7ffa19ab1d94,34079363,0,0x0,8
tick,0x7ffa19ab1d94,34099024,0,0x0,8
tick,0x7ffa19ab1d94,34110545,0,0x0,8
tick,0x7ffa19ab1d94,34124712,0,0x0,8
tick,0x7ffa19ab1d94,34139794,0,0x0,8
tick,0x7ffa19ab1d94,34160853,0,0x0,8
tick,0x7ffa19ab1d94,34171657,0,0x0,8
tick,0x7ffa19ab1d94,34195813,0,0x0,8
tick,0x7ffa19ab1d94,34205112,0,0x0,8
tick,0x7ffa19ab1d94,34221286,0,0x0,8
tick,0x7ffa19ab1d94,34240180,0,0x0,8
tick,0x7ffa19ab1d94,34251146,0,0x0,8
tick,0x7ffa19ab1d94,34266793,0,0x0,8
tick,0x7ffa19ab1d94,34281720,0,0x0,8
tick,0x7ffa19ab1d94,34300061,0,0x0,8
tick,0x7ffa19ab1d94,34316178,0,0x0,8
tick,0x7ffa19ab1d94,34341002,0,0x0,8
tick,0x7ffa19ab1d94,34347851,0,0x0,8
tick,0x7ffa19ab1d94,34360874,0,0x0,8
tick,0x7ffa19ab1d94,34376241,0,0x0,8
tick,0x7ffa19ab1d94,34391603,0,0x0,8
tick,0x7ffa19ab1d94,34407526,0,0x0,8
tick,0x7ffa19ab1d94,34423463,0,0x0,8
tick,0x7ffa19ab1d94,34439807,0,0x0,8
tick,0x7ffa19ab1d94,34456246,0,0x0,8
tick,0x7ffa19ab1d94,34477501,0,0x0,8
tick,0x7ffa19ab1d94,34504656,0,0x0,8
tick,0x7ffa19ab1d94,34523505,0,0x0,8
tick,0x7ffa19ab1d94,34537978,0,0x0,8
tick,0x7ffa19ab1d94,34551398,0,0x0,8
tick,0x7ffa19ab1d94,34566908,0,0x0,8
tick,0x7ffa19ab1d94,34583402,0,0x0,8
tick,0x7ffa19ab1d94,34598246,0,0x0,8
tick,0x7ffa19ab1d94,34614581,0,0x0,8
tick,0x7ffa19ab1d94,34629893,0,0x0,8
tick,0x7ffa19ab1d94,34644829,0,0x0,8
tick,0x7ffa19ab1d94,34660363,0,0x0,8
tick,0x7ffa19ab1d94,34675862,0,0x0,8
tick,0x7ffa19ab1d94,34691484,0,0x0,8
tick,0x7ffa19ab1d94,34707748,0,0x0,8
tick,0x7ffa19ab1d94,34726510,0,0x0,8
tick,0x7ffa19ab1d94,34737667,0,0x0,8
tick,0x7ffa19ab1d94,34752731,0,0x0,8
tick,0x7ffa19ab1d94,34768496,0,0x0,8
tick,0x7ffa19ab1d94,34783674,0,0x0,8
tick,0x7ffa19ab1d94,34799810,0,0x0,8
tick,0x7ffa19ab1d94,34815504,0,0x0,8
tick,0x7ffa19ab1d94,34831769,0,0x0,8
tick,0x7ffa19ab1d94,34847320,0,0x0,8
tick,0x7ffa19ab1d94,34863186,0,0x0,8
tick,0x7ffa19ab1d94,34878610,0,0x0,8
tick,0x7ffa19ab1d94,34894879,0,0x0,8
tick,0x7ffa19ab1d94,34910195,0,0x0,8
tick,0x7ffa19ab1d94,34926802,0,0x0,8
tick,0x7ffa19ab1d94,34941678,0,0x0,8
tick,0x7ffa19ab1d94,34957335,0,0x0,8
tick,0x7ffa19ab1d94,34972723,0,0x0,8
tick,0x7ffa19ab1d94,34988249,0,0x0,8
tick,0x7ffa19ab1d94,35003557,0,0x0,8
tick,0x7ffa19ab1d94,35019810,0,0x0,8
tick,0x7ffa19ab1d94,35035656,0,0x0,8
tick,0x7ffa19ab1d94,35050552,0,0x0,8
tick,0x7ffa19ab1d94,35066488,0,0x0,8
tick,0x7ffa19ab1d94,35082749,0,0x0,8
tick,0x7ffa19ab1d94,35097968,0,0x0,8
tick,0x7ffa19ab1d94,35113827,0,0x0,8
tick,0x7ffa19ab1d94,35130605,0,0x0,8
tick,0x7ffa19ab1d94,35146107,0,0x0,8
tick,0x7ffa19ab1d94,35162968,0,0x0,8
tick,0x7ffa19ab1d94,35177278,0,0x0,8
tick,0x7ffa19ab1d94,35192657,0,0x0,8
tick,0x7ffa19ab1d94,35208912,0,0x0,8
tick,0x7ffa19ab1d94,35224252,0,0x0,8
tick,0x7ffa19ab1d94,35240404,0,0x0,8
tick,0x7ffa19ab1d94,35255852,0,0x0,8
tick,0x7ffa19ab1d94,35271627,0,0x0,8
tick,0x7ffa19ab1d94,35285796,0,0x0,8
tick,0x7ffa19ab1d94,35302255,0,0x0,8
tick,0x7ffa19ab1d94,35319303,0,0x0,8
tick,0x7ffa19ab1d94,35332895,0,0x0,8
tick,0x7ffa19ab1d94,35348757,0,0x0,8
tick,0x7ffa19ab1d94,35364864,0,0x0,8
tick,0x7ffa19ab1d94,35380619,0,0x0,8
tick,0x7ffa19ab1d94,35397647,0,0x0,8
tick,0x7ffa19ab1d94,35412994,0,0x0,8
tick,0x7ffa19ab1d94,35433464,0,0x0,8
tick,0x7ffa19ab1d94,35443347,0,0x0,8
tick,0x7ffa19ab1d94,35458783,0,0x0,8
tick,0x7ffa19ab1d94,35475351,0,0x0,8
tick,0x7ffa19ab1d94,35493720,0,0x0,8
tick,0x7ffa19ab1d94,35505825,0,0x0,8
tick,0x7ffa19ab1d94,35522178,0,0x0,8
tick,0x7ffa19ab1d94,35537395,0,0x0,8
tick,0x7ffa19ab1d94,35556451,0,0x0,8
tick,0x7ffa19ab1d94,35571933,0,0x0,8
tick,0x7ffa19ab1d94,35592853,0,0x0,8
tick,0x7ffa19ab1d94,35611518,0,0x0,8
tick,0x7ffa19ab1d94,35616890,0,0x0,8
tick,0x7ffa19ab1d94,35631977,0,0x0,8
tick,0x7ffa19ab1d94,35647282,0,0x0,8
tick,0x7ffa19ab1d94,35663371,0,0x0,8
tick,0x7ffa19ab1d94,35686843,0,0x0,8
tick,0x7ffa19ab1d94,35697853,0,0x0,8
tick,0x7ffa19ab1d94,35710409,0,0x0,8
tick,0x7ffa19ab1d94,35737329,0,0x0,8
tick,0x7ffa19ab1d94,35743905,0,0x0,8
tick,0x7ffa19ab1d94,35758359,0,0x0,8
tick,0x7ffa19ab1d94,35778757,0,0x0,8
tick,0x7ffa19ab1d94,35793662,0,0x0,8
tick,0x7ffa19ab1d94,35805007,0,0x0,8
tick,0x7ffa19ab1d94,35819663,0,0x0,8
tick,0x7ffa19ab1d94,35837751,0,0x0,8
tick,0x7ffa19ab1d94,35854004,0,0x0,8
tick,0x7ffa19ab1d94,35866840,0,0x0,8
tick,0x7ffa19ab1d94,35882937,0,0x0,8
tick,0x7ffa19ab1d94,35900386,0,0x0,8
tick,0x7ffa19ab1d94,35915172,0,0x0,8
tick,0x7ffa19ab1d94,35930851,0,0x0,8
tick,0x7ffa19ab1d94,35945941,0,0x0,8
tick,0x7ffa19ab1d94,35962051,0,0x0,8
tick,0x7ffa19ab1d94,35977623,0,0x0,8
tick,0x7ffa19ab1d94,35992814,0,0x0,8
tick,0x7ffa19ab1d94,36007803,0,0x0,8
tick,0x7ffa19ab1d94,36023271,0,0x0,8
tick,0x7ffa19ab1d94,36038614,0,0x0,8
tick,0x7ffa19ab1d94,36054114,0,0x0,8
tick,0x7ffa19ab1d94,36070059,0,0x0,8
tick,0x7ffa19ab1d94,36085822,0,0x0,8
tick,0x7ffa19ab1d94,36103473,0,0x0,8
tick,0x7ffa19ab1d94,36116431,0,0x0,8
tick,0x7ffa19ab1d94,36133079,0,0x0,8
tick,0x7ffa19ab1d94,36148535,0,0x0,8
tick,0x7ffa19ab1d94,36164836,0,0x0,8
tick,0x7ffa19ab1d94,36180295,0,0x0,8
tick,0x7ffa19ab1d94,36196068,0,0x0,8
tick,0x7ffa19ab1d94,36211617,0,0x0,8
tick,0x7ffa19ab1d94,36227853,0,0x0,8
tick,0x7ffa19ab1d94,36243896,0,0x0,8
tick,0x7ffa19ab1d94,36259138,0,0x0,8
tick,0x7ffa19ab1d94,36274155,0,0x0,8
tick,0x7ffa19ab1d94,36288899,0,0x0,8
tick,0x7ffa19ab1d94,36304705,0,0x0,8
tick,0x7ffa19ab1d94,36320181,0,0x0,8
tick,0x7ffa19ab1d94,36335925,0,0x0,8
tick,0x7ffa19ab1d94,36351541,0,0x0,8
tick,0x7ffa19ab1d94,36366301,0,0x0,8
tick,0x7ffa19ab1d94,36381536,0,0x0,8
tick,0x7ffa19ab1d94,36397455,0,0x0,8
tick,0x7ffa19ab1d94,36412850,0,0x0,8
tick,0x7ffa19ab1d94,36429071,0,0x0,8
tick,0x7ffa19ab1d94,36443898,0,0x0,8
tick,0x7ffa19ab1d94,36459232,0,0x0,8
tick,0x7ffa19ab1d94,36475286,0,0x0,8
tick,0x7ffa19ab1d94,36491432,0,0x0,8
tick,0x7ffa19ab1d94,36507549,0,0x0,8
tick,0x7ffa19ab1d94,36522462,0,0x0,8
tick,0x7ffa19ab1d94,36537881,0,0x0,8
tick,0x7ffa19ab1d94,36554379,0,0x0,8
tick,0x7ffa19ab1d94,36569480,0,0x0,8
tick,0x7ffa19ab1d94,36585053,0,0x0,8
tick,0x7ffa19ab1d94,36600831,0,0x0,8
tick,0x7ffa19ab1d94,36616728,0,0x0,8
tick,0x7ffa19ab1d94,36632866,0,0x0,8
tick,0x7ffa19ab1d94,36648433,0,0x0,8
tick,0x7ffa19ab1d94,36664188,0,0x0,8
tick,0x7ffa19ab1d94,36679776,0,0x0,8
tick,0x7ffa19ab1d94,36695295,0,0x0,8
tick,0x7ffa19ab1d94,36711641,0,0x0,8
tick,0x7ffa19ab1d94,36726865,0,0x0,8
tick,0x7ffa19ab1d94,36751804,0,0x0,8
tick,0x7ffa19ab1d94,36759097,0,0x0,8
tick,0x7ffa19ab1d94,36774479,0,0x0,8
tick,0x7ffa19ab1d94,36790824,0,0x0,8
tick,0x7ffa19ab1d94,36806560,0,0x0,8
tick,0x7ffa19ab1d94,36822797,0,0x0,8
tick,0x7ffa19ab1d94,36838672,0,0x0,8
tick,0x7ffa19ab1d94,36855154,0,0x0,8
tick,0x7ffa19ab1d94,36869992,0,0x0,8
tick,0x7ffa19ab1d94,36885869,0,0x0,8
tick,0x7ffa19ab1d94,36901350,0,0x0,8
tick,0x7ffa19ab1d94,36917205,0,0x0,8
tick,0x7ffa19ab1d94,36933562,0,0x0,8
tick,0x7ffa19ab1d94,36948391,0,0x0,8
tick,0x7ffa19ab1d94,36964400,0,0x0,8
tick,0x7ffa19ab1d94,36979700,0,0x0,8
tick,0x7ffa19ab1d94,36995275,0,0x0,8
tick,0x7ffa19ab1d94,37010507,0,0x0,8
tick,0x7ffa19ab1d94,37026106,0,0x0,8
tick,0x7ffa19ab1d94,37041948,0,0x0,8
tick,0x7ffa19ab1d94,37057557,0,0x0,8
tick,0x7ffa19ab1d94,37073068,0,0x0,8
tick,0x7ffa19ab1d94,37088381,0,0x0,8
tick,0x7ffa19ab1d94,37103747,0,0x0,8
tick,0x7ffa19ab1d94,37119046,0,0x0,8
tick,0x7ffa19ab1d94,37134834,0,0x0,8
tick,0x7ffa19ab1d94,37150407,0,0x0,8
tick,0x7ffa19ab1d94,37166553,0,0x0,8
tick,0x7ffa19ab1d94,37182088,0,0x0,8
tick,0x7ffa19ab1d94,37197520,0,0x0,8
tick,0x7ffa19ab1d94,37213059,0,0x0,8
tick,0x7ffa19ab1d94,37227680,0,0x0,8
tick,0x7ffa19ab1d94,37243333,0,0x0,8
tick,0x7ffa19ab1d94,37259045,0,0x0,8
tick,0x7ffa19ab1d94,37274275,0,0x0,8
tick,0x7ffa19ab1d94,37290573,0,0x0,8
tick,0x7ffa19ab1d94,37308158,0,0x0,8
tick,0x7ffa19ab1d94,37323663,0,0x0,8
tick,0x7ffa19ab1d94,37338925,0,0x0,8
tick,0x7ffa19ab1d94,37353892,0,0x0,8
tick,0x7ffa19ab1d94,37370024,0,0x0,8
tick,0x7ffa19ab1d94,37384002,0,0x0,8
tick,0x7ffa19ab1d94,37399773,0,0x0,8
tick,0x7ffa19ab1d94,37415816,0,0x0,8
tick,0x7ffa19ab1d94,37431447,0,0x0,8
tick,0x7ffa19ab1d94,37447459,0,0x0,8
tick,0x7ffa19ab1d94,37462614,0,0x0,8
tick,0x7ffa19ab1d94,37477810,0,0x0,8
tick,0x7ffa19ab1d94,37494275,0,0x0,8
tick,0x7ffa19ab1d94,37509430,0,0x0,8
tick,0x7ffa19ab1d94,37525325,0,0x0,8
tick,0x7ffa19ab1d94,37541986,0,0x0,8
tick,0x7ffa19ab1d94,37557662,0,0x0,8
tick,0x7ffa19ab1d94,37573064,0,0x0,8
tick,0x7ffa19ab1d94,37589197,0,0x0,8
tick,0x7ffa19ab1d94,37605454,0,0x0,8
tick,0x7ffa19ab1d94,37620727,0,0x0,8
tick,0x7ffa19ab1d94,37635885,0,0x0,8
tick,0x7ffa19ab1d94,37651451,0,0x0,8
tick,0x7ffa19ab1d94,37667128,0,0x0,8
tick,0x7ffa19ab1d94,37683021,0,0x0,8
tick,0x7ffa19ab1d94,37697824,0,0x0,8
tick,0x7ffa19ab1d94,37713257,0,0x0,8
tick,0x7ffa19ab1d94,37728844,0,0x0,8
tick,0x7ffa19ab1d94,37744551,0,0x0,8
tick,0x7ffa19ab1d94,37760598,0,0x0,8
tick,0x7ffa19ab1d94,37776250,0,0x0,8
tick,0x7ffa19ab1d94,37791730,0,0x0,8
tick,0x7ffa19ab1d94,37807268,0,0x0,8
tick,0x7ffa19ab1d94,37822550,0,0x0,8
tick,0x7ffa19ab1d94,37838627,0,0x0,8
tick,0x7ffa19ab1d94,37853878,0,0x0,8
tick,0x7ffa19ab1d94,37869434,0,0x0,8
tick,0x7ffa19ab1d94,37884720,0,0x0,8
tick,0x7ffa19ab1d94,37903055,0,0x0,8
tick,0x7ffa19ab1d94,37917361,0,0x0,8
tick,0x7ffa19ab1d94,37937699,0,0x0,8
tick,0x7ffa19ab1d94,37947380,0,0x0,8
tick,0x7ffa19ab1d94,37968788,0,0x0,8
tick,0x7ffa19ab1d94,37979270,0,0x0,8
tick,0x7ffa19ab1d94,37994427,0,0x0,8
tick,0x7ffa19ab1d94,38010609,0,0x0,8
tick,0x7ffa19ab1d94,38025965,0,0x0,8
tick,0x7ffa19ab1d94,38041844,0,0x0,8
tick,0x7ffa19ab1d94,38057487,0,0x0,8
tick,0x7ffa19ab1d94,38074130,0,0x0,8
tick,0x7ffa19ab1d94,38089689,0,0x0,8
tick,0x7ffa19ab1d94,38107331,0,0x0,8
tick,0x7ffa19ab1d94,38121074,0,0x0,8
tick,0x7ffa19ab1d94,38136747,0,0x0,8
tick,0x7ffa19ab1d94,38151518,0,0x0,8
tick,0x7ffa19ab1d94,38169516,0,0x0,8
tick,0x7ffa19ab1d94,38183469,0,0x0,8
tick,0x7ffa19ab1d94,38201179,0,0x0,8
tick,0x7ffa19ab1d94,38214820,0,0x0,8
tick,0x7ffa19ab1d94,38230032,0,0x0,8
tick,0x7ffa19ab1d94,38245399,0,0x0,8
tick,0x7ffa19ab1d94,38261498,0,0x0,8
tick,0x7ffa19ab1d94,38277459,0,0x0,8
tick,0x7ffa19ab1d94,38293541,0,0x0,8
tick,0x7ffa19ab1d94,38309102,0,0x0,8
tick,0x7ffa19ab1d94,38324804,0,0x0,8
tick,0x7ffa19ab1d94,38340837,0,0x0,8
tick,0x7ffa19ab1d94,38355907,0,0x0,8
tick,0x7ffa19ab1d94,38372206,0,0x0,8
tick,0x7ffa19ab1d94,38394655,0,0x0,8
tick,0x7ffa19ab1d94,38404887,0,0x0,8
tick,0x7ffa19ab1d94,38419675,0,0x0,8
tick,0x7ffa19ab1d94,38435474,0,0x0,8
tick,0x7ffa19ab1d94,38450858,0,0x0,8
tick,0x7ffa19ab1d94,38465757,0,0x0,8
tick,0x7ffa19ab1d94,38481028,0,0x0,8
tick,0x7ffa19ab1d94,38496483,0,0x0,8
tick,0x7ffa19ab1d94,38511859,0,0x0,8
tick,0x7ffa19ab1d94,38526751,0,0x0,8
tick,0x7ffa19ab1d94,38541586,0,0x0,8
tick,0x7ffa19ab1d94,38556491,0,0x0,8
tick,0x7ffa19ab1d94,38572339,0,0x0,8
tick,0x7ffa19ab1d94,38587708,0,0x0,8
tick,0x7ffa19ab1d94,38604590,0,0x0,8
tick,0x7ffa19ab1d94,38619290,0,0x0,8
tick,0x7ffa19ab1d94,38635992,0,0x0,8
tick,0x7ffa19ab1d94,38651012,0,0x0,8
tick,0x7ffa19ab1d94,38683260,0,0x0,8
tick,0x7ffa19ab1d94,38700140,0,0x0,8
tick,0x7ffa19ab1d94,38713625,0,0x0,8
tick,0x7ffa19ab1d94,38734404,0,0x0,8
tick,0x7ffa19ab1d94,38746631,0,0x0,8
tick,0x7ffa19ab1d94,38761818,0,0x0,8
tick,0x7ffa19ab1d94,38776526,0,0x0,8
tick,0x7ffa19ab1d94,38791740,0,0x0,8
tick,0x7ffa19ab1d94,38807149,0,0x0,8
tick,0x7ffa19ab1d94,38823218,0,0x0,8
tick,0x7ffa19ab1d94,38838141,0,0x0,8
tick,0x7ffa19ab1d94,38856513,0,0x0,8
tick,0x7ffa19ab1d94,38869808,0,0x0,8
tick,0x7ffa19ab1d94,38884971,0,0x0,8
tick,0x7ffa19ab1d94,38908598,0,0x0,8
tick,0x7ffa19ab1d94,38917972,0,0x0,8
tick,0x7ffa19ab1d94,38942944,0,0x0,8
tick,0x7ffa19ab1d94,38945492,0,0x0,8
tick,0x7ffa19ab1d94,38964251,0,0x0,8
tick,0x7ffa19ab1d94,38977632,0,0x0,8
tick,0x7ffa19ab1d94,38995654,0,0x0,8
tick,0x7ffa19ab1d94,39008374,0,0x0,8
tick,0x7ffa19ab1d94,39025785,0,0x0,8
tick,0x7ffa19ab1d94,39046691,0,0x0,8
tick,0x7ffa19ab1d94,39057304,0,0x0,8
tick,0x7ffa19ab1d94,39078074,0,0x0,8
tick,0x7ffa19ab1d94,39087358,0,0x0,8
tick,0x7ffa19ab1d94,39109711,0,0x0,8
tick,0x7ffa19ab1d94,39117281,0,0x0,8
tick,0x7ffa19ab1d94,39134729,0,0x0,8
tick,0x7ffa19ab1d94,39154093,0,0x0,8
tick,0x7ffa19ab1d94,39167624,0,0x0,8
tick,0x7ffa19ab1d94,39179657,0,0x0,8
tick,0x7ffa19ab1d94,39203100,0,0x0,8
tick,0x7ffa19ab1d94,39217475,0,0x0,8
tick,0x7ffa19ab1d94,39226557,0,0x0,8
tick,0x7ffa19ab1d94,39243756,0,0x0,8
tick,0x7ffa19ab1d94,39258933,0,0x0,8
tick,0x7ffa19ab1d94,39273175,0,0x0,8
tick,0x7ffa19ab1d94,39289081,0,0x0,8
tick,0x7ffa19ab1d94,39305078,0,0x0,8
tick,0x7ffa19ab1d94,39319579,0,0x0,8
tick,0x7ffa19ab1d94,39335235,0,0x0,8
tick,0x7ffa19ab1d94,39349762,0,0x0,8
tick,0x7ffa19ab1d94,39365991,0,0x0,8
tick,0x7ffa19ab1d94,39381561,0,0x0,8
tick,0x7ffa19ab1d94,39398848,0,0x0,8
tick,0x7ffa19ab1d94,39412299,0,0x0,8
tick,0x7ffa19ab1d94,39428437,0,0x0,8
tick,0x7ffa19ab1d94,39445848,0,0x0,8
tick,0x7ffa19ab1d94,39458332,0,0x0,8
tick,0x7ffa19ab1d94,39477146,0,0x0,8
tick,0x7ffa19ab1d94,39489898,0,0x0,8
tick,0x7ffa19ab1d94,39505160,0,0x0,8
tick,0x7ffa19ab1d94,39540829,0,0x0,8
tick,0x7ffa19ab1d94,39553644,0,0x0,8
tick,0x7ffa19ab1d94,39568642,0,0x0,8
tick,0x7ffa19ab1d94,39583978,0,0x0,8
tick,0x7ffa19ab1d94,39599255,0,0x0,8
tick,0x7ffa19ab1d94,39615148,0,0x0,8
tick,0x7ffa19ab1d94,39635847,0,0x0,8
tick,0x7ffa19ab1d94,39645543,0,0x0,8
tick,0x7ffa19ab1d94,39662260,0,0x0,8
tick,0x7ffa19ab1d94,39677651,0,0x0,8
tick,0x7ffa19ab1d94,39694880,0,0x0,8
tick,0x7ffa19ab1d94,39715597,0,0x0,8
tick,0x7ffa19ab1d94,39724178,0,0x0,8
tick,0x7ffa19ab1d94,39741900,0,0x0,8
tick,0x7ffa19ab1d94,39755434,0,0x0,8
tick,0x7ffa19ab1d94,39770461,0,0x0,8
tick,0x7ffa19ab1d94,39787550,0,0x0,8
tick,0x7ffa19ab1d94,39801671,0,0x0,8
tick,0x7ffa19ab1d94,39819948,0,0x0,8
tick,0x7ffa19ab1d94,39833374,0,0x0,8
tick,0x7ffa19ab1d94,39851720,0,0x0,8
tick,0x7ffa19ab1d94,39866158,0,0x0,8
tick,0x7ffa19ab1d94,39883610,0,0x0,8
tick,0x7ffa19ab1d94,39896955,0,0x0,8
tick,0x7ffa19ab1d94,39914539,0,0x0,8
tick,0x7ffa19ab1d94,39929169,0,0x0,8
tick,0x7ffa19ab1d94,39943944,0,0x0,8
tick,0x7ffa19ab1d94,39967068,0,0x0,8
tick,0x7ffa19ab1d94,39975213,0,0x0,8
tick,0x7ffa19ab1d94,40003599,0,0x0,8
tick,0x7ffa19ab1d94,40006154,0,0x0,8
tick,0x7ffa19ab1d94,40021601,0,0x0,8
tick,0x7ffa19ab1d94,40039291,0,0x0,8
tick,0x7ffa19ab1d94,40071046,0,0x0,8
tick,0x7ffa19ab1d94,40089337,0,0x0,8
tick,0x7ffa19ab1d94,40102981,0,0x0,8
tick,0x7ffa19ab1d94,40118456,0,0x0,8
tick,0x7ffa19ab1d94,40130777,0,0x0,8
tick,0x7ffa19ab1d94,40146180,0,0x0,8
tick,0x7ffa19ab1d94,40161798,0,0x0,8
tick,0x7ffa19ab1d94,40176393,0,0x0,8
tick,0x7ffa19ab1d94,40193500,0,0x0,8
tick,0x7ffa19ab1d94,40208368,0,0x0,8
tick,0x7ffa19ab1d94,40224838,0,0x0,8
tick,0x7ffa19ab1d94,40240141,0,0x0,8
tick,0x7ffa19ab1d94,40256463,0,0x0,8
tick,0x7ffa19ab1d94,40271858,0,0x0,8
tick,0x7ffa19ab1d94,40287585,0,0x0,8
tick,0x7ffa19ab1d94,40303531,0,0x0,8
tick,0x7ffa19ab1d94,40318476,0,0x0,8
tick,0x7ffa19ab1d94,40335470,0,0x0,8
tick,0x7ffa19ab1d94,40350094,0,0x0,8
tick,0x7ffa19ab1d94,40366543,0,0x0,8
tick,0x7ffa19ab1d94,40381574,0,0x0,8
tick,0x7ffa19ab1d94,40398457,0,0x0,8
tick,0x7ffa19ab1d94,40415725,0,0x0,8
tick,0x7ffa19ab1d94,40428358,0,0x0,8
tick,0x7ffa19ab1d94,40443646,0,0x0,8
tick,0x7ffa19ab1d94,40459693,0,0x0,8
tick,0x7ffa19ab1d94,40474675,0,0x0,8
tick,0x7ffa19ab1d94,40490145,0,0x0,8
tick,0x7ffa19ab1d94,40506387,0,0x0,8
tick,0x7ffa19ab1d94,40522931,0,0x0,8
tick,0x7ffa19ab1d94,40536913,0,0x0,8
tick,0x7ffa19ab1d94,40552985,0,0x0,8
tick,0x7ffa19ab1d94,40568869,0,0x0,8
tick,0x7ffa19ab1d94,40585207,0,0x0,8
tick,0x7ffa19ab1d94,40599878,0,0x0,8
tick,0x7ffa19ab1d94,40615836,0,0x0,8
tick,0x7ffa19ab1d94,40661833,0,0x0,8
tick,0x7ffa19ab1d94,40666396,0,0x0,8
tick,0x7ffa19ab1d94,40683113,0,0x0,8
tick,0x7ffa19ab1d94,40698385,0,0x0,8
tick,0x7ffa19ab1d94,40715863,0,0x0,8
tick,0x7ffa19ab1d94,40726119,0,0x0,8
tick,0x7ffa19ab1d94,40743515,0,0x0,8
tick,0x7ffa19ab1d94,40758354,0,0x0,8
tick,0x7ffa19ab1d94,40774561,0,0x0,8
tick,0x7ffa19ab1d94,40793005,0,0x0,8
tick,0x7ffa19ab1d94,40807102,0,0x0,8
tick,0x7ffa19ab1d94,40821625,0,0x0,8
tick,0x7ffa19ab1d94,40841300,0,0x0,8
tick,0x7ffa19ab1d94,40854441,0,0x0,8
tick,0x7ffa19ab1d94,40868980,0,0x0,8
tick,0x7ffa19ab1d94,40884715,0,0x0,8
tick,0x7ffa19ab1d94,40900736,0,0x0,8
tick,0x7ffa19ab1d94,40915936,0,0x0,8
tick,0x7ffa19ab1d94,40934372,0,0x0,8
tick,0x7ffa19ab1d94,40949639,0,0x0,8
tick,0x7ffa19ab1d94,40964980,0,0x0,8
tick,0x7ffa19ab1d94,40981946,0,0x0,8
tick,0x7ffa19ab1d94,40994319,0,0x0,8
tick,0x7ffa19ab1d94,41010488,0,0x0,8
tick,0x7ffa19ab1d94,41027058,0,0x0,8
tick,0x7ffa19ab1d94,41041964,0,0x0,8
tick,0x7ffa19ab1d94,41055863,0,0x0,8
tick,0x7ffa19ab1d94,41075884,0,0x0,8
tick,0x7ffa19ab1d94,41089153,0,0x0,8
tick,0x7ffa19ab1d94,41120712,0,0x0,8
tick,0x7ffa19ab1d94,41140443,0,0x0,8
tick,0x7ffa19ab1d94,41164953,0,0x0,8
tick,0x7ffa19ab1d94,41183578,0,0x0,8
tick,0x7ffa19ab1d94,41201375,0,0x0,8
tick,0x7ffa19ab1d94,41215626,0,0x0,8
tick,0x7ffa19ab1d94,41237083,0,0x0,8
tick,0x7ffa19ab1d94,41250641,0,0x0,8
tick,0x7ffa19ab1d94,41268170,0,0x0,8
tick,0x7ffa19ab1d94,41278863,0,0x0,8
tick,0x7ffa19ab1d94,41294575,0,0x0,8
tick,0x7ffa19ab1d94,41308968,0,0x0,8
tick,0x7ffa19ab1d94,41334650,0,0x0,8
tick,0x7ffa19ab1d94,41351385,0,0x0,8
tick,0x7ffa19ab1d94,41357776,0,0x0,8
tick,0x7ffa19ab1d94,41372439,0,0x0,8
tick,0x7ffa19ab1d94,41389108,0,0x0,8
tick,0x7ffa19ab1d94,41403243,0,0x0,8
tick,0x7ffa19ab1d94,41426954,0,0x0,8
tick,0x7ffa19ab1d94,41436836,0,0x0,8
tick,0x7ffa19ab1d94,41461173,0,0x0,8
tick,0x7ffa19ab1d94,41465195,0,0x0,8
tick,0x7ffa19ab1d94,41481618,0,0x0,8
tick,0x7ffa19ab1d94,41507193,0,0x0,8
tick,0x7ffa19ab1d94,41514353,0,0x0,8
tick,0x7ffa19ab1d94,41527568,0,0x0,8
tick,0x7ffa19ab1d94,41559029,0,0x0,8
tick,0x7ffa19ab1d94,41583545,0,0x0,8
tick,0x7ffa19ab1d94,41594598,0,0x0,8
tick,0x7ffa19ab1d94,41611001,0,0x0,8
tick,0x7ffa19ab1d94,41625640,0,0x0,8
tick,0x7ffa19ab1d94,41638411,0,0x0,8
tick,0x7ffa19ab1d94,41659573,0,0x0,8
tick,0x7ffa19ab1d94,41685446,0,0x0,8
tick,0x7ffa19ab1d94,41729688,0,0x0,8
tick,0x7ffa19ab1d94,41754024,0,0x0,8
tick,0x7ffa19ab1d94,41771535,0,0x0,8
tick,0x7ffa19ab1d94,41781524,0,0x0,8
tick,0x7ffa19ab1d94,41808383,0,0x0,8
tick,0x7ffa19ab1d94,41824340,0,0x0,8
tick,0x7ffa19ab1d94,41841169,0,0x0,8
tick,0x7ffa19ab1d94,41855997,0,0x0,8
tick,0x7ffa19ab1d94,41872144,0,0x0,8
tick,0x7ffa19ab1d94,41888605,0,0x0,8
tick,0x7ffa19ab1d94,41908533,0,0x0,8
tick,0x7ffa19ab1d94,41924076,0,0x0,8
tick,0x7ffa19ab1d94,41941450,0,0x0,8
tick,0x7ffa19ab1d94,41950747,0,0x0,8
tick,0x7ffa19ab1d94,41981515,0,0x0,8
tick,0x7ffa19ab1d94,42009741,0,0x0,8
tick,0x7ffa19ab1d94,42022523,0,0x0,8
tick,0x7ffa19ab1d94,42030193,0,0x0,8
tick,0x7ffa19ab1d94,42049477,0,0x0,8
tick,0x7ffa19ab1d94,42066606,0,0x0,8
tick,0x7ffa19ab1d94,42090468,0,0x0,8
tick,0x7ffa19ab1d94,42124423,0,0x0,8
tick,0x7ffa19ab1d94,42146597,0,0x0,8
tick,0x7ffa19ab1d94,42154547,0,0x0,8
tick,0x7ffa19ab1d94,42170936,0,0x0,8
tick,0x7ffa19ab1d94,42186199,0,0x0,8
tick,0x7ffa19ab1d94,42205265,0,0x0,8
tick,0x7ffa19ab1d94,42217236,0,0x0,8
tick,0x7ffa19ab1d94,42233332,0,0x0,8
tick,0x7ffa19ab1d94,42249281,0,0x0,8
tick,0x7ffa19ab1d94,42265190,0,0x0,8
tick,0x7ffa19ab1d94,42281026,0,0x0,8
tick,0x7ffa19ab1d94,42298210,0,0x0,8
tick,0x7ffa19ab1d94,42312377,0,0x0,8
tick,0x7ffa19ab1d94,42332689,0,0x0,8
tick,0x7ffa19ab1d94,42346374,0,0x0,8
tick,0x7ffa19ab1d94,42359032,0,0x0,8
tick,0x7ffa19ab1d94,42374762,0,0x0,8
tick,0x7ffa19ab1d94,42390387,0,0x0,8
tick,0x7ffa19ab1d94,42405368,0,0x0,8
tick,0x7ffa19ab1d94,42424462,0,0x0,8
tick,0x7ffa19ab1d94,42437513,0,0x0,8
tick,0x7ffa19ab1d94,42453039,0,0x0,8
tick,0x7ffa19ab1d94,42469019,0,0x0,8
tick,0x7ffa19ab1d94,42484569,0,0x0,8
tick,0x7ffa19ab1d94,42502982,0,0x0,8
tick,0x7ffa19ab1d94,42515991,0,0x0,8
tick,0x7ffa19ab1d94,42531835,0,0x0,8
tick,0x7ffa19ab1d94,42547385,0,0x0,8
tick,0x7ffa19ab1d94,42563539,0,0x0,8
tick,0x7ffa19ab1d94,42579578,0,0x0,8
tick,0x7ffa19ab1d94,42596517,0,0x0,8
tick,0x7ffa19ab1d94,42615727,0,0x0,8
tick,0x7ffa19ab1d94,42626135,0,0x0,8
tick,0x7ffa19ab1d94,42642224,0,0x0,8
tick,0x7ffa19ab1d94,42658069,0,0x0,8
tick,0x7ffa19ab1d94,42675525,0,0x0,8
tick,0x7ffa19ab1d94,42689635,0,0x0,8
tick,0x7ffa19ab1d94,42705738,0,0x0,8
tick,0x7ffa19ab1d94,42723642,0,0x0,8
tick,0x7ffa19ab1d94,42737564,0,0x0,8
tick,0x7ffa19ab1d94,42753560,0,0x0,8
tick,0x7ffa19ab1d94,42773205,0,0x0,8
tick,0x7ffa19ab1d94,42785637,0,0x0,8
tick,0x7ffa19ab1d94,42801695,0,0x0,8
tick,0x7ffa19ab1d94,42817412,0,0x0,8
tick,0x7ffa19ab1d94,42833704,0,0x0,8
tick,0x7ffa19ab1d94,42848452,0,0x0,8
tick,0x7ffa19ab1d94,42864811,0,0x0,8
tick,0x7ffa19ab1d94,42880310,0,0x0,8
tick,0x7ffa19ab1d94,42896079,0,0x0,8
tick,0x7ffa19ab1d94,42918164,0,0x0,8
tick,0x7ffa19ab1d94,42935078,0,0x0,8
tick,0x7ffa19ab1d94,42943848,0,0x0,8
tick,0x7ffa19ab1d94,42960157,0,0x0,8
tick,0x7ffa19ab1d94,42975119,0,0x0,8
tick,0x7ffa19ab1d94,42991014,0,0x0,8
tick,0x7ffa19ab1d94,43006277,0,0x0,8
tick,0x7ffa19ab1d94,43024002,0,0x0,8
tick,0x7ffa19ab1d94,43037262,0,0x0,8
tick,0x7ffa19ab1d94,43053123,0,0x0,8
tick,0x7ffa19ab1d94,43068035,0,0x0,8
tick,0x7ffa19ab1d94,43083460,0,0x0,8
tick,0x7ffa19ab1d94,43098957,0,0x0,8
tick,0x7ffa19ab1d94,43115176,0,0x0,8
tick,0x7ffa19ab1d94,43131235,0,0x0,8
tick,0x7ffa19ab1d94,43146982,0,0x0,8
tick,0x7ffa19ab1d94,43163013,0,0x0,8
tick,0x7ffa19ab1d94,43178730,0,0x0,8
tick,0x7ffa19ab1d94,43196114,0,0x0,8
tick,0x7ffa19ab1d94,43213746,0,0x0,8
tick,0x7ffa19ab1d94,43225525,0,0x0,8
tick,0x7ffa19ab1d94,43241610,0,0x0,8
tick,0x7ffa19ab1d94,43257169,0,0x0,8
tick,0x7ffa19ab1d94,43273231,0,0x0,8
tick,0x7ffa19ab1d94,43288765,0,0x0,8
tick,0x7ffa19ab1d94,43304180,0,0x0,8
tick,0x7ffa19ab1d94,43320162,0,0x0,8
tick,0x7ffa19ab1d94,43336445,0,0x0,8
tick,0x7ffa19ab1d94,43353942,0,0x0,8
tick,0x7ffa19ab1d94,43367788,0,0x0,8
tick,0x7ffa19ab1d94,43383135,0,0x0,8
tick,0x7ffa19ab1d94,43398548,0,0x0,8
tick,0x7ffa19ab1d94,43414088,0,0x0,8
tick,0x7ffa19ab1d94,43430384,0,0x0,8
tick,0x7ffa19ab1d94,43446531,0,0x0,8
tick,0x7ffa19ab1d94,43461721,0,0x0,8
tick,0x7ffa19ab1d94,43479965,0,0x0,8
tick,0x7ffa19ab1d94,43493634,0,0x0,8
tick,0x7ffa19ab1d94,43508933,0,0x0,8
tick,0x7ffa19ab1d94,43524927,0,0x0,8
tick,0x7ffa19ab1d94,43540479,0,0x0,8
tick,0x7ffa19ab1d94,43558118,0,0x0,8
tick,0x7ffa19ab1d94,43571839,0,0x0,8
tick,0x7ffa19ab1d94,43588084,0,0x0,8
tick,0x7ffa19ab1d94,43603544,0,0x0,8
tick,0x7ffa19ab1d94,43620784,0,0x0,8
tick,0x7ffa19ab1d94,43635314,0,0x0,8
tick,0x7ffa19ab1d94,43650872,0,0x0,8
tick,0x7ffa19ab1d94,43666731,0,0x0,8
tick,0x7ffa19ab1d94,43682018,0,0x0,8
tick,0x7ffa19ab1d94,43697875,0,0x0,8
tick,0x7ffa19ab1d94,43713233,0,0x0,8
tick,0x7ffa19ab1d94,43729386,0,0x0,8
tick,0x7ffa19ab1d94,43745535,0,0x0,8
tick,0x7ffa19ab1d94,43763352,0,0x0,8
tick,0x7ffa19ab1d94,43778617,0,0x0,8
tick,0x7ffa19ab1d94,43792702,0,0x0,8
tick,0x7ffa19ab1d94,43807735,0,0x0,8
tick,0x7ffa19ab1d94,43823525,0,0x0,8
tick,0x7ffa19ab1d94,43839805,0,0x0,8
tick,0x7ffa19ab1d94,43854034,0,0x0,8
tick,0x7ffa19ab1d94,43869480,0,0x0,8
tick,0x7ffa19ab1d94,43884991,0,0x0,8
tick,0x7ffa19ab1d94,43900178,0,0x0,8
tick,0x7ffa19ab1d94,43915606,0,0x0,8
tick,0x7ffa19ab1d94,43931467,0,0x0,8
tick,0x7ffa19ab1d94,43945849,0,0x0,8
tick,0x7ffa19ab1d94,43961416,0,0x0,8
tick,0x7ffa19ab1d94,43977009,0,0x0,8
tick,0x7ffa19ab1d94,43993044,0,0x0,8
tick,0x7ffa19ab1d94,44008657,0,0x0,8
tick,0x7ffa19ab1d94,44024592,0,0x0,8
tick,0x7ffa19ab1d94,44040640,0,0x0,8
tick,0x7ffa19ab1d94,44056199,0,0x0,8
tick,0x7ffa19ab1d94,44072012,0,0x0,8
tick,0x7ffa19ab1d94,44087759,0,0x0,8
tick,0x7ffa19ab1d94,44102980,0,0x0,8
tick,0x7ffa19ab1d94,44118319,0,0x0,8
tick,0x7ffa19ab1d94,44133807,0,0x0,8
tick,0x7ffa19ab1d94,44149355,0,0x0,8
tick,0x7ffa19ab1d94,44164230,0,0x0,8
tick,0x7ffa19ab1d94,44180170,0,0x0,8
tick,0x7ffa19ab1d94,44196937,0,0x0,8
tick,0x7ffa19ab1d94,44211592,0,0x0,8
tick,0x7ffa19ab1d94,44227544,0,0x0,8
tick,0x7ffa19ab1d94,44243574,0,0x0,8
tick,0x7ffa19ab1d94,44259092,0,0x0,8
tick,0x7ffa19ab1d94,44274744,0,0x0,8
tick,0x7ffa19ab1d94,44290040,0,0x0,8
tick,0x7ffa19ab1d94,44306001,0,0x0,8
tick,0x7ffa19ab1d94,44321885,0,0x0,8
tick,0x7ffa19ab1d94,44337210,0,0x0,8
tick,0x7ffa19ab1d94,44353951,0,0x0,8
tick,0x7ffa19ab1d94,44367944,0,0x0,8
tick,0x7ffa19ab1d94,44382710,0,0x0,8
tick,0x7ffa19ab1d94,44398404,0,0x0,8
tick,0x7ffa19ab1d94,44413696,0,0x0,8
tick,0x7ffa19ab1d94,44429144,0,0x0,8
tick,0x7ffa19ab1d94,44445285,0,0x0,8
tick,0x7ffa19ab1d94,44460750,0,0x0,8
tick,0x7ffa19ab1d94,44477432,0,0x0,8
tick,0x7ffa19ab1d94,44491779,0,0x0,8
tick,0x7ffa19ab1d94,44506906,0,0x0,8
tick,0x7ffa19ab1d94,44522943,0,0x0,8
tick,0x7ffa19ab1d94,44539891,0,0x0,8
tick,0x7ffa19ab1d94,44554564,0,0x0,8
tick,0x7ffa19ab1d94,44570177,0,0x0,8
tick,0x7ffa19ab1d94,44586190,0,0x0,8
tick,0x7ffa19ab1d94,44602116,0,0x0,8
tick,0x7ffa19ab1d94,44618067,0,0x0,8
tick,0x7ffa19ab1d94,44633690,0,0x0,8
tick,0x7ffa19ab1d94,44649349,0,0x0,8
tick,0x7ffa19ab1d94,44664791,0,0x0,8
tick,0x7ffa19ab1d94,44679649,0,0x0,8
tick,0x7ffa19ab1d94,44694851,0,0x0,8
tick,0x7ffa19ab1d94,44711141,0,0x0,8
tick,0x7ffa19ab1d94,44725035,0,0x0,8
tick,0x7ffa19ab1d94,44741587,0,0x0,8
tick,0x7ffa19ab1d94,44773317,0,0x0,8
tick,0x7ffa19ab1d94,44789053,0,0x0,8
tick,0x7ffa19ab1d94,44803451,0,0x0,8
tick,0x7ffa19ab1d94,44819232,0,0x0,8
tick,0x7ffa19ab1d94,44834287,0,0x0,8
tick,0x7ffa19ab1d94,44849302,0,0x0,8
tick,0x7ffa19ab1d94,44865488,0,0x0,8
tick,0x7ffa19ab1d94,44881989,0,0x0,8
tick,0x7ffa19ab1d94,44900949,0,0x0,8
tick,0x7ffa19ab1d94,44915698,0,0x0,8
tick,0x7ffa19ab1d94,44929576,0,0x0,8
tick,0x7ffa19ab1d94,44951548,0,0x0,8
tick,0x7ffa19ab1d94,44959945,0,0x0,8
tick,0x7ffa19ab1d94,44974698,0,0x0,8
tick,0x7ffa19ab1d94,44990660,0,0x0,8
tick,0x7ffa19ab1d94,45016152,0,0x0,8
tick,0x7ffa19ab1d94,45021653,0,0x0,8
tick,0x7ffa19ab1d94,45039187,0,0x0,8
tick,0x7ffa19ab1d94,45055476,0,0x0,8
tick,0x7ffa19ab1d94,45067458,0,0x0,8
tick,0x7ffa19ab1d94,45085948,0,0x0,8
tick,0x7ffa19ab1d94,45098562,0,0x0,8
tick,0x7ffa19ab1d94,45114312,0,0x0,8
tick,0x7ffa19ab1d94,45129853,0,0x0,8
tick,0x7ffa19ab1d94,45145782,0,0x0,8
tick,0x7ffa19ab1d94,45161816,0,0x0,8
tick,0x7ffa19ab1d94,45177884,0,0x0,8
tick,0x7ffa19ab1d94,45193939,0,0x0,8
tick,0x7ffa19ab1d94,45212003,0,0x0,8
tick,0x7ffa19ab1d94,45224453,0,0x0,8
tick,0x7ffa19ab1d94,45239575,0,0x0,8
tick,0x7ffa19ab1d94,45255576,0,0x0,8
tick,0x7ffa19ab1d94,45271374,0,0x0,8
tick,0x7ffa19ab1d94,45286656,0,0x0,8
tick,0x7ffa19ab1d94,45302632,0,0x0,8
tick,0x7ffa19ab1d94,45318671,0,0x0,8
tick,0x7ffa19ab1d94,45334004,0,0x0,8
tick,0x7ffa19ab1d94,45349378,0,0x0,8
tick,0x7ffa19ab1d94,45364742,0,0x0,8
tick,0x7ffa19ab1d94,45380655,0,0x0,8
tick,0x7ffa19ab1d94,45395644,0,0x0,8
tick,0x7ffa19ab1d94,45411827,0,0x0,8
tick,0x7ffa19ab1d94,45427387,0,0x0,8
tick,0x7ffa19ab1d94,45443191,0,0x0,8
tick,0x7ffa19ab1d94,45460003,0,0x0,8
tick,0x7ffa19ab1d94,45474570,0,0x0,8
tick,0x7ffa19ab1d94,45490103,0,0x0,8
tick,0x7ffa19ab1d94,45505607,0,0x0,8
tick,0x7ffa19ab1d94,45521611,0,0x0,8
tick,0x7ffa19ab1d94,45536992,0,0x0,8
tick,0x7ffa19ab1d94,45554363,0,0x0,8
tick,0x7ffa19ab1d94,45568990,0,0x0,8
tick,0x7ffa19ab1d94,45584227,0,0x0,8
tick,0x7ffa19ab1d94,45599298,0,0x0,8
tick,0x7ffa19ab1d94,45615288,0,0x0,8
tick,0x7ffa19ab1d94,45631746,0,0x0,8
tick,0x7ffa19ab1d94,45647608,0,0x0,8
tick,0x7ffa19ab1d94,45662922,0,0x0,8
tick,0x7ffa19ab1d94,45678606,0,0x0,8
tick,0x7ffa19ab1d94,45694623,0,0x0,8
tick,0x7ffa19ab1d94,45710792,0,0x0,8
tick,0x7ffa19ab1d94,45726646,0,0x0,8
tick,0x7ffa19ab1d94,45745116,0,0x0,8
tick,0x7ffa19ab1d94,45756738,0,0x0,8
tick,0x7ffa19ab1d94,45772986,0,0x0,8
tick,0x7ffa19ab1d94,45788629,0,0x0,8
tick,0x7ffa19ab1d94,45805568,0,0x0,8
tick,0x7ffa19ab1d94,45819423,0,0x0,8
tick,0x7ffa19ab1d94,45839479,0,0x0,8
tick,0x7ffa19ab1d94,45854935,0,0x0,8
tick,0x7ffa19ab1d94,45869275,0,0x0,8
tick,0x7ffa19ab1d94,45883082,0,0x0,8
tick,0x7ffa19ab1d94,45898713,0,0x0,8
tick,0x7ffa19ab1d94,45916821,0,0x0,8
tick,0x7ffa19ab1d94,45930762,0,0x0,8
tick,0x7ffa19ab1d94,45947954,0,0x0,8
tick,0x7ffa19ab1d94,45961812,0,0x0,8
tick,0x7ffa19ab1d94,45977619,0,0x0,8
tick,0x7ffa19ab1d94,45993413,0,0x0,8
tick,0x7ffa19ab1d94,46010218,0,0x0,8
tick,0x7ffa19ab1d94,46026476,0,0x0,8
tick,0x7ffa19ab1d94,46044032,0,0x0,8
tick,0x7ffa19ab1d94,46057886,0,0x0,8
tick,0x7ffa19ab1d94,46073696,0,0x0,8
tick,0x7ffa19ab1d94,46089127,0,0x0,8
tick,0x7ffa19ab1d94,46105170,0,0x0,8
tick,0x7ffa19ab1d94,46120938,0,0x0,8
tick,0x7ffa19ab1d94,46136979,0,0x0,8
tick,0x7ffa19ab1d94,46152592,0,0x0,8
tick,0x7ffa19ab1d94,46167792,0,0x0,8
tick,0x7ffa19ab1d94,46182810,0,0x0,8
tick,0x7ffa19ab1d94,46197801,0,0x0,8
tick,0x7ffa19ab1d94,46213579,0,0x0,8
tick,0x7ffa19ab1d94,46229625,0,0x0,8
tick,0x7ffa19ab1d94,46244725,0,0x0,8
tick,0x7ffa19ab1d94,46260342,0,0x0,8
tick,0x7ffa19ab1d94,46276386,0,0x0,8
tick,0x7ffa19ab1d94,46294177,0,0x0,8
tick,0x7ffa19ab1d94,46311591,0,0x0,8
tick,0x7ffa19ab1d94,46323447,0,0x0,8
tick,0x7ffa19ab1d94,46339293,0,0x0,8
tick,0x7ffa19ab1d94,46354569,0,0x0,8
tick,0x7ffa19ab1d94,46369953,0,0x0,8
tick,0x7ffa19ab1d94,46385475,0,0x0,8
tick,0x7ffa19ab1d94,46401325,0,0x0,8
tick,0x7ffa19ab1d94,46416428,0,0x0,8
tick,0x7ffa19ab1d94,46431895,0,0x0,8
tick,0x7ffa19ab1d94,46447766,0,0x0,8
tick,0x7ffa19ab1d94,46462969,0,0x0,8
tick,0x7ffa19ab1d94,46478158,0,0x0,8
tick,0x7ffa19ab1d94,46493728,0,0x0,8
tick,0x7ffa19ab1d94,46509782,0,0x0,8
tick,0x7ffa19ab1d94,46525718,0,0x0,8
tick,0x7ffa19ab1d94,46541911,0,0x0,8
tick,0x7ffa19ab1d94,46557440,0,0x0,8
tick,0x7ffa19ab1d94,46572539,0,0x0,8
tick,0x7ffa19ab1d94,46588817,0,0x0,8
tick,0x7ffa19ab1d94,46604844,0,0x0,8
tick,0x7ffa19ab1d94,46620024,0,0x0,8
tick,0x7ffa19ab1d94,46635672,0,0x0,8
tick,0x7ffa19ab1d94,46651705,0,0x0,8
tick,0x7ffa19ab1d94,46667024,0,0x0,8
tick,0x7ffa19ab1d94,46683926,0,0x0,8
tick,0x7ffa19ab1d94,46698883,0,0x0,8
tick,0x7ffa19ab1d94,46713840,0,0x0,8
tick,0x7ffa19ab1d94,46729776,0,0x0,8
tick,0x7ffa19ab1d94,46745748,0,0x0,8
tick,0x7ffa19ab1d94,46761352,0,0x0,8
tick,0x7ffa19ab1d94,46777380,0,0x0,8
tick,0x7ffa19ab1d94,46793058,0,0x0,8
tick,0x7ffa19ab1d94,46808476,0,0x0,8
tick,0x7ffa19ab1d94,46823851,0,0x0,8
tick,0x7ffa19ab1d94,46839487,0,0x0,8
tick,0x7ffa19ab1d94,46854392,0,0x0,8
tick,0x7ffa19ab1d94,46870364,0,0x0,8
tick,0x7ffa19ab1d94,46886383,0,0x0,8
tick,0x7ffa19ab1d94,46901948,0,0x0,8
tick,0x7ffa19ab1d94,46917911,0,0x0,8
tick,0x7ffa19ab1d94,46932721,0,0x0,8
tick,0x7ffa19ab1d94,46947940,0,0x0,8
tick,0x7ffa19ab1d94,46963723,0,0x0,8
tick,0x7ffa19ab1d94,46979749,0,0x0,8
tick,0x7ffa19ab1d94,46995431,0,0x0,8
tick,0x7ffa19ab1d94,47011386,0,0x0,8
tick,0x7ffa19ab1d94,47027136,0,0x0,8
tick,0x7ffa19ab1d94,47042601,0,0x0,8
tick,0x7ffa19ab1d94,47058364,0,0x0,8
tick,0x7ffa19ab1d94,47073944,0,0x0,8
tick,0x7ffa19ab1d94,47089710,0,0x0,8
tick,0x7ffa19ab1d94,47105369,0,0x0,8
tick,0x7ffa19ab1d94,47121769,0,0x0,8
tick,0x7ffa19ab1d94,47137374,0,0x0,8
tick,0x7ffa19ab1d94,47152618,0,0x0,8
tick,0x7ffa19ab1d94,47168207,0,0x0,8
tick,0x7ffa19ab1d94,47183977,0,0x0,8
tick,0x7ffa19ab1d94,47199134,0,0x0,8
tick,0x7ffa19ab1d94,47214790,0,0x0,8
tick,0x7ffa19ab1d94,47231015,0,0x0,8
tick,0x7ffa19ab1d94,47246302,0,0x0,8
tick,0x7ffa19ab1d94,47261642,0,0x0,8
tick,0x7ffa19ab1d94,47277051,0,0x0,8
tick,0x7ffa19ab1d94,47292875,0,0x0,8
tick,0x7ffa19ab1d94,47307695,0,0x0,8
tick,0x7ffa19ab1d94,47322938,0,0x0,8
tick,0x7ffa19ab1d94,47337965,0,0x0,8
tick,0x7ffa19ab1d94,47352874,0,0x0,8
tick,0x7ffa19ab1d94,47368256,0,0x0,8
tick,0x7ffa19ab1d94,47383652,0,0x0,8
tick,0x7ffa19ab1d94,47399840,0,0x0,8
tick,0x7ffa19ab1d94,47415472,0,0x0,8
tick,0x7ffa19ab1d94,47430770,0,0x0,8
tick,0x7ffa19ab1d94,47446815,0,0x0,8
tick,0x7ffa19ab1d94,47462203,0,0x0,8
tick,0x7ffa19ab1d94,47478137,0,0x0,8
tick,0x7ffa19ab1d94,47493590,0,0x0,8
tick,0x7ffa19ab1d94,47509301,0,0x0,8
tick,0x7ffa19ab1d94,47524398,0,0x0,8
tick,0x7ffa19ab1d94,47540816,0,0x0,8
tick,0x7ffa19ab1d94,47555950,0,0x0,8
tick,0x7ffa19ab1d94,47572751,0,0x0,8
tick,0x7ffa19ab1d94,47587754,0,0x0,8
tick,0x7ffa19ab1d94,47603624,0,0x0,8
tick,0x7ffa19ab1d94,47619198,0,0x0,8
tick,0x7ffa19ab1d94,47634823,0,0x0,8
tick,0x7ffa19ab1d94,47651706,0,0x0,8
tick,0x7ffa19ab1d94,47666058,0,0x0,8
tick,0x7ffa19ab1d94,47681655,0,0x0,8
tick,0x7ffa19ab1d94,47697124,0,0x0,8
tick,0x7ffa19ab1d94,47712708,0,0x0,8
tick,0x7ffa19ab1d94,47728259,0,0x0,8
tick,0x7ffa19ab1d94,47744416,0,0x0,8
tick,0x7ffa19ab1d94,47759409,0,0x0,8
tick,0x7ffa19ab1d94,47775671,0,0x0,8
tick,0x7ffa19ab1d94,47791862,0,0x0,8
tick,0x7ffa19ab1d94,47811397,0,0x0,8
tick,0x7ffa19ab1d94,47828730,0,0x0,8
tick,0x7ffa19ab1d94,47844383,0,0x0,8
tick,0x7ffa19ab1d94,47869111,0,0x0,8
tick,0x7ffa19ab1d94,47887437,0,0x0,8
tick,0x7ffa19ab1d94,47916804,0,0x0,8
tick,0x7ffa19ab1d94,47938660,0,0x0,8
tick,0x7ffa19ab1d94,47948328,0,0x0,8
tick,0x7ffa19ab1d94,47975073,0,0x0,8
tick,0x7ffa19ab1d94,47983966,0,0x0,8
tick,0x7ffa19ab1d94,47994582,0,0x0,8
tick,0x7ffa19ab1d94,48015993,0,0x0,8
tick,0x7ffa19ab1d94,48027061,0,0x0,8
tick,0x7ffa19ab1d94,48041327,0,0x0,8
tick,0x7ffa19ab1d94,48057675,0,0x0,8
tick,0x7ffa19ab1d94,48071035,0,0x0,8
tick,0x7ffa19ab1d94,48086418,0,0x0,8
tick,0x7ffa19ab1d94,48101617,0,0x0,8
tick,0x7ffa19ab1d94,48117143,0,0x0,8
tick,0x7ffa19ab1d94,48132417,0,0x0,8
tick,0x7ffa19ab1d94,48147625,0,0x0,8
tick,0x7ffa19ab1d94,48163652,0,0x0,8
tick,0x7ffa19ab1d94,48179312,0,0x0,8
tick,0x7ffa19ab1d94,48195686,0,0x0,8
tick,0x7ffa19ab1d94,48211078,0,0x0,8
tick,0x7ffa19ab1d94,48230714,0,0x0,8
tick,0x7ffa19ab1d94,48243233,0,0x0,8
tick,0x7ffa19ab1d94,48258454,0,0x0,8
tick,0x7ffa19ab1d94,48273657,0,0x0,8
tick,0x7ffa19ab1d94,48290330,0,0x0,8
tick,0x7ffa19ab1d94,48307583,0,0x0,8
tick,0x7ffa19ab1d94,48322184,0,0x0,8
tick,0x7ffa19ab1d94,48336843,0,0x0,8
tick,0x7ffa19ab1d94,48353707,0,0x0,8
tick,0x7ffa19ab1d94,48369080,0,0x0,8
tick,0x7ffa19ab1d94,48383459,0,0x0,8
tick,0x7ffa19ab1d94,48411300,0,0x0,8
tick,0x7ffa19ab1d94,48422017,0,0x0,8
tick,0x7ffa19ab1d94,48431866,0,0x0,8
tick,0x7ffa19ab1d94,48450387,0,0x0,8
tick,0x7ffa19ab1d94,48461039,0,0x0,8
tick,0x7ffa19ab1d94,48480421,0,0x0,8
tick,0x7ffa19ab1d94,48499946,0,0x0,8
tick,0x7ffa19ab1d94,48512308,0,0x0,8
tick,0x7ffa19ab1d94,48530289,0,0x0,8
tick,0x7ffa19ab1d94,48550119,0,0x0,8
tick,0x7ffa19ab1d94,48561836,0,0x0,8
tick,0x7ffa19ab1d94,48570613,0,0x0,8
tick,0x7ffa19ab1d94,48594163,0,0x0,8
tick,0x7ffa19ab1d94,48610939,0,0x0,8
tick,0x7ffa19ab1d94,48617819,0,0x0,8
tick,0x7ffa19ab1d94,48634044,0,0x0,8
tick,0x7ffa19ab1d94,48649435,0,0x0,8
tick,0x7ffa19ab1d94,48666253,0,0x0,8
tick,0x7ffa19ab1d94,48680499,0,0x0,8
tick,0x7ffa19ab1d94,48697464,0,0x0,8
tick,0x7ffa19ab1d94,48714960,0,0x0,8
tick,0x7ffa19ab1d94,48728266,0,0x0,8
tick,0x7ffa19ab1d94,48745774,0,0x0,8
tick,0x7ffa19ab1d94,48761223,0,0x0,8
tick,0x7ffa19ab1d94,48776942,0,0x0,8
tick,0x7ffa19ab1d94,48790531,0,0x0,8
tick,0x7ffa19ab1d94,48805011,0,0x0,8
tick,0x7ffa19ab1d94,48820891,0,0x0,8
tick,0x7ffa19ab1d94,48836057,0,0x0,8
tick,0x7ffa19ab1d94,48851552,0,0x0,8
tick,0x7ffa19ab1d94,48866664,0,0x0,8
tick,0x7ffa19ab1d94,48882030,0,0x0,8
tick,0x7ffa19ab1d94,48898122,0,0x0,8
tick,0x7ffa19ab1d94,48914117,0,0x0,8
tick,0x7ffa19ab1d94,48929667,0,0x0,8
tick,0x7ffa19ab1d94,48945891,0,0x0,8
tick,0x7ffa19ab1d94,48962187,0,0x0,8
tick,0x7ffa19ab1d94,48977301,0,0x0,8
tick,0x7ffa19ab1d94,48993851,0,0x0,8
tick,0x7ffa19ab1d94,49010275,0,0x0,8
tick,0x7ffa19ab1d94,49026560,0,0x0,8
tick,0x7ffa19ab1d94,49041474,0,0x0,8
tick,0x7ffa19ab1d94,49058179,0,0x0,8
tick,0x7ffa19ab1d94,49074460,0,0x0,8
tick,0x7ffa19ab1d94,49087780,0,0x0,8
tick,0x7ffa19ab1d94,49103104,0,0x0,8
tick,0x7ffa19ab1d94,49118458,0,0x0,8
tick,0x7ffa19ab1d94,49134425,0,0x0,8
tick,0x7ffa19ab1d94,49149720,0,0x0,8
tick,0x7ffa19ab1d94,49165694,0,0x0,8
tick,0x7ffa19ab1d94,49181550,0,0x0,8
tick,0x7ffa19ab1d94,49197324,0,0x0,8
tick,0x7ffa19ab1d94,49212840,0,0x0,8
tick,0x7ffa19ab1d94,49229014,0,0x0,8
tick,0x7ffa19ab1d94,49244330,0,0x0,8
tick,0x7ffa19ab1d94,49259961,0,0x0,8
tick,0x7ffa19ab1d94,49275089,0,0x0,8
tick,0x7ffa19ab1d94,49291955,0,0x0,8
tick,0x7ffa19ab1d94,49307693,0,0x0,8
tick,0x7ffa19ab1d94,49324028,0,0x0,8
tick,0x7ffa19ab1d94,49340078,0,0x0,8
tick,0x7ffa19ab1d94,49355175,0,0x0,8
tick,0x7ffa19ab1d94,49370817,0,0x0,8
tick,0x7ffa19ab1d94,49386540,0,0x0,8
tick,0x7ffa19ab1d94,49401811,0,0x0,8
tick,0x7ffa19ab1d94,49417439,0,0x0,8
tick,0x7ffa19ab1d94,49432666,0,0x0,8
tick,0x7ffa19ab1d94,49448709,0,0x0,8
tick,0x7ffa19ab1d94,49463921,0,0x0,8
tick,0x7ffa19ab1d94,49479302,0,0x0,8
tick,0x7ffa19ab1d94,49495034,0,0x0,8
tick,0x7ffa19ab1d94,49510807,0,0x0,8
tick,0x7ffa19ab1d94,49527470,0,0x0,8
tick,0x7ffa19ab1d94,49542784,0,0x0,8
tick,0x7ffa19ab1d94,49558722,0,0x0,8
tick,0x7ffa19ab1d94,49574528,0,0x0,8
tick,0x7ffa19ab1d94,49589942,0,0x0,8
tick,0x7ffa19ab1d94,49605410,0,0x0,8
tick,0x7ffa19ab1d94,49620740,0,0x0,8
tick,0x7ffa19ab1d94,49637031,0,0x0,8
tick,0x7ffa19ab1d94,49652742,0,0x0,8
tick,0x7ffa19ab1d94,49667878,0,0x0,8
tick,0x7ffa19ab1d94,49683416,0,0x0,8
tick,0x7ffa19ab1d94,49699303,0,0x0,8
tick,0x7ffa19ab1d94,49715203,0,0x0,8
tick,0x7ffa19ab1d94,49730474,0,0x0,8
tick,0x7ffa19ab1d94,49745466,0,0x0,8
tick,0x7ffa19ab1d94,49761536,0,0x0,8
tick,0x7ffa19ab1d94,49776720,0,0x0,8
tick,0x7ffa19ab1d94,49792674,0,0x0,8
tick,0x7ffa19ab1d94,49808300,0,0x0,8
tick,0x7ffa19ab1d94,49823892,0,0x0,8
tick,0x7ffa19ab1d94,49839693,0,0x0,8
tick,0x7ffa19ab1d94,49855828,0,0x0,8
tick,0x7ffa19ab1d94,49871828,0,0x0,8
tick,0x7ffa19ab1d94,49887608,0,0x0,8
tick,0x7ffa19ab1d94,49902758,0,0x0,8
tick,0x7ffa19ab1d94,49918694,0,0x0,8
tick,0x7ffa19ab1d94,49935125,0,0x0,8
tick,0x7ffa19ab1d94,49950840,0,0x0,8
tick,0x7ffa19ab1d94,49967791,0,0x0,8
tick,0x7ffa19ab1d94,49981977,0,0x0,8
tick,0x7ffa19ab1d94,49998160,0,0x0,8
tick,0x7ffa19ab1d94,50013597,0,0x0,8
tick,0x7ffa19ab1d94,50029265,0,0x0,8
tick,0x7ffa19ab1d94,50045082,0,0x0,8
tick,0x7ffa19ab1d94,50061154,0,0x0,8
tick,0x7ffa19ab1d94,50079785,0,0x0,8
tick,0x7ffa19ab1d94,50095924,0,0x0,8
tick,0x7ffa19ab1d94,50107605,0,0x0,8
tick,0x7ffa19ab1d94,50123580,0,0x0,8
tick,0x7ffa19ab1d94,50138908,0,0x0,8
tick,0x7ffa19ab1d94,50154616,0,0x0,8
tick,0x7ffa19ab1d94,50169737,0,0x0,8
tick,0x7ffa19ab1d94,50185461,0,0x0,8
tick,0x7ffa19ab1d94,50201754,0,0x0,8
tick,0x7ffa19ab1d94,50217504,0,0x0,8
tick,0x7ffa19ab1d94,50233565,0,0x0,8
tick,0x7ffa19ab1d94,50249308,0,0x0,8
tick,0x7ffa19ab1d94,50265789,0,0x0,8
tick,0x7ffa19ab1d94,50281023,0,0x0,8
tick,0x7ffa19ab1d94,50296782,0,0x0,8
tick,0x7ffa19ab1d94,50312152,0,0x0,8
tick,0x7ffa19ab1d94,50327757,0,0x0,8
tick,0x7ffa19ab1d94,50343802,0,0x0,8
tick,0x7ffa19ab1d94,50359638,0,0x0,8
tick,0x7ffa19ab1d94,50376821,0,0x0,8
tick,0x7ffa19ab1d94,50391780,0,0x0,8
tick,0x7ffa19ab1d94,50407845,0,0x0,8
tick,0x7ffa19ab1d94,50423371,0,0x0,8
tick,0x7ffa19ab1d94,50438566,0,0x0,8
tick,0x7ffa19ab1d94,50453883,0,0x0,8
tick,0x7ffa19ab1d94,50469715,0,0x0,8
tick,0x7ffa19ab1d94,50485114,0,0x0,8
tick,0x7ffa19ab1d94,50501022,0,0x0,8
tick,0x7ffa19ab1d94,50516216,0,0x0,8
tick,0x7ffa19ab1d94,50531839,0,0x0,8
tick,0x7ffa19ab1d94,50547512,0,0x0,8
tick,0x7ffa19ab1d94,50563569,0,0x0,8
tick,0x7ffa19ab1d94,50580641,0,0x0,8
tick,0x7ffa19ab1d94,50596175,0,0x0,8
tick,0x7ffa19ab1d94,50611514,0,0x0,8
tick,0x7ffa19ab1d94,50627499,0,0x0,8
tick,0x7ffa19ab1d94,50642847,0,0x0,8
tick,0x7ffa19ab1d94,50658799,0,0x0,8
tick,0x7ffa19ab1d94,50674494,0,0x0,8
tick,0x7ffa19ab1d94,50690432,0,0x0,8
tick,0x7ffa19ab1d94,50706200,0,0x0,8
tick,0x7ffa19ab1d94,50721797,0,0x0,8
tick,0x7ffa19ab1d94,50738005,0,0x0,8
tick,0x7ffa19ab1d94,50754317,0,0x0,8
tick,0x7ffa19ab1d94,50768707,0,0x0,8
tick,0x7ffa19ab1d94,50784581,0,0x0,8
tick,0x7ffa19ab1d94,50799759,0,0x0,8
tick,0x7ffa19ab1d94,50815177,0,0x0,8
tick,0x7ffa19ab1d94,50830331,0,0x0,8
tick,0x7ffa19ab1d94,50846042,0,0x0,8
tick,0x7ffa19ab1d94,50861981,0,0x0,8
tick,0x7ffa19ab1d94,50877094,0,0x0,8
tick,0x7ffa19ab1d94,50892572,0,0x0,8
tick,0x7ffa19ab1d94,50908162,0,0x0,8
tick,0x7ffa19ab1d94,50924145,0,0x0,8
tick,0x7ffa19ab1d94,50939355,0,0x0,8
tick,0x7ffa19ab1d94,50955299,0,0x0,8
tick,0x7ffa19ab1d94,50973391,0,0x0,8
tick,0x7ffa19ab1d94,50987626,0,0x0,8
tick,0x7ffa19ab1d94,51002568,0,0x0,8
tick,0x7ffa19ab1d94,51017936,0,0x0,8
tick,0x7ffa19ab1d94,51034014,0,0x0,8
tick,0x7ffa19ab1d94,51049499,0,0x0,8
tick,0x7ffa19ab1d94,51066128,0,0x0,8
tick,0x7ffa19ab1d94,51082148,0,0x0,8
tick,0x7ffa19ab1d94,51097871,0,0x0,8
tick,0x7ffa19ab1d94,51113478,0,0x0,8
tick,0x7ffa19ab1d94,51129047,0,0x0,8
tick,0x7ffa19ab1d94,51144991,0,0x0,8
tick,0x7ffa19ab1d94,51160917,0,0x0,8
tick,0x7ffa19ab1d94,51175976,0,0x0,8
tick,0x7ffa19ab1d94,51192116,0,0x0,8
tick,0x7ffa19ab1d94,51208218,0,0x0,8
tick,0x7ffa19ab1d94,51223077,0,0x0,8
tick,0x7ffa19ab1d94,51238928,0,0x0,8
tick,0x7ffa19ab1d94,51254733,0,0x0,8
tick,0x7ffa19ab1d94,51269478,0,0x0,8
tick,0x7ffa19ab1d94,51285268,0,0x0,8
tick,0x7ffa19ab1d94,51300343,0,0x0,8
tick,0x7ffa19ab1d94,51315998,0,0x0,8
tick,0x7ffa19ab1d94,51331882,0,0x0,8
tick,0x7ffa19ab1d94,51346692,0,0x0,8
tick,0x7ffa19ab1d94,51362807,0,0x0,8
tick,0x7ffa19ab1d94,51378993,0,0x0,8
tick,0x7ffa19ab1d94,51393974,0,0x0,8
tick,0x7ffa19ab1d94,51409787,0,0x0,8
tick,0x7ffa19ab1d94,51425838,0,0x0,8
tick,0x7ffa19ab1d94,51441766,0,0x0,8
tick,0x7ffa19ab1d94,51457590,0,0x0,8
tick,0x7ffa19ab1d94,51472670,0,0x0,8
tick,0x7ffa19ab1d94,51488627,0,0x0,8
tick,0x7ffa19ab1d94,51503953,0,0x0,8
tick,0x7ffa19ab1d94,51518926,0,0x0,8
tick,0x7ffa19ab1d94,51534283,0,0x0,8
tick,0x7ffa19ab1d94,51549463,0,0x0,8
tick,0x7ffa19ab1d94,51564734,0,0x0,8
tick,0x7ffa19ab1d94,51580600,0,0x0,8
tick,0x7ffa19ab1d94,51596541,0,0x0,8
tick,0x7ffa19ab1d94,51611525,0,0x0,8
tick,0x7ffa19ab1d94,51627233,0,0x0,8
tick,0x7ffa19ab1d94,51642877,0,0x0,8
tick,0x7ffa19ab1d94,51657959,0,0x0,8
tick,0x7ffa19ab1d94,51673685,0,0x0,8
tick,0x7ffa19ab1d94,51689139,0,0x0,8
tick,0x7ffa19ab1d94,51703959,0,0x0,8
tick,0x7ffa19ab1d94,51719533,0,0x0,8
tick,0x7ffa19ab1d94,51737505,0,0x0,8
tick,0x7ffa19ab1d94,51750383,0,0x0,8
tick,0x7ffa19ab1d94,51765700,0,0x0,8
tick,0x7ffa19ab1d94,51781602,0,0x0,8
tick,0x7ffa19ab1d94,51797451,0,0x0,8
tick,0x7ffa19ab1d94,51813586,0,0x0,8
tick,0x7ffa19ab1d94,51829120,0,0x0,8
tick,0x7ffa19ab1d94,51844338,0,0x0,8
tick,0x7ffa19ab1d94,51860595,0,0x0,8
tick,0x7ffa19ab1d94,51875715,0,0x0,8
tick,0x7ffa19ab1d94,51891575,0,0x0,8
tick,0x7ffa19ab1d94,51906193,0,0x0,8
tick,0x7ffa19ab1d94,51922072,0,0x0,8
tick,0x7ffa19ab1d94,51937357,0,0x0,8
tick,0x7ffa19ab1d94,51953520,0,0x0,8
tick,0x7ffa19ab1d94,51969823,0,0x0,8
tick,0x7ffa19ab1d94,51985355,0,0x0,8
tick,0x7ffa19ab1d94,52009286,0,0x0,8
tick,0x7ffa19ab1d94,52018280,0,0x0,8
tick,0x7ffa19ab1d94,52033496,0,0x0,8
tick,0x7ffa19ab1d94,52048844,0,0x0,8
tick,0x7ffa19ab1d94,52063936,0,0x0,8
tick,0x7ffa19ab1d94,52088194,0,0x0,8
tick,0x7ffa19ab1d94,52094578,0,0x0,8
tick,0x7ffa19ab1d94,52114216,0,0x0,8
tick,0x7ffa19ab1d94,52126091,0,0x0,8
tick,0x7ffa19ab1d94,52140139,0,0x0,8
tick,0x7ffa19ab1d94,52156148,0,0x0,8
tick,0x7ffa19ab1d94,52171677,0,0x0,8
tick,0x7ffa19ab1d94,52187706,0,0x0,8
tick,0x7ffa19ab1d94,52203751,0,0x0,8
tick,0x7ffa19ab1d94,52220253,0,0x0,8
tick,0x7ffa19ab1d94,52235556,0,0x0,8
tick,0x7ffa19ab1d94,52253246,0,0x0,8
tick,0x7ffa19ab1d94,52267710,0,0x0,8
tick,0x7ffa19ab1d94,52283920,0,0x0,8
tick,0x7ffa19ab1d94,52299581,0,0x0,8
tick,0x7ffa19ab1d94,52315132,0,0x0,8
tick,0x7ffa19ab1d94,52330751,0,0x0,8
tick,0x7ffa19ab1d94,52345801,0,0x0,8
tick,0x7ffa19ab1d94,52361457,0,0x0,8
tick,0x7ffa19ab1d94,52377627,0,0x0,8
tick,0x7ffa19ab1d94,52393309,0,0x0,8
tick,0x7ffa19ab1d94,52408503,0,0x0,8
tick,0x7ffa19ab1d94,52423770,0,0x0,8
tick,0x7ffa19ab1d94,52438887,0,0x0,8
tick,0x7ffa19ab1d94,52455097,0,0x0,8
tick,0x7ffa19ab1d94,52470335,0,0x0,8
tick,0x7ffa19ab1d94,52486119,0,0x0,8
tick,0x7ffa19ab1d94,52501529,0,0x0,8
tick,0x7ffa19ab1d94,52517293,0,0x0,8
tick,0x7ffa19ab1d94,52533027,0,0x0,8
tick,0x7ffa19ab1d94,52548931,0,0x0,8
tick,0x7ffa19ab1d94,52564361,0,0x0,8
tick,0x7ffa19ab1d94,52581019,0,0x0,8
tick,0x7ffa19ab1d94,52595693,0,0x0,8
tick,0x7ffa19ab1d94,52611903,0,0x0,8
tick,0x7ffa19ab1d94,52626495,0,0x0,8
tick,0x7ffa19ab1d94,52641624,0,0x0,8
tick,0x7ffa19ab1d94,52657240,0,0x0,8
tick,0x7ffa19ab1d94,52672800,0,0x0,8
tick,0x7ffa19ab1d94,52687944,0,0x0,8
tick,0x7ffa19ab1d94,52703841,0,0x0,8
tick,0x7ffa19ab1d94,52719887,0,0x0,8
tick,0x7ffa19ab1d94,52735977,0,0x0,8
tick,0x7ffa19ab1d94,52751525,0,0x0,8
tick,0x7ffa19ab1d94,52766827,0,0x0,8
tick,0x7ffa19ab1d94,52782445,0,0x0,8
tick,0x7ffa19ab1d94,52798287,0,0x0,8
tick,0x7ffa19ab1d94,52814359,0,0x0,8
tick,0x7ffa19ab1d94,52829722,0,0x0,8
tick,0x7ffa19ab1d94,52844915,0,0x0,8
tick,0x7ffa19ab1d94,52860131,0,0x0,8
tick,0x7ffa19ab1d94,52875547,0,0x0,8
tick,0x7ffa19ab1d94,52891705,0,0x0,8
tick,0x7ffa19ab1d94,52906495,0,0x0,8
tick,0x7ffa19ab1d94,52921514,0,0x0,8
tick,0x7ffa19ab1d94,52937236,0,0x0,8
tick,0x7ffa19ab1d94,52952430,0,0x0,8
tick,0x7ffa19ab1d94,52968385,0,0x0,8
tick,0x7ffa19ab1d94,52983973,0,0x0,8
tick,0x7ffa19ab1d94,52999571,0,0x0,8
tick,0x7ffa19ab1d94,53015678,0,0x0,8
tick,0x7ffa19ab1d94,53031814,0,0x0,8
tick,0x7ffa19ab1d94,53047458,0,0x0,8
tick,0x7ffa19ab1d94,53062793,0,0x0,8
tick,0x7ffa19ab1d94,53078208,0,0x0,8
tick,0x7ffa19ab1d94,53093468,0,0x0,8
tick,0x7ffa19ab1d94,53112396,0,0x0,8
tick,0x7ffa19ab1d94,53124548,0,0x0,8
tick,0x7ffa19ab1d94,53140612,0,0x0,8
tick,0x7ffa19ab1d94,53155994,0,0x0,8
tick,0x7ffa19ab1d94,53171492,0,0x0,8
tick,0x7ffa19ab1d94,53187209,0,0x0,8
tick,0x7ffa19ab1d94,53203263,0,0x0,8
tick,0x7ffa19ab1d94,53219426,0,0x0,8
tick,0x7ffa19ab1d94,53233555,0,0x0,8
tick,0x7ffa19ab1d94,53249313,0,0x0,8
tick,0x7ffa19ab1d94,53265057,0,0x0,8
tick,0x7ffa19ab1d94,53281639,0,0x0,8
tick,0x7ffa19ab1d94,53296262,0,0x0,8
tick,0x7ffa19ab1d94,53312406,0,0x0,8
tick,0x7ffa19ab1d94,53327847,0,0x0,8
tick,0x7ffa19ab1d94,53343307,0,0x0,8
tick,0x7ffa19ab1d94,53358856,0,0x0,8
tick,0x7ffa19ab1d94,53375369,0,0x0,8
tick,0x7ffa19ab1d94,53391839,0,0x0,8
tick,0x7ffa19ab1d94,53407656,0,0x0,8
tick,0x7ffa19ab1d94,53423272,0,0x0,8
tick,0x7ffa19ab1d94,53438900,0,0x0,8
tick,0x7ffa19ab1d94,53454639,0,0x0,8
tick,0x7ffa19ab1d94,53470538,0,0x0,8
tick,0x7ffa19ab1d94,53485972,0,0x0,8
tick,0x7ffa19ab1d94,53502908,0,0x0,8
tick,0x7ffa19ab1d94,53517148,0,0x0,8
tick,0x7ffa19ab1d94,53533100,0,0x0,8
tick,0x7ffa19ab1d94,53548064,0,0x0,8
tick,0x7ffa19ab1d94,53563570,0,0x0,8
tick,0x7ffa19ab1d94,53578672,0,0x0,8
tick,0x7ffa19ab1d94,53594006,0,0x0,8
tick,0x7ffa19ab1d94,53609768,0,0x0,8
tick,0x7ffa19ab1d94,53626008,0,0x0,8
tick,0x7ffa19ab1d94,53641392,0,0x0,8
tick,0x7ffa19ab1d94,53656949,0,0x0,8
tick,0x7ffa19ab1d94,53673280,0,0x0,8
tick,0x7ffa19ab1d94,53688480,0,0x0,8
tick,0x7ffa19ab1d94,53704880,0,0x0,8
tick,0x7ffa19ab1d94,53720612,0,0x0,8
tick,0x7ffa19ab1d94,53737437,0,0x0,8
tick,0x7ffa19ab1d94,53755055,0,0x0,8
tick,0x7ffa19ab1d94,53766616,0,0x0,8
tick,0x7ffa19ab1d94,53782554,0,0x0,8
tick,0x7ffa19ab1d94,53798597,0,0x0,8
tick,0x7ffa19ab1d94,53815488,0,0x0,8
tick,0x7ffa19ab1d94,53829764,0,0x0,8
tick,0x7ffa19ab1d94,53844906,0,0x0,8
tick,0x7ffa19ab1d94,53859878,0,0x0,8
tick,0x7ffa19ab1d94,53874791,0,0x0,8
tick,0x7ffa19ab1d94,53890821,0,0x0,8
tick,0x7ffa19ab1d94,53906747,0,0x0,8
tick,0x7ffa19ab1d94,53921440,0,0x0,8
tick,0x7ffa19ab1d94,53937416,0,0x0,8
tick,0x7ffa19ab1d94,53953088,0,0x0,8
tick,0x7ffa19ab1d94,53969908,0,0x0,8
tick,0x7ffa19ab1d94,53985834,0,0x0,8
tick,0x7ffa19ab1d94,54000066,0,0x0,8
tick,0x7ffa19ab1d94,54015405,0,0x0,8
tick,0x7ffa19ab1d94,54030607,0,0x0,8
tick,0x7ffa19ab1d94,54046312,0,0x0,8
tick,0x7ffa19ab1d94,54061775,0,0x0,8
tick,0x7ffa19ab1d94,54077833,0,0x0,8
tick,0x7ffa19ab1d94,54093452,0,0x0,8
tick,0x7ffa19ab1d94,54109203,0,0x0,8
tick,0x7ffa19ab1d94,54124774,0,0x0,8
tick,0x7ffa19ab1d94,54141171,0,0x0,8
tick,0x7ffa19ab1d94,54156287,0,0x0,8
tick,0x7ffa19ab1d94,54172527,0,0x0,8
tick,0x7ffa19ab1d94,54188371,0,0x0,8
tick,0x7ffa19ab1d94,54205677,0,0x0,8
tick,0x7ffa19ab1d94,54219490,0,0x0,8
tick,0x7ffa19ab1d94,54233322,0,0x0,8
tick,0x7ffa19ab1d94,54248821,0,0x0,8
tick,0x7ffa19ab1d94,54264094,0,0x0,8
tick,0x7ffa19ab1d94,54279626,0,0x0,8
tick,0x7ffa19ab1d94,54295492,0,0x0,8
tick,0x7ffa19ab1d94,54310721,0,0x0,8
tick,0x7ffa19ab1d94,54326832,0,0x0,8
tick,0x7ffa19ab1d94,54342377,0,0x0,8
tick,0x7ffa19ab1d94,54357881,0,0x0,8
tick,0x7ffa19ab1d94,54373840,0,0x0,8
tick,0x7ffa19ab1d94,54389630,0,0x0,8
tick,0x7ffa19ab1d94,54405172,0,0x0,8
tick,0x7ffa19ab1d94,54420730,0,0x0,8
tick,0x7ffa19ab1d94,54436100,0,0x0,8
tick,0x7ffa19ab1d94,54454711,0,0x0,8
tick,0x7ffa19ab1d94,54469019,0,0x0,8
tick,0x7ffa19ab1d94,54482971,0,0x0,8
tick,0x7ffa19ab1d94,54498368,0,0x0,8
tick,0x7ffa19ab1d94,54514009,0,0x0,8
tick,0x7ffa19ab1d94,54529583,0,0x0,8
tick,0x7ffa19ab1d94,54545089,0,0x0,8
tick,0x7ffa19ab1d94,54560848,0,0x0,8
tick,0x7ffa19ab1d94,54576559,0,0x0,8
tick,0x7ffa19ab1d94,54592639,0,0x0,8
tick,0x7ffa19ab1d94,54608564,0,0x0,8
tick,0x7ffa19ab1d94,54623752,0,0x0,8
tick,0x7ffa19ab1d94,54639440,0,0x0,8
tick,0x7ffa19ab1d94,54654564,0,0x0,8
tick,0x7ffa19ab1d94,54670351,0,0x0,8
tick,0x7ffa19ab1d94,54686419,0,0x0,8
tick,0x7ffa19ab1d94,54702167,0,0x0,8
tick,0x7ffa19ab1d94,54717357,0,0x0,8
tick,0x7ffa19ab1d94,54732880,0,0x0,8
tick,0x7ffa19ab1d94,54748625,0,0x0,8
tick,0x7ffa19ab1d94,54764673,0,0x0,8
tick,0x7ffa19ab1d94,54780030,0,0x0,8
tick,0x7ffa19ab1d94,54795605,0,0x0,8
tick,0x7ffa19ab1d94,54811547,0,0x0,8
tick,0x7ffa19ab1d94,54827308,0,0x0,8
tick,0x7ffa19ab1d94,54842852,0,0x0,8
tick,0x7ffa19ab1d94,54858626,0,0x0,8
tick,0x7ffa19ab1d94,54874388,0,0x0,8
tick,0x7ffa19ab1d94,54890199,0,0x0,8
tick,0x7ffa19ab1d94,54905901,0,0x0,8
tick,0x7ffa19ab1d94,54921663,0,0x0,8
tick,0x7ffa19ab1d94,54937311,0,0x0,8
tick,0x7ffa19ab1d94,54953443,0,0x0,8
tick,0x7ffa19ab1d94,54969062,0,0x0,8
tick,0x7ffa19ab1d94,54984376,0,0x0,8
tick,0x7ffa19ab1d94,54999799,0,0x0,8
tick,0x7ffa19ab1d94,55014849,0,0x0,8
tick,0x7ffa19ab1d94,55029817,0,0x0,8
tick,0x7ffa19ab1d94,55044893,0,0x0,8
tick,0x7ffa19ab1d94,55060642,0,0x0,8
tick,0x7ffa19ab1d94,55076635,0,0x0,8
tick,0x7ffa19ab1d94,55092743,0,0x0,8
tick,0x7ffa19ab1d94,55107746,0,0x0,8
tick,0x7ffa19ab1d94,55123530,0,0x0,8
tick,0x7ffa19ab1d94,55139406,0,0x0,8
tick,0x7ffa19ab1d94,55154408,0,0x0,8
tick,0x7ffa19ab1d94,55169707,0,0x0,8
tick,0x7ffa19ab1d94,55185232,0,0x0,8
tick,0x7ffa19ab1d94,55200926,0,0x0,8
tick,0x7ffa19ab1d94,55217263,0,0x0,8
tick,0x7ffa19ab1d94,55232024,0,0x0,8
tick,0x7ffa19ab1d94,55247273,0,0x0,8
tick,0x7ffa19ab1d94,55263434,0,0x0,8
tick,0x7ffa19ab1d94,55278944,0,0x0,8
tick,0x7ffa19ab1d94,55294097,0,0x0,8
tick,0x7ffa19ab1d94,55309670,0,0x0,8
tick,0x7ffa19ab1d94,55325963,0,0x0,8
tick,0x7ffa19ab1d94,55341898,0,0x0,8
tick,0x7ffa19ab1d94,55357730,0,0x0,8
tick,0x7ffa19ab1d94,55374093,0,0x0,8
tick,0x7ffa19ab1d94,55390027,0,0x0,8
tick,0x7ffa19ab1d94,55404833,0,0x0,8
tick,0x7ffa19ab1d94,55420446,0,0x0,8
tick,0x7ffa19ab1d94,55436269,0,0x0,8
tick,0x7ffa19ab1d94,55451711,0,0x0,8
tick,0x7ffa19ab1d94,55467148,0,0x0,8
tick,0x7ffa19ab1d94,55482972,0,0x0,8
tick,0x7ffa19ab1d94,55498294,0,0x0,8
tick,0x7ffa19ab1d94,55514062,0,0x0,8
tick,0x7ffa19ab1d94,55530086,0,0x0,8
tick,0x7ffa19ab1d94,55545404,0,0x0,8
tick,0x7ffa19ab1d94,55561576,0,0x0,8
tick,0x7ffa19ab1d94,55577345,0,0x0,8
tick,0x7ffa19ab1d94,55592960,0,0x0,8
tick,0x7ffa19ab1d94,55608505,0,0x0,8
tick,0x7ffa19ab1d94,55623902,0,0x0,8
tick,0x7ffa19ab1d94,55639456,0,0x0,8
tick,0x7ffa19ab1d94,55654781,0,0x0,8
tick,0x7ffa19ab1d94,55670788,0,0x0,8
tick,0x7ffa19ab1d94,55686152,0,0x0,8
tick,0x7ffa19ab1d94,55701262,0,0x0,8
tick,0x7ffa19ab1d94,55716427,0,0x0,8
tick,0x7ffa19ab1d94,55731665,0,0x0,8
tick,0x7ffa19ab1d94,55747684,0,0x0,8
tick,0x7ffa19ab1d94,55763670,0,0x0,8
tick,0x7ffa19ab1d94,55778968,0,0x0,8
tick,0x7ffa19ab1d94,55794167,0,0x0,8
tick,0x7ffa19ab1d94,55809977,0,0x0,8
tick,0x7ffa19ab1d94,55825984,0,0x0,8
tick,0x7ffa19ab1d94,55841695,0,0x0,8
tick,0x7ffa19ab1d94,55856824,0,0x0,8
tick,0x7ffa19ab1d94,55872585,0,0x0,8
tick,0x7ffa19ab1d94,55887914,0,0x0,8
tick,0x7ffa19ab1d94,55902452,0,0x0,8
tick,0x7ffa19ab1d94,55918090,0,0x0,8
tick,0x7ffa19ab1d94,55934302,0,0x0,8
tick,0x7ffa19ab1d94,55949386,0,0x0,8
tick,0x7ffa19ab1d94,55965128,0,0x0,8
tick,0x7ffa19ab1d94,55980343,0,0x0,8
tick,0x7ffa19ab1d94,55996417,0,0x0,8
tick,0x7ffa19ab1d94,56011848,0,0x0,8
tick,0x7ffa19ab1d94,56027482,0,0x0,8
tick,0x7ffa19ab1d94,56043495,0,0x0,8
tick,0x7ffa19ab1d94,56059160,0,0x0,8
tick,0x7ffa19ab1d94,56075127,0,0x0,8
tick,0x7ffa19ab1d94,56090740,0,0x0,8
tick,0x7ffa19ab1d94,56106339,0,0x0,8
tick,0x7ffa19ab1d94,56121794,0,0x0,8
tick,0x7ffa19ab1d94,56136885,0,0x0,8
tick,0x7ffa19ab1d94,56152628,0,0x0,8
tick,0x7ffa19ab1d94,56168030,0,0x0,8
tick,0x7ffa19ab1d94,56183741,0,0x0,8
tick,0x7ffa19ab1d94,56198900,0,0x0,8
tick,0x7ffa19ab1d94,56214231,0,0x0,8
tick,0x7ffa19ab1d94,56230028,0,0x0,8
tick,0x7ffa19ab1d94,56244988,0,0x0,8
tick,0x7ffa19ab1d94,56260334,0,0x0,8
tick,0x7ffa19ab1d94,56275989,0,0x0,8
tick,0x7ffa19ab1d94,56291388,0,0x0,8
tick,0x7ffa19ab1d94,56306894,0,0x0,8
tick,0x7ffa19ab1d94,56323270,0,0x0,8
tick,0x7ffa19ab1d94,56338095,0,0x0,8
tick,0x7ffa19ab1d94,56353611,0,0x0,8
tick,0x7ffa19ab1d94,56368874,0,0x0,8
tick,0x7ffa19ab1d94,56384578,0,0x0,8
tick,0x7ffa19ab1d94,56399889,0,0x0,8
tick,0x7ffa19ab1d94,56415821,0,0x0,8
tick,0x7ffa19ab1d94,56431667,0,0x0,8
tick,0x7ffa19ab1d94,56447108,0,0x0,8
tick,0x7ffa19ab1d94,56462607,0,0x0,8
tick,0x7ffa19ab1d94,56478764,0,0x0,8
tick,0x7ffa19ab1d94,56493880,0,0x0,8
tick,0x7ffa19ab1d94,56509616,0,0x0,8
tick,0x7ffa19ab1d94,56525224,0,0x0,8
tick,0x7ffa19ab1d94,56540901,0,0x0,8
tick,0x7ffa19ab1d94,56556132,0,0x0,8
tick,0x7ffa19ab1d94,56571522,0,0x0,8
tick,0x7ffa19ab1d94,56586684,0,0x0,8
tick,0x7ffa19ab1d94,56603152,0,0x0,8
tick,0x7ffa19ab1d94,56618207,0,0x0,8
tick,0x7ffa19ab1d94,56633582,0,0x0,8
tick,0x7ffa19ab1d94,56649304,0,0x0,8
tick,0x7ffa19ab1d94,56664411,0,0x0,8
tick,0x7ffa19ab1d94,56679789,0,0x0,8
tick,0x7ffa19ab1d94,56695534,0,0x0,8
tick,0x7ffa19ab1d94,56711502,0,0x0,8
tick,0x7ffa19ab1d94,56726618,0,0x0,8
tick,0x7ffa19ab1d94,56741943,0,0x0,8
tick,0x7ffa19ab1d94,56757843,0,0x0,8
tick,0x7ffa19ab1d94,56773596,0,0x0,8
tick,0x7ffa19ab1d94,56789292,0,0x0,8
tick,0x7ffa19ab1d94,56804634,0,0x0,8
tick,0x7ffa19ab1d94,56820124,0,0x0,8
tick,0x7ffa19ab1d94,56835708,0,0x0,8
tick,0x7ffa19ab1d94,56851693,0,0x0,8
tick,0x7ffa19ab1d94,56867301,0,0x0,8
tick,0x7ffa19ab1d94,56883273,0,0x0,8
tick,0x7ffa19ab1d94,56898903,0,0x0,8
tick,0x7ffa19ab1d94,56913804,0,0x0,8
tick,0x7ffa19ab1d94,56929767,0,0x0,8
tick,0x7ffa19ab1d94,56945858,0,0x0,8
tick,0x7ffa19ab1d94,56961424,0,0x0,8
tick,0x7ffa19ab1d94,56976864,0,0x0,8
tick,0x7ffa19ab1d94,56992961,0,0x0,8
tick,0x7ffa19ab1d94,57008008,0,0x0,8
tick,0x7ffa19ab1d94,57023294,0,0x0,8
tick,0x7ffa19ab1d94,57039624,0,0x0,8
tick,0x7ffa19ab1d94,57055485,0,0x0,8
tick,0x7ffa19ab1d94,57071482,0,0x0,8
tick,0x7ffa19ab1d94,57087523,0,0x0,8
tick,0x7ffa19ab1d94,57103151,0,0x0,8
tick,0x7ffa19ab1d94,57118876,0,0x0,8
tick,0x7ffa19ab1d94,57134765,0,0x0,8
tick,0x7ffa19ab1d94,57150488,0,0x0,8
tick,0x7ffa19ab1d94,57166480,0,0x0,8
tick,0x7ffa19ab1d94,57181589,0,0x0,8
tick,0x7ffa19ab1d94,57198639,0,0x0,8
tick,0x7ffa19ab1d94,57213213,0,0x0,8
tick,0x7ffa19ab1d94,57228771,0,0x0,8
tick,0x7ffa19ab1d94,57244757,0,0x0,8
tick,0x7ffa19ab1d94,57259920,0,0x0,8
tick,0x7ffa19ab1d94,57275417,0,0x0,8
tick,0x7ffa19ab1d94,57291742,0,0x0,8
tick,0x7ffa19ab1d94,57307591,0,0x0,8
tick,0x7ffa19ab1d94,57322883,0,0x0,8
tick,0x7ffa19ab1d94,57338378,0,0x0,8
tick,0x7ffa19ab1d94,57354235,0,0x0,8
tick,0x7ffa19ab1d94,57369796,0,0x0,8
tick,0x7ffa19ab1d94,57385838,0,0x0,8
tick,0x7ffa19ab1d94,57402016,0,0x0,8
tick,0x7ffa19ab1d94,57417679,0,0x0,8
tick,0x7ffa19ab1d94,57433304,0,0x0,8
tick,0x7ffa19ab1d94,57448886,0,0x0,8
tick,0x7ffa19ab1d94,57466517,0,0x0,8
tick,0x7ffa19ab1d94,57483044,0,0x0,8
tick,0x7ffa19ab1d94,57495912,0,0x0,8
tick,0x7ffa19ab1d94,57511525,0,0x0,8
tick,0x7ffa19ab1d94,57526821,0,0x0,8
tick,0x7ffa19ab1d94,57542775,0,0x0,8
tick,0x7ffa19ab1d94,57558524,0,0x0,8
tick,0x7ffa19ab1d94,57574997,0,0x0,8
tick,0x7ffa19ab1d94,57590362,0,0x0,8
tick,0x7ffa19ab1d94,57606368,0,0x0,8
tick,0x7ffa19ab1d94,57622470,0,0x0,8
tick,0x7ffa19ab1d94,57637697,0,0x0,8
tick,0x7ffa19ab1d94,57653118,0,0x0,8
tick,0x7ffa19ab1d94,57668506,0,0x0,8
tick,0x7ffa19ab1d94,57684157,0,0x0,8
tick,0x7ffa19ab1d94,57699808,0,0x0,8
tick,0x7ffa19ab1d94,57715281,0,0x0,8
tick,0x7ffa19ab1d94,57730980,0,0x0,8
tick,0x7ffa19ab1d94,57746035,0,0x0,8
tick,0x7ffa19ab1d94,57761378,0,0x0,8
tick,0x7ffa19ab1d94,57776527,0,0x0,8
tick,0x7ffa19ab1d94,57791709,0,0x0,8
tick,0x7ffa19ab1d94,57807735,0,0x0,8
tick,0x7ffa19ab1d94,57823566,0,0x0,8
tick,0x7ffa19ab1d94,57839329,0,0x0,8
tick,0x7ffa19ab1d94,57855077,0,0x0,8
tick,0x7ffa19ab1d94,57871771,0,0x0,8
tick,0x7ffa19ab1d94,57887358,0,0x0,8
tick,0x7ffa19ab1d94,57902740,0,0x0,8
tick,0x7ffa19ab1d94,57918415,0,0x0,8
tick,0x7ffa19ab1d94,57934074,0,0x0,8
tick,0x7ffa19ab1d94,57949822,0,0x0,8
tick,0x7ffa19ab1d94,57965902,0,0x0,8
tick,0x7ffa19ab1d94,57981663,0,0x0,8
tick,0x7ffa19ab1d94,57997378,0,0x0,8
tick,0x7ffa19ab1d94,58012675,0,0x0,8
tick,0x7ffa19ab1d94,58028496,0,0x0,8
tick,0x7ffa19ab1d94,58044146,0,0x0,8
tick,0x7ffa19ab1d94,58059296,0,0x0,8
tick,0x7ffa19ab1d94,58074562,0,0x0,8
tick,0x7ffa19ab1d94,58090458,0,0x0,8
tick,0x7ffa19ab1d94,58106536,0,0x0,8
tick,0x7ffa19ab1d94,58121943,0,0x0,8
tick,0x7ffa19ab1d94,58137644,0,0x0,8
tick,0x7ffa19ab1d94,58153776,0,0x0,8
tick,0x7ffa19ab1d94,58169347,0,0x0,8
tick,0x7ffa19ab1d94,58185321,0,0x0,8
tick,0x7ffa19ab1d94,58200829,0,0x0,8
tick,0x7ffa19ab1d94,58216359,0,0x0,8
tick,0x7ffa19ab1d94,58232352,0,0x0,8
tick,0x7ffa19ab1d94,58247881,0,0x0,8
tick,0x7ffa19ab1d94,58264125,0,0x0,8
tick,0x7ffa19ab1d94,58279796,0,0x0,8
tick,0x7ffa19ab1d94,58295549,0,0x0,8
tick,0x7ffa19ab1d94,58311564,0,0x0,8
tick,0x7ffa19ab1d94,58327047,0,0x0,8
tick,0x7ffa19ab1d94,58342060,0,0x0,8
tick,0x7ffa19ab1d94,58357598,0,0x0,8
tick,0x7ffa19ab1d94,58373588,0,0x0,8
tick,0x7ffa19ab1d94,58389259,0,0x0,8
tick,0x7ffa19ab1d94,58405393,0,0x0,8
tick,0x7ffa19ab1d94,58421359,0,0x0,8
tick,0x7ffa19ab1d94,58436745,0,0x0,8
tick,0x7ffa19ab1d94,58452323,0,0x0,8
tick,0x7ffa19ab1d94,58468072,0,0x0,8
tick,0x7ffa19ab1d94,58483223,0,0x0,8
tick,0x7ffa19ab1d94,58498235,0,0x0,8
tick,0x7ffa19ab1d94,58514229,0,0x0,8
tick,0x7ffa19ab1d94,58529900,0,0x0,8
tick,0x7ffa19ab1d94,58545672,0,0x0,8
tick,0x7ffa19ab1d94,58561477,0,0x0,8
tick,0x7ffa19ab1d94,58576596,0,0x0,8
tick,0x7ffa19ab1d94,58591708,0,0x0,8
tick,0x7ffa19ab1d94,58608137,0,0x0,8
tick,0x7ffa19ab1d94,58623468,0,0x0,8
tick,0x7ffa19ab1d94,58638617,0,0x0,8
tick,0x7ffa19ab1d94,58654368,0,0x0,8
tick,0x7ffa19ab1d94,58670407,0,0x0,8
tick,0x7ffa19ab1d94,58686300,0,0x0,8
tick,0x7ffa19ab1d94,58702032,0,0x0,8
tick,0x7ffa19ab1d94,58717185,0,0x0,8
tick,0x7ffa19ab1d94,58732692,0,0x0,8
tick,0x7ffa19ab1d94,58748335,0,0x0,8
tick,0x7ffa19ab1d94,58763733,0,0x0,8
tick,0x7ffa19ab1d94,58780355,0,0x0,8
tick,0x7ffa19ab1d94,58794708,0,0x0,8
tick,0x7ffa19ab1d94,58809928,0,0x0,8
tick,0x7ffa19ab1d94,58825164,0,0x0,8
tick,0x7ffa19ab1d94,58841725,0,0x0,8
tick,0x7ffa19ab1d94,58856846,0,0x0,8
tick,0x7ffa19ab1d94,58872073,0,0x0,8
tick,0x7ffa19ab1d94,58888167,0,0x0,8
tick,0x7ffa19ab1d94,58903984,0,0x0,8
tick,0x7ffa19ab1d94,58919756,0,0x0,8
tick,0x7ffa19ab1d94,58935618,0,0x0,8
tick,0x7ffa19ab1d94,58951505,0,0x0,8
tick,0x7ffa19ab1d94,58967045,0,0x0,8
tick,0x7ffa19ab1d94,58982626,0,0x0,8
tick,0x7ffa19ab1d94,58998134,0,0x0,8
tick,0x7ffa19ab1d94,59014156,0,0x0,8
tick,0x7ffa19ab1d94,59030139,0,0x0,8
tick,0x7ffa19ab1d94,59045597,0,0x0,8
tick,0x7ffa19ab1d94,59061757,0,0x0,8
tick,0x7ffa19ab1d94,59077098,0,0x0,8
tick,0x7ffa19ab1d94,59092747,0,0x0,8
tick,0x7ffa19ab1d94,59107434,0,0x0,8
tick,0x7ffa19ab1d94,59122778,0,0x0,8
tick,0x7ffa19ab1d94,59138737,0,0x0,8
tick,0x7ffa19ab1d94,59154717,0,0x0,8
tick,0x7ffa19ab1d94,59170289,0,0x0,8
tick,0x7ffa19ab1d94,59186310,0,0x0,8
tick,0x7ffa19ab1d94,59201806,0,0x0,8
tick,0x7ffa19ab1d94,59217372,0,0x0,8
tick,0x7ffa19ab1d94,59233369,0,0x0,8
tick,0x7ffa19ab1d94,59248933,0,0x0,8
tick,0x7ffa19ab1d94,59265030,0,0x0,8
tick,0x7ffa19ab1d94,59280443,0,0x0,8
tick,0x7ffa19ab1d94,59296894,0,0x0,8
tick,0x7ffa19ab1d94,59312077,0,0x0,8
tick,0x7ffa19ab1d94,59327576,0,0x0,8
tick,0x7ffa19ab1d94,59344878,0,0x0,8
tick,0x7ffa19ab1d94,59359172,0,0x0,8
tick,0x7ffa19ab1d94,59374521,0,0x0,8
tick,0x7ffa19ab1d94,59389777,0,0x0,8
tick,0x7ffa19ab1d94,59405094,0,0x0,8
tick,0x7ffa19ab1d94,59420915,0,0x0,8
tick,0x7ffa19ab1d94,59436217,0,0x0,8
tick,0x7ffa19ab1d94,59451493,0,0x0,8
tick,0x7ffa19ab1d94,59466757,0,0x0,8
tick,0x7ffa19ab1d94,59483049,0,0x0,8
tick,0x7ffa19ab1d94,59498533,0,0x0,8
tick,0x7ffa19ab1d94,59513928,0,0x0,8
tick,0x7ffa19ab1d94,59529714,0,0x0,8
tick,0x7ffa19ab1d94,59545478,0,0x0,8
tick,0x7ffa19ab1d94,59561458,0,0x0,8
tick,0x7ffa19ab1d94,59576888,0,0x0,8
tick,0x7ffa19ab1d94,59592666,0,0x0,8
tick,0x7ffa19ab1d94,59608103,0,0x0,8
tick,0x7ffa19ab1d94,59623508,0,0x0,8
tick,0x7ffa19ab1d94,59639109,0,0x0,8
tick,0x7ffa19ab1d94,59654762,0,0x0,8
tick,0x7ffa19ab1d94,59670591,0,0x0,8
tick,0x7ffa19ab1d94,59685685,0,0x0,8
tick,0x7ffa19ab1d94,59701361,0,0x0,8
tick,0x7ffa19ab1d94,59716962,0,0x0,8
tick,0x7ffa19ab1d94,59732839,0,0x0,8
tick,0x7ffa19ab1d94,59748780,0,0x0,8
tick,0x7ffa19ab1d94,59764404,0,0x0,8
tick,0x7ffa19ab1d94,59780293,0,0x0,8
tick,0x7ffa19ab1d94,59796271,0,0x0,8
tick,0x7ffa19ab1d94,59811771,0,0x0,8
tick,0x7ffa19ab1d94,59827372,0,0x0,8
tick,0x7ffa19ab1d94,59842957,0,0x0,8
tick,0x7ffa19ab1d94,59858879,0,0x0,8
tick,0x7ffa19ab1d94,59874196,0,0x0,8
tick,0x7ffa19ab1d94,59889805,0,0x0,8
tick,0x7ffa19ab1d94,59905433,0,0x0,8
tick,0x7ffa19ab1d94,59921127,0,0x0,8
tick,0x7ffa19ab1d94,59935869,0,0x0,8
tick,0x7ffa19ab1d94,59951751,0,0x0,8
tick,0x7ffa19ab1d94,59967115,0,0x0,8
tick,0x7ffa19ab1d94,59983060,0,0x0,8
tick,0x7ffa19ab1d94,59998687,0,0x0,8
tick,0x7ffa19ab1d94,60014220,0,0x0,8
tick,0x7ffa19ab1d94,60029836,0,0x0,8
tick,0x7ffa19ab1d94,60045167,0,0x0,8
tick,0x7ffa19ab1d94,60061402,0,0x0,8
tick,0x7ffa19ab1d94,60076947,0,0x0,8
tick,0x7ffa19ab1d94,60092722,0,0x0,8
tick,0x7ffa19ab1d94,60108600,0,0x0,8
tick,0x7ffa19ab1d94,60123722,0,0x0,8
tick,0x7ffa19ab1d94,60138655,0,0x0,8
tick,0x7ffa19ab1d94,60153709,0,0x0,8
tick,0x7ffa19ab1d94,60168819,0,0x0,8
tick,0x7ffa19ab1d94,60185169,0,0x0,8
tick,0x7ffa19ab1d94,60200558,0,0x0,8
tick,0x7ffa19ab1d94,60215758,0,0x0,8
tick,0x7ffa19ab1d94,60231481,0,0x0,8
tick,0x7ffa19ab1d94,60247628,0,0x0,8
tick,0x7ffa19ab1d94,60263607,0,0x0,8
tick,0x7ffa19ab1d94,60279028,0,0x0,8
tick,0x7ffa19ab1d94,60295337,0,0x0,8
tick,0x7ffa19ab1d94,60311980,0,0x0,8
tick,0x7ffa19ab1d94,60327195,0,0x0,8
tick,0x7ffa19ab1d94,60343009,0,0x0,8
tick,0x7ffa19ab1d94,60359099,0,0x0,8
tick,0x7ffa19ab1d94,60374766,0,0x0,8
tick,0x7ffa19ab1d94,60389872,0,0x0,8
tick,0x7ffa19ab1d94,60405711,0,0x0,8
tick,0x7ffa19ab1d94,60421454,0,0x0,8
tick,0x7ffa19ab1d94,60437426,0,0x0,8
tick,0x7ffa19ab1d94,60453609,0,0x0,8
tick,0x7ffa19ab1d94,60468116,0,0x0,8
tick,0x7ffa19ab1d94,60484269,0,0x0,8
tick,0x7ffa19ab1d94,60500197,0,0x0,8
tick,0x7ffa19ab1d94,60515121,0,0x0,8
tick,0x7ffa19ab1d94,60532202,0,0x0,8
tick,0x7ffa19ab1d94,60547611,0,0x0,8
tick,0x7ffa19ab1d94,60564063,0,0x0,8
tick,0x7ffa19ab1d94,60579613,0,0x0,8
tick,0x7ffa19ab1d94,60595462,0,0x0,8
tick,0x7ffa19ab1d94,60611874,0,0x0,8
tick,0x7ffa19ab1d94,60628530,0,0x0,8
tick,0x7ffa19ab1d94,60642606,0,0x0,8
tick,0x7ffa19ab1d94,60658638,0,0x0,8
tick,0x7ffa19ab1d94,60673640,0,0x0,8
tick,0x7ffa19ab1d94,60689651,0,0x0,8
tick,0x7ffa19ab1d94,60705661,0,0x0,8
tick,0x7ffa19ab1d94,60721821,0,0x0,8
tick,0x7ffa19ab1d94,60737154,0,0x0,8
tick,0x7ffa19ab1d94,60752591,0,0x0,8
tick,0x7ffa19ab1d94,60768288,0,0x0,8
tick,0x7ffa19ab1d94,60783489,0,0x0,8
tick,0x7ffa19ab1d94,60799278,0,0x0,8
tick,0x7ffa19ab1d94,60814875,0,0x0,8
tick,0x7ffa19ab1d94,60830609,0,0x0,8
tick,0x7ffa19ab1d94,60846694,0,0x0,8
tick,0x7ffa19ab1d94,60862477,0,0x0,8
tick,0x7ffa19ab1d94,60878640,0,0x0,8
tick,0x7ffa19ab1d94,60893724,0,0x0,8
tick,0x7ffa19ab1d94,60908977,0,0x0,8
tick,0x7ffa19ab1d94,60924586,0,0x0,8
tick,0x7ffa19ab1d94,60939798,0,0x0,8
tick,0x7ffa19ab1d94,60954944,0,0x0,8
tick,0x7ffa19ab1d94,60970494,0,0x0,8
tick,0x7ffa19ab1d94,60985742,0,0x0,8
tick,0x7ffa19ab1d94,61001731,0,0x0,8
tick,0x7ffa19ab1d94,61018021,0,0x0,8
tick,0x7ffa19ab1d94,61033310,0,0x0,8
tick,0x7ffa19ab1d94,61048963,0,0x0,8
tick,0x7ffa19ab1d94,61065059,0,0x0,8
tick,0x7ffa19ab1d94,61080835,0,0x0,8
tick,0x7ffa19ab1d94,61096175,0,0x0,8
tick,0x7ffa19ab1d94,61112057,0,0x0,8
tick,0x7ffa19ab1d94,61128436,0,0x0,8
tick,0x7ffa19ab1d94,61143636,0,0x0,8
tick,0x7ffa19ab1d94,61159202,0,0x0,8
tick,0x7ffa19ab1d94,61174853,0,0x0,8
tick,0x7ffa19ab1d94,61190426,0,0x0,8
tick,0x7ffa19ab1d94,61205534,0,0x0,8
tick,0x7ffa19ab1d94,61222089,0,0x0,8
tick,0x7ffa19ab1d94,61237008,0,0x0,8
tick,0x7ffa19ab1d94,61253549,0,0x0,8
tick,0x7ffa19ab1d94,61268554,0,0x0,8
tick,0x7ffa19ab1d94,61286663,0,0x0,8
tick,0x7ffa19ab1d94,61304775,0,0x0,8
tick,0x7ffa19ab1d94,61316542,0,0x0,8
tick,0x7ffa19ab1d94,61332283,0,0x0,8
tick,0x7ffa19ab1d94,61349765,0,0x0,8
tick,0x7ffa19ab1d94,61374150,0,0x0,8
tick,0x7ffa19ab1d94,61381810,0,0x0,8
tick,0x7ffa19ab1d94,61399353,0,0x0,8
tick,0x7ffa19ab1d94,61417392,0,0x0,8
tick,0x7ffa19ab1d94,61434528,0,0x0,8
tick,0x7ffa19ab1d94,61448278,0,0x0,8
tick,0x7ffa19ab1d94,61458984,0,0x0,8
tick,0x7ffa19ab1d94,61475610,0,0x0,8
tick,0x7ffa19ab1d94,61490597,0,0x0,8
tick,0x7ffa19ab1d94,61506828,0,0x0,8
tick,0x7ffa19ab1d94,61537362,0,0x0,8
tick,0x7ffa19ab1d94,61557811,0,0x0,8
tick,0x7ffa19ab1d94,61573769,0,0x0,8
tick,0x7ffa19ab1d94,61586996,0,0x0,8
tick,0x7ffa19ab1d94,61601364,0,0x0,8
tick,0x7ffa19ab1d94,61616086,0,0x0,8
tick,0x7ffa19ab1d94,61629778,0,0x0,8
tick,0x7ffa19ab1d94,61646542,0,0x0,8
tick,0x7ffa19ab1d94,61663084,0,0x0,8
tick,0x7ffa19ab1d94,61679650,0,0x0,8
tick,0x7ffa19ab1d94,61692437,0,0x0,8
tick,0x7ffa19ab1d94,61706990,0,0x0,8
tick,0x7ffa19ab1d94,61722410,0,0x0,8
tick,0x7ffa19ab1d94,61737634,0,0x0,8
tick,0x7ffa19ab1d94,61753636,0,0x0,8
tick,0x7ffa19ab1d94,61768872,0,0x0,8
tick,0x7ffa19ab1d94,61784490,0,0x0,8
tick,0x7ffa19ab1d94,61799742,0,0x0,8
tick,0x7ffa19ab1d94,61815597,0,0x0,8
tick,0x7ffa19ab1d94,61830962,0,0x0,8
tick,0x7ffa19ab1d94,61848199,0,0x0,8
tick,0x7ffa19ab1d94,61863628,0,0x0,8
tick,0x7ffa19ab1d94,61880990,0,0x0,8
tick,0x7ffa19ab1d94,61897563,0,0x0,8
tick,0x7ffa19ab1d94,61908466,0,0x0,8
tick,0x7ffa19ab1d94,61924665,0,0x0,8
tick,0x7ffa19ab1d94,61940408,0,0x0,8
tick,0x7ffa19ab1d94,61956270,0,0x0,8
tick,0x7ffa19ab1d94,61971516,0,0x0,8
tick,0x7ffa19ab1d94,61986742,0,0x0,8
tick,0x7ffa19ab1d94,62002440,0,0x0,8
tick,0x7ffa19ab1d94,62018032,0,0x0,8
tick,0x7ffa19ab1d94,62033851,0,0x0,8
tick,0x7ffa19ab1d94,62049091,0,0x0,8
tick,0x7ffa19ab1d94,62064520,0,0x0,8
tick,0x7ffa19ab1d94,62080212,0,0x0,8
tick,0x7ffa19ab1d94,62095778,0,0x0,8
tick,0x7ffa19ab1d94,62111621,0,0x0,8
tick,0x7ffa19ab1d94,62127684,0,0x0,8
tick,0x7ffa19ab1d94,62144146,0,0x0,8
tick,0x7ffa19ab1d94,62159974,0,0x0,8
tick,0x7ffa19ab1d94,62175246,0,0x0,8
tick,0x7ffa19ab1d94,62191981,0,0x0,8
tick,0x7ffa19ab1d94,62207220,0,0x0,8
tick,0x7ffa19ab1d94,62222559,0,0x0,8
tick,0x7ffa19ab1d94,62237526,0,0x0,8
tick,0x7ffa19ab1d94,62253466,0,0x0,8
tick,0x7ffa19ab1d94,62268802,0,0x0,8
tick,0x7ffa19ab1d94,62284548,0,0x0,8
tick,0x7ffa19ab1d94,62300005,0,0x0,8
tick,0x7ffa19ab1d94,62315531,0,0x0,8
tick,0x7ffa19ab1d94,62331887,0,0x0,8
tick,0x7ffa19ab1d94,62347831,0,0x0,8
tick,0x7ffa19ab1d94,62363189,0,0x0,8
tick,0x7ffa19ab1d94,62380051,0,0x0,8
tick,0x7ffa19ab1d94,62394194,0,0x0,8
tick,0x7ffa19ab1d94,62408746,0,0x0,8
tick,0x7ffa19ab1d94,62424319,0,0x0,8
tick,0x7ffa19ab1d94,62439734,0,0x0,8
tick,0x7ffa19ab1d94,62454939,0,0x0,8
tick,0x7ffa19ab1d94,62470542,0,0x0,8
tick,0x7ffa19ab1d94,62486335,0,0x0,8
tick,0x7ffa19ab1d94,62501917,0,0x0,8
tick,0x7ffa19ab1d94,62517496,0,0x0,8
tick,0x7ffa19ab1d94,62533342,0,0x0,8
tick,0x7ffa19ab1d94,62548887,0,0x0,8
tick,0x7ffa19ab1d94,62564684,0,0x0,8
tick,0x7ffa19ab1d94,62580261,0,0x0,8
tick,0x7ffa19ab1d94,62595999,0,0x0,8
tick,0x7ffa19ab1d94,62612150,0,0x0,8
tick,0x7ffa19ab1d94,62627810,0,0x0,8
tick,0x7ffa19ab1d94,62643625,0,0x0,8
tick,0x7ffa19ab1d94,62657612,0,0x0,8
tick,0x7ffa19ab1d94,62672986,0,0x0,8
tick,0x7ffa19ab1d94,62688873,0,0x0,8
tick,0x7ffa19ab1d94,62704142,0,0x0,8
tick,0x7ffa19ab1d94,62719601,0,0x0,8
tick,0x7ffa19ab1d94,62735288,0,0x0,8
tick,0x7ffa19ab1d94,62751562,0,0x0,8
tick,0x7ffa19ab1d94,62767338,0,0x0,8
tick,0x7ffa19ab1d94,62783245,0,0x0,8
tick,0x7ffa19ab1d94,62799131,0,0x0,8
tick,0x7ffa19ab1d94,62814702,0,0x0,8
tick,0x7ffa19ab1d94,62830111,0,0x0,8
tick,0x7ffa19ab1d94,62845736,0,0x0,8
tick,0x7ffa19ab1d94,62861047,0,0x0,8
tick,0x7ffa19ab1d94,62876380,0,0x0,8
tick,0x7ffa19ab1d94,62891734,0,0x0,8
tick,0x7ffa19ab1d94,62907188,0,0x0,8
tick,0x7ffa19ab1d94,62922643,0,0x0,8
tick,0x7ffa19ab1d94,62938332,0,0x0,8
tick,0x7ffa19ab1d94,62953854,0,0x0,8
tick,0x7ffa19ab1d94,62969169,0,0x0,8
tick,0x7ffa19ab1d94,62985033,0,0x0,8
tick,0x7ffa19ab1d94,63000658,0,0x0,8
tick,0x7ffa19ab1d94,63016424,0,0x0,8
tick,0x7ffa19ab1d94,63031885,0,0x0,8
tick,0x7ffa19ab1d94,63048001,0,0x0,8
tick,0x7ffa19ab1d94,63063759,0,0x0,8
tick,0x7ffa19ab1d94,63079513,0,0x0,8
tick,0x7ffa19ab1d94,63094750,0,0x0,8
tick,0x7ffa19ab1d94,63110027,0,0x0,8
tick,0x7ffa19ab1d94,63126560,0,0x0,8
tick,0x7ffa19ab1d94,63141949,0,0x0,8
tick,0x7ffa19ab1d94,63157724,0,0x0,8
tick,0x7ffa19ab1d94,63172843,0,0x0,8
tick,0x7ffa19ab1d94,63188419,0,0x0,8
tick,0x7ffa19ab1d94,63203893,0,0x0,8
tick,0x7ffa19ab1d94,63219580,0,0x0,8
tick,0x7ffa19ab1d94,63235268,0,0x0,8
tick,0x7ffa19ab1d94,63251807,0,0x0,8
tick,0x7ffa19ab1d94,63267718,0,0x0,8
tick,0x7ffa19ab1d94,63283896,0,0x0,8
tick,0x7ffa19ab1d94,63300119,0,0x0,8
tick,0x7ffa19ab1d94,63315928,0,0x0,8
tick,0x7ffa19ab1d94,63331659,0,0x0,8
tick,0x7ffa19ab1d94,63347130,0,0x0,8
tick,0x7ffa19ab1d94,63362830,0,0x0,8
tick,0x7ffa19ab1d94,63378096,0,0x0,8
tick,0x7ffa19ab1d94,63393613,0,0x0,8
tick,0x7ffa19ab1d94,63409257,0,0x0,8
tick,0x7ffa19ab1d94,63424374,0,0x0,8
tick,0x7ffa19ab1d94,63440267,0,0x0,8
tick,0x7ffa19ab1d94,63455531,0,0x0,8
tick,0x7ffa19ab1d94,63471461,0,0x0,8
tick,0x7ffa19ab1d94,63486639,0,0x0,8
tick,0x7ffa19ab1d94,63502036,0,0x0,8
tick,0x7ffa19ab1d94,63516656,0,0x0,8
tick,0x7ffa19ab1d94,63532706,0,0x0,8
tick,0x7ffa19ab1d94,63548581,0,0x0,8
tick,0x7ffa19ab1d94,63563119,0,0x0,8
tick,0x7ffa19ab1d94,63579281,0,0x0,8
tick,0x7ffa19ab1d94,63594273,0,0x0,8
tick,0x7ffa19ab1d94,63610535,0,0x0,8
tick,0x7ffa19ab1d94,63625863,0,0x0,8
tick,0x7ffa19ab1d94,63641512,0,0x0,8
tick,0x7ffa19ab1d94,63657096,0,0x0,8
tick,0x7ffa19ab1d94,63672469,0,0x0,8
tick,0x7ffa19ab1d94,63687784,0,0x0,8
tick,0x7ffa19ab1d94,63703278,0,0x0,8
tick,0x7ffa19ab1d94,63718429,0,0x0,8
tick,0x7ffa19ab1d94,63734420,0,0x0,8
tick,0x7ffa19ab1d94,63749594,0,0x0,8
tick,0x7ffa19ab1d94,63765787,0,0x0,8
tick,0x7ffa19ab1d94,63781803,0,0x0,8
tick,0x7ffa19ab1d94,63796944,0,0x0,8
tick,0x7ffa19ab1d94,63812625,0,0x0,8
tick,0x7ffa19ab1d94,63828648,0,0x0,8
tick,0x7ffa19ab1d94,63844448,0,0x0,8
tick,0x7ffa19ab1d94,63859825,0,0x0,8
tick,0x7ffa19ab1d94,63875871,0,0x0,8
tick,0x7ffa19ab1d94,63891479,0,0x0,8
tick,0x7ffa19ab1d94,63906962,0,0x0,8
tick,0x7ffa19ab1d94,63922623,0,0x0,8
tick,0x7ffa19ab1d94,63937767,0,0x0,8
tick,0x7ffa19ab1d94,63953787,0,0x0,8
tick,0x7ffa19ab1d94,63969903,0,0x0,8
tick,0x7ffa19ab1d94,63985115,0,0x0,8
tick,0x7ffa19ab1d94,64000363,0,0x0,8
tick,0x7ffa19ab1d94,64015926,0,0x0,8
tick,0x7ffa19ab1d94,64031441,0,0x0,8
tick,0x7ffa19ab1d94,64046558,0,0x0,8
tick,0x7ffa19ab1d94,64062251,0,0x0,8
tick,0x7ffa19ab1d94,64077858,0,0x0,8
tick,0x7ffa19ab1d94,64093167,0,0x0,8
tick,0x7ffa19ab1d94,64108406,0,0x0,8
tick,0x7ffa19ab1d94,64123143,0,0x0,8
tick,0x7ffa19ab1d94,64138859,0,0x0,8
tick,0x7ffa19ab1d94,64154111,0,0x0,8
tick,0x7ffa19ab1d94,64169918,0,0x0,8
tick,0x7ffa19ab1d94,64185418,0,0x0,8
tick,0x7ffa19ab1d94,64201683,0,0x0,8
tick,0x7ffa19ab1d94,64217140,0,0x0,8
tick,0x7ffa19ab1d94,64232669,0,0x0,8
tick,0x7ffa19ab1d94,64248552,0,0x0,8
tick,0x7ffa19ab1d94,64264066,0,0x0,8
tick,0x7ffa19ab1d94,64280194,0,0x0,8
tick,0x7ffa19ab1d94,64295904,0,0x0,8
tick,0x7ffa19ab1d94,64311713,0,0x0,8
tick,0x7ffa19ab1d94,64327346,0,0x0,8
tick,0x7ffa19ab1d94,64342965,0,0x0,8
tick,0x7ffa19ab1d94,64358616,0,0x0,8
tick,0x7ffa19ab1d94,64373988,0,0x0,8
tick,0x7ffa19ab1d94,64389838,0,0x0,8
tick,0x7ffa19ab1d94,64405737,0,0x0,8
tick,0x7ffa19ab1d94,64420654,0,0x0,8
tick,0x7ffa19ab1d94,64435877,0,0x0,8
tick,0x7ffa19ab1d94,64451509,0,0x0,8
tick,0x7ffa19ab1d94,64467464,0,0x0,8
tick,0x7ffa19ab1d94,64482501,0,0x0,8
tick,0x7ffa19ab1d94,64497741,0,0x0,8
tick,0x7ffa19ab1d94,64513417,0,0x0,8
tick,0x7ffa19ab1d94,64529104,0,0x0,8
tick,0x7ffa19ab1d94,64545204,0,0x0,8
tick,0x7ffa19ab1d94,64560295,0,0x0,8
tick,0x7ffa19ab1d94,64576165,0,0x0,8
tick,0x7ffa19ab1d94,64592006,0,0x0,8
tick,0x7ffa19ab1d94,64607238,0,0x0,8
tick,0x7ffa19ab1d94,64622950,0,0x0,8
tick,0x7ffa19ab1d94,64638181,0,0x0,8
tick,0x7ffa19ab1d94,64653936,0,0x0,8
tick,0x7ffa19ab1d94,64669324,0,0x0,8
tick,0x7ffa19ab1d94,64684981,0,0x0,8
tick,0x7ffa19ab1d94,64700254,0,0x0,8
tick,0x7ffa19ab1d94,64715816,0,0x0,8
tick,0x7ffa19ab1d94,64732025,0,0x0,8
tick,0x7ffa19ab1d94,64747257,0,0x0,8
tick,0x7ffa19ab1d94,64762746,0,0x0,8
tick,0x7ffa19ab1d94,64778052,0,0x0,8
tick,0x7ffa19ab1d94,64793911,0,0x0,8
tick,0x7ffa19ab1d94,64809513,0,0x0,8
tick,0x7ffa19ab1d94,64824562,0,0x0,8
tick,0x7ffa19ab1d94,64839757,0,0x0,8
tick,0x7ffa19ab1d94,64854997,0,0x0,8
tick,0x7ffa19ab1d94,64869617,0,0x0,8
tick,0x7ffa19ab1d94,64885080,0,0x0,8
tick,0x7ffa19ab1d94,64901784,0,0x0,8
tick,0x7ffa19ab1d94,64917018,0,0x0,8
tick,0x7ffa19ab1d94,64932622,0,0x0,8
tick,0x7ffa19ab1d94,64947704,0,0x0,8
tick,0x7ffa19ab1d94,64963802,0,0x0,8
tick,0x7ffa19ab1d94,64979760,0,0x0,8
tick,0x7ffa19ab1d94,64994936,0,0x0,8
tick,0x7ffa19ab1d94,65011036,0,0x0,8
tick,0x7ffa19ab1d94,65026001,0,0x0,8
tick,0x7ffa19ab1d94,65041741,0,0x0,8
tick,0x7ffa19ab1d94,65057812,0,0x0,8
tick,0x7ffa19ab1d94,65072885,0,0x0,8
tick,0x7ffa19ab1d94,65087739,0,0x0,8
tick,0x7ffa19ab1d94,65103187,0,0x0,8
tick,0x7ffa19ab1d94,65118570,0,0x0,8
tick,0x7ffa19ab1d94,65134045,0,0x0,8
tick,0x7ffa19ab1d94,65150019,0,0x0,8
tick,0x7ffa19ab1d94,65165152,0,0x0,8
tick,0x7ffa19ab1d94,65181574,0,0x0,8
tick,0x7ffa19ab1d94,65197573,0,0x0,8
tick,0x7ffa19ab1d94,65213147,0,0x0,8
tick,0x7ffa19ab1d94,65229044,0,0x0,8
tick,0x7ffa19ab1d94,65244299,0,0x0,8
tick,0x7ffa19ab1d94,65259625,0,0x0,8
tick,0x7ffa19ab1d94,65275026,0,0x0,8
tick,0x7ffa19ab1d94,65291012,0,0x0,8
tick,0x7ffa19ab1d94,65306920,0,0x0,8
tick,0x7ffa19ab1d94,65322948,0,0x0,8
tick,0x7ffa19ab1d94,65338799,0,0x0,8
tick,0x7ffa19ab1d94,65354096,0,0x0,8
tick,0x7ffa19ab1d94,65370934,0,0x0,8
tick,0x7ffa19ab1d94,65386168,0,0x0,8
tick,0x7ffa19ab1d94,65401806,0,0x0,8
tick,0x7ffa19ab1d94,65417542,0,0x0,8
tick,0x7ffa19ab1d94,65433488,0,0x0,8
tick,0x7ffa19ab1d94,65448879,0,0x0,8
tick,0x7ffa19ab1d94,65463882,0,0x0,8
tick,0x7ffa19ab1d94,65479873,0,0x0,8
tick,0x7ffa19ab1d94,65495959,0,0x0,8
tick,0x7ffa19ab1d94,65511984,0,0x0,8
tick,0x7ffa19ab1d94,65527461,0,0x0,8
tick,0x7ffa19ab1d94,65543317,0,0x0,8
tick,0x7ffa19ab1d94,65559005,0,0x0,8
tick,0x7ffa19ab1d94,65575031,0,0x0,8
tick,0x7ffa19ab1d94,65590707,0,0x0,8
tick,0x7ffa19ab1d94,65605880,0,0x0,8
tick,0x7ffa19ab1d94,65621643,0,0x0,8
tick,0x7ffa19ab1d94,65637143,0,0x0,8
tick,0x7ffa19ab1d94,65653521,0,0x0,8
tick,0x7ffa19ab1d94,65668874,0,0x0,8
tick,0x7ffa19ab1d94,65684368,0,0x0,8
tick,0x7ffa19ab1d94,65699883,0,0x0,8
tick,0x7ffa19ab1d94,65715974,0,0x0,8
tick,0x7ffa19ab1d94,65732274,0,0x0,8
tick,0x7ffa19ab1d94,65747569,0,0x0,8
tick,0x7ffa19ab1d94,65763114,0,0x0,8
tick,0x7ffa19ab1d94,65778677,0,0x0,8
tick,0x7ffa19ab1d94,65793815,0,0x0,8
tick,0x7ffa19ab1d94,65808549,0,0x0,8
tick,0x7ffa19ab1d94,65825704,0,0x0,8
tick,0x7ffa19ab1d94,65839515,0,0x0,8
tick,0x7ffa19ab1d94,65855135,0,0x0,8
tick,0x7ffa19ab1d94,65871565,0,0x0,8
tick,0x7ffa19ab1d94,65887482,0,0x0,8
tick,0x7ffa19ab1d94,65902907,0,0x0,8
tick,0x7ffa19ab1d94,65918607,0,0x0,8
tick,0x7ffa19ab1d94,65933783,0,0x0,8
tick,0x7ffa19ab1d94,65949068,0,0x0,8
tick,0x7ffa19ab1d94,65964419,0,0x0,8
tick,0x7ffa19ab1d94,65980272,0,0x0,8
tick,0x7ffa19ab1d94,65995850,0,0x0,8
tick,0x7ffa19ab1d94,66010703,0,0x0,8
tick,0x7ffa19ab1d94,66026613,0,0x0,8
tick,0x7ffa19ab1d94,66041563,0,0x0,8
tick,0x7ffa19ab1d94,66056976,0,0x0,8
tick,0x7ffa19ab1d94,66072385,0,0x0,8
tick,0x7ffa19ab1d94,66087825,0,0x0,8
tick,0x7ffa19ab1d94,66103628,0,0x0,8
tick,0x7ffa19ab1d94,66119306,0,0x0,8
tick,0x7ffa19ab1d94,66135420,0,0x0,8
tick,0x7ffa19ab1d94,66151594,0,0x0,8
tick,0x7ffa19ab1d94,66167077,0,0x0,8
tick,0x7ffa19ab1d94,66182939,0,0x0,8
tick,0x7ffa19ab1d94,66198493,0,0x0,8
tick,0x7ffa19ab1d94,66214405,0,0x0,8
tick,0x7ffa19ab1d94,66230668,0,0x0,8
tick,0x7ffa19ab1d94,66246104,0,0x0,8
tick,0x7ffa19ab1d94,66261446,0,0x0,8
tick,0x7ffa19ab1d94,66277253,0,0x0,8
tick,0x7ffa19ab1d94,66293385,0,0x0,8
tick,0x7ffa19ab1d94,66308720,0,0x0,8
tick,0x7ffa19ab1d94,66324435,0,0x0,8
tick,0x7ffa19ab1d94,66340340,0,0x0,8
tick,0x7ffa19ab1d94,66355676,0,0x0,8
tick,0x7ffa19ab1d94,66371865,0,0x0,8
tick,0x7ffa19ab1d94,66387142,0,0x0,8
tick,0x7ffa19ab1d94,66403132,0,0x0,8
tick,0x7ffa19ab1d94,66419221,0,0x0,8
tick,0x7ffa19ab1d94,66434984,0,0x0,8
tick,0x7ffa19ab1d94,66450497,0,0x0,8
tick,0x7ffa19ab1d94,66466249,0,0x0,8
tick,0x7ffa19ab1d94,66481942,0,0x0,8
tick,0x7ffa19ab1d94,66497817,0,0x0,8
tick,0x7ffa19ab1d94,66513375,0,0x0,8
tick,0x7ffa19ab1d94,66529422,0,0x0,8
tick,0x7ffa19ab1d94,66544635,0,0x0,8
tick,0x7ffa19ab1d94,66559847,0,0x0,8
tick,0x7ffa19ab1d94,66575289,0,0x0,8
tick,0x7ffa19ab1d94,66590513,0,0x0,8
tick,0x7ffa19ab1d94,66606566,0,0x0,8
tick,0x7ffa19ab1d94,66622168,0,0x0,8
tick,0x7ffa19ab1d94,66637149,0,0x0,8
tick,0x7ffa19ab1d94,66651855,0,0x0,8
tick,0x7ffa19ab1d94,66666952,0,0x0,8
tick,0x7ffa19ab1d94,66682961,0,0x0,8
tick,0x7ffa19ab1d94,66698724,0,0x0,8
tick,0x7ffa19ab1d94,66713992,0,0x0,8
tick,0x7ffa19ab1d94,66729471,0,0x0,8
tick,0x7ffa19ab1d94,66744744,0,0x0,8
tick,0x7ffa19ab1d94,66759966,0,0x0,8
tick,0x7ffa19ab1d94,66775990,0,0x0,8
tick,0x7ffa19ab1d94,66791495,0,0x0,8
tick,0x7ffa19ab1d94,66807577,0,0x0,8
tick,0x7ffa19ab1d94,66822931,0,0x0,8
tick,0x7ffa19ab1d94,66837966,0,0x0,8
tick,0x7ffa19ab1d94,66854039,0,0x0,8
tick,0x7ffa19ab1d94,66869830,0,0x0,8
tick,0x7ffa19ab1d94,66885107,0,0x0,8
tick,0x7ffa19ab1d94,66900636,0,0x0,8
tick,0x7ffa19ab1d94,66916592,0,0x0,8
tick,0x7ffa19ab1d94,66932597,0,0x0,8
tick,0x7ffa19ab1d94,66947902,0,0x0,8
tick,0x7ffa19ab1d94,66964011,0,0x0,8
tick,0x7ffa19ab1d94,66979570,0,0x0,8
tick,0x7ffa19ab1d94,66994787,0,0x0,8
tick,0x7ffa19ab1d94,67010656,0,0x0,8
tick,0x7ffa19ab1d94,67026121,0,0x0,8
tick,0x7ffa19ab1d94,67041924,0,0x0,8
tick,0x7ffa19ab1d94,67057880,0,0x0,8
tick,0x7ffa19ab1d94,67073093,0,0x0,8
tick,0x7ffa19ab1d94,67089236,0,0x0,8
tick,0x7ffa19ab1d94,67104921,0,0x0,8
tick,0x7ffa19ab1d94,67120690,0,0x0,8
tick,0x7ffa19ab1d94,67136277,0,0x0,8
tick,0x7ffa19ab1d94,67151491,0,0x0,8
tick,0x7ffa19ab1d94,67166694,0,0x0,8
tick,0x7ffa19ab1d94,67182615,0,0x0,8
tick,0x7ffa19ab1d94,67198699,0,0x0,8
tick,0x7ffa19ab1d94,67214717,0,0x0,8
tick,0x7ffa19ab1d94,67230820,0,0x0,8
tick,0x7ffa19ab1d94,67246086,0,0x0,8
tick,0x7ffa19ab1d94,67261580,0,0x0,8
tick,0x7ffa19ab1d94,67276999,0,0x0,8
tick,0x7ffa19ab1d94,67292730,0,0x0,8
tick,0x7ffa19ab1d94,67308510,0,0x0,8
tick,0x7ffa19ab1d94,67323823,0,0x0,8
tick,0x7ffa19ab1d94,67339717,0,0x0,8
tick,0x7ffa19ab1d94,67355400,0,0x0,8
tick,0x7ffa19ab1d94,67370964,0,0x0,8
tick,0x7ffa19ab1d94,67386267,0,0x0,8
tick,0x7ffa19ab1d94,67401871,0,0x0,8
tick,0x7ffa19ab1d94,67417438,0,0x0,8
tick,0x7ffa19ab1d94,67433375,0,0x0,8
tick,0x7ffa19ab1d94,67449173,0,0x0,8
tick,0x7ffa19ab1d94,67464445,0,0x0,8
tick,0x7ffa19ab1d94,67480033,0,0x0,8
tick,0x7ffa19ab1d94,67495376,0,0x0,8
tick,0x7ffa19ab1d94,67511141,0,0x0,8
tick,0x7ffa19ab1d94,67527219,0,0x0,8
tick,0x7ffa19ab1d94,67542854,0,0x0,8
tick,0x7ffa19ab1d94,67558634,0,0x0,8
tick,0x7ffa19ab1d94,67573994,0,0x0,8
tick,0x7ffa19ab1d94,67588930,0,0x0,8
tick,0x7ffa19ab1d94,67605643,0,0x0,8
tick,0x7ffa19ab1d94,67620781,0,0x0,8
tick,0x7ffa19ab1d94,67635955,0,0x0,8
tick,0x7ffa19ab1d94,67651768,0,0x0,8
tick,0x7ffa19ab1d94,67667101,0,0x0,8
tick,0x7ffa19ab1d94,67682279,0,0x0,8
tick,0x7ffa19ab1d94,67697737,0,0x0,8
tick,0x7ffa19ab1d94,67713611,0,0x0,8
tick,0x7ffa19ab1d94,67728955,0,0x0,8
tick,0x7ffa19ab1d94,67744678,0,0x0,8
tick,0x7ffa19ab1d94,67759953,0,0x0,8
tick,0x7ffa19ab1d94,67775583,0,0x0,8
tick,0x7ffa19ab1d94,67791623,0,0x0,8
tick,0x7ffa19ab1d94,67807545,0,0x0,8
tick,0x7ffa19ab1d94,67822696,0,0x0,8
tick,0x7ffa19ab1d94,67838757,0,0x0,8
tick,0x7ffa19ab1d94,67854087,0,0x0,8
tick,0x7ffa19ab1d94,67869671,0,0x0,8
tick,0x7ffa19ab1d94,67885459,0,0x0,8
tick,0x7ffa19ab1d94,67901833,0,0x0,8
tick,0x7ffa19ab1d94,67917605,0,0x0,8
tick,0x7ffa19ab1d94,67933422,0,0x0,8
tick,0x7ffa19ab1d94,67948470,0,0x0,8
tick,0x7ffa19ab1d94,67963918,0,0x0,8
tick,0x7ffa19ab1d94,67979568,0,0x0,8
tick,0x7ffa19ab1d94,67995259,0,0x0,8
tick,0x7ffa19ab1d94,68011649,0,0x0,8
tick,0x7ffa19ab1d94,68027315,0,0x0,8
tick,0x7ffa19ab1d94,68042748,0,0x0,8
tick,0x7ffa19ab1d94,68058527,0,0x0,8
tick,0x7ffa19ab1d94,68074234,0,0x0,8
tick,0x7ffa19ab1d94,68089623,0,0x0,8
tick,0x7ffa19ab1d94,68105468,0,0x0,8
tick,0x7ffa19ab1d94,68120453,0,0x0,8
tick,0x7ffa19ab1d94,68135314,0,0x0,8
tick,0x7ffa19ab1d94,68151672,0,0x0,8
tick,0x7ffa19ab1d94,68167490,0,0x0,8
tick,0x7ffa19ab1d94,68183257,0,0x0,8
tick,0x7ffa19ab1d94,68198839,0,0x0,8
tick,0x7ffa19ab1d94,68214159,0,0x0,8
tick,0x7ffa19ab1d94,68229266,0,0x0,8
tick,0x7ffa19ab1d94,68244799,0,0x0,8
tick,0x7ffa19ab1d94,68260055,0,0x0,8
tick,0x7ffa19ab1d94,68275703,0,0x0,8
tick,0x7ffa19ab1d94,68290935,0,0x0,8
tick,0x7ffa19ab1d94,68306952,0,0x0,8
tick,0x7ffa19ab1d94,68323139,0,0x0,8
tick,0x7ffa19ab1d94,68339108,0,0x0,8
tick,0x7ffa19ab1d94,68354411,0,0x0,8
tick,0x7ffa19ab1d94,68370309,0,0x0,8
tick,0x7ffa19ab1d94,68385389,0,0x0,8
tick,0x7ffa19ab1d94,68401063,0,0x0,8
tick,0x7ffa19ab1d94,68416171,0,0x0,8
tick,0x7ffa19ab1d94,68431787,0,0x0,8
tick,0x7ffa19ab1d94,68447816,0,0x0,8
tick,0x7ffa19ab1d94,68463923,0,0x0,8
tick,0x7ffa19ab1d94,68479573,0,0x0,8
tick,0x7ffa19ab1d94,68495613,0,0x0,8
tick,0x7ffa19ab1d94,68511726,0,0x0,8
tick,0x7ffa19ab1d94,68527663,0,0x0,8
tick,0x7ffa19ab1d94,68543797,0,0x0,8
tick,0x7ffa19ab1d94,68559597,0,0x0,8
tick,0x7ffa19ab1d94,68574836,0,0x0,8
tick,0x7ffa19ab1d94,68590645,0,0x0,8
tick,0x7ffa19ab1d94,68606200,0,0x0,8
tick,0x7ffa19ab1d94,68621854,0,0x0,8
tick,0x7ffa19ab1d94,68637257,0,0x0,8
tick,0x7ffa19ab1d94,68652596,0,0x0,8
tick,0x7ffa19ab1d94,68668563,0,0x0,8
tick,0x7ffa19ab1d94,68684486,0,0x0,8
tick,0x7ffa19ab1d94,68700342,0,0x0,8
tick,0x7ffa19ab1d94,68715429,0,0x0,8
tick,0x7ffa19ab1d94,68730886,0,0x0,8
tick,0x7ffa19ab1d94,68746905,0,0x0,8
tick,0x7ffa19ab1d94,68763058,0,0x0,8
tick,0x7ffa19ab1d94,68778251,0,0x0,8
tick,0x7ffa19ab1d94,68793447,0,0x0,8
tick,0x7ffa19ab1d94,68809272,0,0x0,8
tick,0x7ffa19ab1d94,68824816,0,0x0,8
tick,0x7ffa19ab1d94,68840697,0,0x0,8
tick,0x7ffa19ab1d94,68856097,0,0x0,8
tick,0x7ffa19ab1d94,68871623,0,0x0,8
tick,0x7ffa19ab1d94,68887325,0,0x0,8
tick,0x7ffa19ab1d94,68902258,0,0x0,8
tick,0x7ffa19ab1d94,68917665,0,0x0,8
tick,0x7ffa19ab1d94,68932603,0,0x0,8
tick,0x7ffa19ab1d94,68948062,0,0x0,8
tick,0x7ffa19ab1d94,68963390,0,0x0,8
tick,0x7ffa19ab1d94,68978754,0,0x0,8
tick,0x7ffa19ab1d94,68994877,0,0x0,8
tick,0x7ffa19ab1d94,69011488,0,0x0,8
tick,0x7ffa19ab1d94,69027506,0,0x0,8
tick,0x7ffa19ab1d94,69042808,0,0x0,8
tick,0x7ffa19ab1d94,69058418,0,0x0,8
tick,0x7ffa19ab1d94,69073918,0,0x0,8
tick,0x7ffa19ab1d94,69089146,0,0x0,8
tick,0x7ffa19ab1d94,69105140,0,0x0,8
tick,0x7ffa19ab1d94,69121292,0,0x0,8
tick,0x7ffa19ab1d94,69136370,0,0x0,8
tick,0x7ffa19ab1d94,69151749,0,0x0,8
tick,0x7ffa19ab1d94,69167770,0,0x0,8
tick,0x7ffa19ab1d94,69183800,0,0x0,8
tick,0x7ffa19ab1d94,69199116,0,0x0,8
tick,0x7ffa19ab1d94,69214777,0,0x0,8
tick,0x7ffa19ab1d94,69230002,0,0x0,8
tick,0x7ffa19ab1d94,69245446,0,0x0,8
tick,0x7ffa19ab1d94,69261958,0,0x0,8
tick,0x7ffa19ab1d94,69277194,0,0x0,8
tick,0x7ffa19ab1d94,69292600,0,0x0,8
tick,0x7ffa19ab1d94,69307927,0,0x0,8
tick,0x7ffa19ab1d94,69323561,0,0x0,8
tick,0x7ffa19ab1d94,69339129,0,0x0,8
tick,0x7ffa19ab1d94,69355291,0,0x0,8
tick,0x7ffa19ab1d94,69370773,0,0x0,8
tick,0x7ffa19ab1d94,69385655,0,0x0,8
tick,0x7ffa19ab1d94,69400919,0,0x0,8
tick,0x7ffa19ab1d94,69416268,0,0x0,8
tick,0x7ffa19ab1d94,69431573,0,0x0,8
tick,0x7ffa19ab1d94,69447462,0,0x0,8
tick,0x7ffa19ab1d94,69463510,0,0x0,8
tick,0x7ffa19ab1d94,69478787,0,0x0,8
tick,0x7ffa19ab1d94,69493876,0,0x0,8
tick,0x7ffa19ab1d94,69510280,0,0x0,8
tick,0x7ffa19ab1d94,69525256,0,0x0,8
tick,0x7ffa19ab1d94,69541310,0,0x0,8
tick,0x7ffa19ab1d94,69556431,0,0x0,8
tick,0x7ffa19ab1d94,69571728,0,0x0,8
tick,0x7ffa19ab1d94,69587741,0,0x0,8
tick,0x7ffa19ab1d94,69603629,0,0x0,8
tick,0x7ffa19ab1d94,69619007,0,0x0,8
tick,0x7ffa19ab1d94,69634831,0,0x0,8
tick,0x7ffa19ab1d94,69650102,0,0x0,8
tick,0x7ffa19ab1d94,69665581,0,0x0,8
tick,0x7ffa19ab1d94,69681545,0,0x0,8
tick,0x7ffa19ab1d94,69697121,0,0x0,8
tick,0x7ffa19ab1d94,69712886,0,0x0,8
tick,0x7ffa19ab1d94,69728658,0,0x0,8
tick,0x7ffa19ab1d94,69743974,0,0x0,8
tick,0x7ffa19ab1d94,69759689,0,0x0,8
tick,0x7ffa19ab1d94,69775507,0,0x0,8
tick,0x7ffa19ab1d94,69791904,0,0x0,8
tick,0x7ffa19ab1d94,69807312,0,0x0,8
tick,0x7ffa19ab1d94,69823342,0,0x0,8
tick,0x7ffa19ab1d94,69838995,0,0x0,8
tick,0x7ffa19ab1d94,69854192,0,0x0,8
tick,0x7ffa19ab1d94,69870042,0,0x0,8
tick,0x7ffa19ab1d94,69886104,0,0x0,8
tick,0x7ffa19ab1d94,69901534,0,0x0,8
tick,0x7ffa19ab1d94,69917622,0,0x0,8
tick,0x7ffa19ab1d94,69932941,0,0x0,8
tick,0x7ffa19ab1d94,69949051,0,0x0,8
tick,0x7ffa19ab1d94,69964968,0,0x0,8
tick,0x7ffa19ab1d94,69980284,0,0x0,8
tick,0x7ffa19ab1d94,69996161,0,0x0,8
tick,0x7ffa19ab1d94,70011941,0,0x0,8
tick,0x7ffa19ab1d94,70027748,0,0x0,8
tick,0x7ffa19ab1d94,70043875,0,0x0,8
tick,0x7ffa19ab1d94,70059434,0,0x0,8
tick,0x7ffa19ab1d94,70075290,0,0x0,8
tick,0x7ffa19ab1d94,70091768,0,0x0,8
tick,0x7ffa19ab1d94,70107536,0,0x0,8
tick,0x7ffa19ab1d94,70123542,0,0x0,8
tick,0x7ffa19ab1d94,70138669,0,0x0,8
tick,0x7ffa19ab1d94,70154651,0,0x0,8
tick,0x7ffa19ab1d94,70170172,0,0x0,8
tick,0x7ffa19ab1d94,70186053,0,0x0,8
tick,0x7ffa19ab1d94,70201567,0,0x0,8
tick,0x7ffa19ab1d94,70216979,0,0x0,8
tick,0x7ffa19ab1d94,70232247,0,0x0,8
tick,0x7ffa19ab1d94,70248391,0,0x0,8
tick,0x7ffa19ab1d94,70264404,0,0x0,8
tick,0x7ffa19ab1d94,70280080,0,0x0,8
tick,0x7ffa19ab1d94,70295634,0,0x0,8
tick,0x7ffa19ab1d94,70311591,0,0x0,8
tick,0x7ffa19ab1d94,70327389,0,0x0,8
tick,0x7ffa19ab1d94,70342572,0,0x0,8
tick,0x7ffa19ab1d94,70357944,0,0x0,8
tick,0x7ffa19ab1d94,70373729,0,0x0,8
tick,0x7ffa19ab1d94,70389173,0,0x0,8
tick,0x7ffa19ab1d94,70404768,0,0x0,8
tick,0x7ffa19ab1d94,70420413,0,0x0,8
tick,0x7ffa19ab1d94,70435822,0,0x0,8
tick,0x7ffa19ab1d94,70451667,0,0x0,8
tick,0x7ffa19ab1d94,70467246,0,0x0,8
tick,0x7ffa19ab1d94,70482633,0,0x0,8
tick,0x7ffa19ab1d94,70498673,0,0x0,8
tick,0x7ffa19ab1d94,70514880,0,0x0,8
tick,0x7ffa19ab1d94,70530293,0,0x0,8
tick,0x7ffa19ab1d94,70545526,0,0x0,8
tick,0x7ffa19ab1d94,70561769,0,0x0,8
tick,0x7ffa19ab1d94,70577075,0,0x0,8
tick,0x7ffa19ab1d94,70593118,0,0x0,8
tick,0x7ffa19ab1d94,70607784,0,0x0,8
tick,0x7ffa19ab1d94,70622985,0,0x0,8
tick,0x7ffa19ab1d94,70639201,0,0x0,8
tick,0x7ffa19ab1d94,70654914,0,0x0,8
tick,0x7ffa19ab1d94,70670017,0,0x0,8
tick,0x7ffa19ab1d94,70685585,0,0x0,8
tick,0x7ffa19ab1d94,70703045,0,0x0,8
tick,0x7ffa19ab1d94,70716890,0,0x0,8
tick,0x7ffa19ab1d94,70732861,0,0x0,8
tick,0x7ffa19ab1d94,70748858,0,0x0,8
tick,0x7ffa19ab1d94,70765115,0,0x0,8
tick,0x7ffa19ab1d94,70780132,0,0x0,8
tick,0x7ffa19ab1d94,70795325,0,0x0,8
tick,0x7ffa19ab1d94,70811595,0,0x0,8
tick,0x7ffa19ab1d94,70828569,0,0x0,8
tick,0x7ffa19ab1d94,70842808,0,0x0,8
tick,0x7ffa19ab1d94,70857680,0,0x0,8
tick,0x7ffa19ab1d94,70873569,0,0x0,8
tick,0x7ffa19ab1d94,70889544,0,0x0,8
tick,0x7ffa19ab1d94,70905470,0,0x0,8
tick,0x7ffa19ab1d94,70921575,0,0x0,8
tick,0x7ffa19ab1d94,70937670,0,0x0,8
tick,0x7ffa19ab1d94,70953121,0,0x0,8
tick,0x7ffa19ab1d94,70968770,0,0x0,8
tick,0x7ffa19ab1d94,70983777,0,0x0,8
tick,0x7ffa19ab1d94,70999874,0,0x0,8
tick,0x7ffa19ab1d94,71015121,0,0x0,8
tick,0x7ffa19ab1d94,71031813,0,0x0,8
tick,0x7ffa19ab1d94,71047171,0,0x0,8
tick,0x7ffa19ab1d94,71063228,0,0x0,8
tick,0x7ffa19ab1d94,71078912,0,0x0,8
tick,0x7ffa19ab1d94,71094392,0,0x0,8
tick,0x7ffa19ab1d94,71109778,0,0x0,8
tick,0x7ffa19ab1d94,71125693,0,0x0,8
tick,0x7ffa19ab1d94,71141830,0,0x0,8
tick,0x7ffa19ab1d94,71157168,0,0x0,8
tick,0x7ffa19ab1d94,71172966,0,0x0,8
tick,0x7ffa19ab1d94,71188088,0,0x0,8
tick,0x7ffa19ab1d94,71203812,0,0x0,8
tick,0x7ffa19ab1d94,71219691,0,0x0,8
tick,0x7ffa19ab1d94,71234945,0,0x0,8
tick,0x7ffa19ab1d94,71251419,0,0x0,8
tick,0x7ffa19ab1d94,71267451,0,0x0,8
tick,0x7ffa19ab1d94,71282665,0,0x0,8
tick,0x7ffa19ab1d94,71298566,0,0x0,8
tick,0x7ffa19ab1d94,71313725,0,0x0,8
tick,0x7ffa19ab1d94,71329819,0,0x0,8
tick,0x7ffa19ab1d94,71345565,0,0x0,8
tick,0x7ffa19ab1d94,71361422,0,0x0,8
tick,0x7ffa19ab1d94,71376722,0,0x0,8
tick,0x7ffa19ab1d94,71392761,0,0x0,8
tick,0x7ffa19ab1d94,71408154,0,0x0,8
tick,0x7ffa19ab1d94,71423857,0,0x0,8
tick,0x7ffa19ab1d94,71439579,0,0x0,8
tick,0x7ffa19ab1d94,71455613,0,0x0,8
tick,0x7ffa19ab1d94,71471628,0,0x0,8
tick,0x7ffa19ab1d94,71486742,0,0x0,8
tick,0x7ffa19ab1d94,71502997,0,0x0,8
tick,0x7ffa19ab1d94,71519010,0,0x0,8
tick,0x7ffa19ab1d94,71535085,0,0x0,8
tick,0x7ffa19ab1d94,71550932,0,0x0,8
tick,0x7ffa19ab1d94,71566018,0,0x0,8
tick,0x7ffa19ab1d94,71581762,0,0x0,8
tick,0x7ffa19ab1d94,71598203,0,0x0,8
tick,0x7ffa19ab1d94,71613111,0,0x0,8
tick,0x7ffa19ab1d94,71629169,0,0x0,8
tick,0x7ffa19ab1d94,71645266,0,0x0,8
tick,0x7ffa19ab1d94,71660771,0,0x0,8
tick,0x7ffa19ab1d94,71676105,0,0x0,8
tick,0x7ffa19ab1d94,71691721,0,0x0,8
tick,0x7ffa19ab1d94,71707076,0,0x0,8
tick,0x7ffa19ab1d94,71722951,0,0x0,8
tick,0x7ffa19ab1d94,71738595,0,0x0,8
tick,0x7ffa19ab1d94,71753887,0,0x0,8
tick,0x7ffa19ab1d94,71769777,0,0x0,8
tick,0x7ffa19ab1d94,71785392,0,0x0,8
tick,0x7ffa19ab1d94,71801303,0,0x0,8
tick,0x7ffa19ab1d94,71816611,0,0x0,8
tick,0x7ffa19ab1d94,71831714,0,0x0,8
tick,0x7ffa19ab1d94,71847110,0,0x0,8
tick,0x7ffa19ab1d94,71862710,0,0x0,8
tick,0x7ffa19ab1d94,71878293,0,0x0,8
tick,0x7ffa19ab1d94,71893551,0,0x0,8
tick,0x7ffa19ab1d94,71908833,0,0x0,8
tick,0x7ffa19ab1d94,71924778,0,0x0,8
tick,0x7ffa19ab1d94,71940552,0,0x0,8
tick,0x7ffa19ab1d94,71955572,0,0x0,8
tick,0x7ffa19ab1d94,71971567,0,0x0,8
tick,0x7ffa19ab1d94,71986935,0,0x0,8
tick,0x7ffa19ab1d94,72002663,0,0x0,8
tick,0x7ffa19ab1d94,72017912,0,0x0,8
tick,0x7ffa19ab1d94,72033486,0,0x0,8
tick,0x7ffa19ab1d94,72048998,0,0x0,8
tick,0x7ffa19ab1d94,72064690,0,0x0,8
tick,0x7ffa19ab1d94,72080694,0,0x0,8
tick,0x7ffa19ab1d94,72096796,0,0x0,8
tick,0x7ffa19ab1d94,72112257,0,0x0,8
tick,0x7ffa19ab1d94,72127571,0,0x0,8
tick,0x7ffa19ab1d94,72142836,0,0x0,8
tick,0x7ffa19ab1d94,72158043,0,0x0,8
tick,0x7ffa19ab1d94,72173624,0,0x0,8
tick,0x7ffa19ab1d94,72188796,0,0x0,8
tick,0x7ffa19ab1d94,72204618,0,0x0,8
tick,0x7ffa19ab1d94,72220877,0,0x0,8
tick,0x7ffa19ab1d94,72236081,0,0x0,8
tick,0x7ffa19ab1d94,72251591,0,0x0,8
tick,0x7ffa19ab1d94,72266673,0,0x0,8
tick,0x7ffa19ab1d94,72281802,0,0x0,8
tick,0x7ffa19ab1d94,72297300,0,0x0,8
tick,0x7ffa19ab1d94,72313406,0,0x0,8
tick,0x7ffa19ab1d94,72328767,0,0x0,8
tick,0x7ffa19ab1d94,72344697,0,0x0,8
tick,0x7ffa19ab1d94,72360537,0,0x0,8
tick,0x7ffa19ab1d94,72375845,0,0x0,8
tick,0x7ffa19ab1d94,72391633,0,0x0,8
tick,0x7ffa19ab1d94,72407018,0,0x0,8
tick,0x7ffa19ab1d94,72422728,0,0x0,8
tick,0x7ffa19ab1d94,72438054,0,0x0,8
tick,0x7ffa19ab1d94,72453916,0,0x0,8
tick,0x7ffa19ab1d94,72469147,0,0x0,8
tick,0x7ffa19ab1d94,72485205,0,0x0,8
tick,0x7ffa19ab1d94,72500412,0,0x0,8
tick,0x7ffa19ab1d94,72515659,0,0x0,8
tick,0x7ffa19ab1d94,72531566,0,0x0,8
tick,0x7ffa19ab1d94,72546414,0,0x0,8
tick,0x7ffa19ab1d94,72561810,0,0x0,8
tick,0x7ffa19ab1d94,72577963,0,0x0,8
tick,0x7ffa19ab1d94,72593761,0,0x0,8
tick,0x7ffa19ab1d94,72609624,0,0x0,8
tick,0x7ffa19ab1d94,72625008,0,0x0,8
tick,0x7ffa19ab1d94,72641106,0,0x0,8
tick,0x7ffa19ab1d94,72656778,0,0x0,8
tick,0x7ffa19ab1d94,72674431,0,0x0,8
tick,0x7ffa19ab1d94,72688653,0,0x0,8
tick,0x7ffa19ab1d94,72704824,0,0x0,8
tick,0x7ffa19ab1d94,72720056,0,0x0,8
tick,0x7ffa19ab1d94,72734854,0,0x0,8
tick,0x7ffa19ab1d94,72750729,0,0x0,8
tick,0x7ffa19ab1d94,72766297,0,0x0,8
tick,0x7ffa19ab1d94,72781520,0,0x0,8
tick,0x7ffa19ab1d94,72797102,0,0x0,8
tick,0x7ffa19ab1d94,72812862,0,0x0,8
tick,0x7ffa19ab1d94,72828158,0,0x0,8
tick,0x7ffa19ab1d94,72843311,0,0x0,8
tick,0x7ffa19ab1d94,72859139,0,0x0,8
tick,0x7ffa19ab1d94,72874487,0,0x0,8
tick,0x7ffa19ab1d94,72889895,0,0x0,8
tick,0x7ffa19ab1d94,72904927,0,0x0,8
tick,0x7ffa19ab1d94,72921627,0,0x0,8
tick,0x7ffa19ab1d94,72937633,0,0x0,8
tick,0x7ffa19ab1d94,72953538,0,0x0,8
tick,0x7ffa19ab1d94,72968819,0,0x0,8
tick,0x7ffa19ab1d94,72984768,0,0x0,8
tick,0x7ffa19ab1d94,73000599,0,0x0,8
tick,0x7ffa19ab1d94,73016079,0,0x0,8
tick,0x7ffa19ab1d94,73031588,0,0x0,8
tick,0x7ffa19ab1d94,73046979,0,0x0,8
tick,0x7ffa19ab1d94,73062244,0,0x0,8
tick,0x7ffa19ab1d94,73078475,0,0x0,8
tick,0x7ffa19ab1d94,73093833,0,0x0,8
tick,0x7ffa19ab1d94,73109401,0,0x0,8
tick,0x7ffa19ab1d94,73125412,0,0x0,8
tick,0x7ffa19ab1d94,73141908,0,0x0,8
tick,0x7ffa19ab1d94,73157615,0,0x0,8
tick,0x7ffa19ab1d94,73172986,0,0x0,8
tick,0x7ffa19ab1d94,73188523,0,0x0,8
tick,0x7ffa19ab1d94,73203945,0,0x0,8
tick,0x7ffa19ab1d94,73219211,0,0x0,8
tick,0x7ffa19ab1d94,73234423,0,0x0,8
tick,0x7ffa19ab1d94,73249692,0,0x0,8
tick,0x7ffa19ab1d94,73265770,0,0x0,8
tick,0x7ffa19ab1d94,73281895,0,0x0,8
tick,0x7ffa19ab1d94,73297260,0,0x0,8
tick,0x7ffa19ab1d94,73312426,0,0x0,8
tick,0x7ffa19ab1d94,73328546,0,0x0,8
tick,0x7ffa19ab1d94,73344339,0,0x0,8
tick,0x7ffa19ab1d94,73360120,0,0x0,8
tick,0x7ffa19ab1d94,73376044,0,0x0,8
tick,0x7ffa19ab1d94,73391693,0,0x0,8
tick,0x7ffa19ab1d94,73406894,0,0x0,8
tick,0x7ffa19ab1d94,73422684,0,0x0,8
tick,0x7ffa19ab1d94,73438201,0,0x0,8
tick,0x7ffa19ab1d94,73453960,0,0x0,8
tick,0x7ffa19ab1d94,73469379,0,0x0,8
tick,0x7ffa19ab1d94,73485325,0,0x0,8
tick,0x7ffa19ab1d94,73500943,0,0x0,8
tick,0x7ffa19ab1d94,73516954,0,0x0,8
tick,0x7ffa19ab1d94,73532947,0,0x0,8
tick,0x7ffa19ab1d94,73549050,0,0x0,8
tick,0x7ffa19ab1d94,73564314,0,0x0,8
tick,0x7ffa19ab1d94,73580163,0,0x0,8
tick,0x7ffa19ab1d94,73595566,0,0x0,8
tick,0x7ffa19ab1d94,73612020,0,0x0,8
tick,0x7ffa19ab1d94,73626921,0,0x0,8
tick,0x7ffa19ab1d94,73642372,0,0x0,8
tick,0x7ffa19ab1d94,73657930,0,0x0,8
tick,0x7ffa19ab1d94,73674115,0,0x0,8
tick,0x7ffa19ab1d94,73689835,0,0x0,8
tick,0x7ffa19ab1d94,73705797,0,0x0,8
tick,0x7ffa19ab1d94,73721978,0,0x0,8
tick,0x7ffa19ab1d94,73737785,0,0x0,8
tick,0x7ffa19ab1d94,73753787,0,0x0,8
tick,0x7ffa19ab1d94,73769134,0,0x0,8
tick,0x7ffa19ab1d94,73785188,0,0x0,8
tick,0x7ffa19ab1d94,73800724,0,0x0,8
tick,0x7ffa19ab1d94,73817343,0,0x0,8
tick,0x7ffa19ab1d94,73832683,0,0x0,8
tick,0x7ffa19ab1d94,73847773,0,0x0,8
tick,0x7ffa19ab1d94,73863906,0,0x0,8
tick,0x7ffa19ab1d94,73879028,0,0x0,8
tick,0x7ffa19ab1d94,73894405,0,0x0,8
tick,0x7ffa19ab1d94,73909939,0,0x0,8
tick,0x7ffa19ab1d94,73925206,0,0x0,8
tick,0x7ffa19ab1d94,73941488,0,0x0,8
tick,0x7ffa19ab1d94,73956668,0,0x0,8
tick,0x7ffa19ab1d94,73971946,0,0x0,8
tick,0x7ffa19ab1d94,73988032,0,0x0,8
tick,0x7ffa19ab1d94,74003179,0,0x0,8
tick,0x7ffa19ab1d94,74019405,0,0x0,8
tick,0x7ffa19ab1d94,74034608,0,0x0,8
tick,0x7ffa19ab1d94,74049847,0,0x0,8
tick,0x7ffa19ab1d94,74065457,0,0x0,8
tick,0x7ffa19ab1d94,74081788,0,0x0,8
tick,0x7ffa19ab1d94,74096856,0,0x0,8
tick,0x7ffa19ab1d94,74112693,0,0x0,8
tick,0x7ffa19ab1d94,74128123,0,0x0,8
tick,0x7ffa19ab1d94,74143901,0,0x0,8
tick,0x7ffa19ab1d94,74159144,0,0x0,8
tick,0x7ffa19ab1d94,74174659,0,0x0,8
tick,0x7ffa19ab1d94,74190363,0,0x0,8
tick,0x7ffa19ab1d94,74205968,0,0x0,8
tick,0x7ffa19ab1d94,74221894,0,0x0,8
tick,0x7ffa19ab1d94,74237629,0,0x0,8
tick,0x7ffa19ab1d94,74252849,0,0x0,8
tick,0x7ffa19ab1d94,74268082,0,0x0,8
tick,0x7ffa19ab1d94,74283086,0,0x0,8
tick,0x7ffa19ab1d94,74298901,0,0x0,8
tick,0x7ffa19ab1d94,74316134,0,0x0,8
tick,0x7ffa19ab1d94,74329822,0,0x0,8
tick,0x7ffa19ab1d94,74345399,0,0x0,8
tick,0x7ffa19ab1d94,74361687,0,0x0,8
tick,0x7ffa19ab1d94,74377264,0,0x0,8
tick,0x7ffa19ab1d94,74392876,0,0x0,8
tick,0x7ffa19ab1d94,74408357,0,0x0,8
tick,0x7ffa19ab1d94,74424293,0,0x0,8
tick,0x7ffa19ab1d94,74439712,0,0x0,8
tick,0x7ffa19ab1d94,74455163,0,0x0,8
tick,0x7ffa19ab1d94,74470794,0,0x0,8
tick,0x7ffa19ab1d94,74485979,0,0x0,8
tick,0x7ffa19ab1d94,74501474,0,0x0,8
tick,0x7ffa19ab1d94,74517683,0,0x0,8
tick,0x7ffa19ab1d94,74533564,0,0x0,8
tick,0x7ffa19ab1d94,74548831,0,0x0,8
tick,0x7ffa19ab1d94,74564510,0,0x0,8
tick,0x7ffa19ab1d94,74580284,0,0x0,8
tick,0x7ffa19ab1d94,74596052,0,0x0,8
tick,0x7ffa19ab1d94,74611922,0,0x0,8
tick,0x7ffa19ab1d94,74627406,0,0x0,8
tick,0x7ffa19ab1d94,74643985,0,0x0,8
tick,0x7ffa19ab1d94,74658275,0,0x0,8
tick,0x7ffa19ab1d94,74673805,0,0x0,8
tick,0x7ffa19ab1d94,74689732,0,0x0,8
tick,0x7ffa19ab1d94,74705456,0,0x0,8
tick,0x7ffa19ab1d94,74721617,0,0x0,8
tick,0x7ffa19ab1d94,74738606,0,0x0,8
tick,0x7ffa19ab1d94,74753010,0,0x0,8
tick,0x7ffa19ab1d94,74768335,0,0x0,8
tick,0x7ffa19ab1d94,74783979,0,0x0,8
tick,0x7ffa19ab1d94,74800167,0,0x0,8
tick,0x7ffa19ab1d94,74816616,0,0x0,8
tick,0x7ffa19ab1d94,74832071,0,0x0,8
tick,0x7ffa19ab1d94,74848092,0,0x0,8
tick,0x7ffa19ab1d94,74864663,0,0x0,8
tick,0x7ffa19ab1d94,74878325,0,0x0,8
tick,0x7ffa19ab1d94,74893741,0,0x0,8
tick,0x7ffa19ab1d94,74910364,0,0x0,8
tick,0x7ffa19ab1d94,74925833,0,0x0,8
tick,0x7ffa19ab1d94,74941737,0,0x0,8
tick,0x7ffa19ab1d94,74956905,0,0x0,8
tick,0x7ffa19ab1d94,74972522,0,0x0,8
tick,0x7ffa19ab1d94,74988656,0,0x0,8
tick,0x7ffa19ab1d94,75004536,0,0x0,8
tick,0x7ffa19ab1d94,75020448,0,0x0,8
tick,0x7ffa19ab1d94,75036055,0,0x0,8
tick,0x7ffa19ab1d94,75051778,0,0x0,8
tick,0x7ffa19ab1d94,75067799,0,0x0,8
tick,0x7ffa19ab1d94,75083459,0,0x0,8
tick,0x7ffa19ab1d94,75099655,0,0x0,8
tick,0x7ffa19ab1d94,75115048,0,0x0,8
tick,0x7ffa19ab1d94,75130566,0,0x0,8
tick,0x7ffa19ab1d94,75146617,0,0x0,8
tick,0x7ffa19ab1d94,75162031,0,0x0,8
tick,0x7ffa19ab1d94,75177312,0,0x0,8
tick,0x7ffa19ab1d94,75192674,0,0x0,8
tick,0x7ffa19ab1d94,75208382,0,0x0,8
tick,0x7ffa19ab1d94,75223909,0,0x0,8
tick,0x7ffa19ab1d94,75239111,0,0x0,8
tick,0x7ffa19ab1d94,75255025,0,0x0,8
tick,0x7ffa19ab1d94,75271563,0,0x0,8
tick,0x7ffa19ab1d94,75287476,0,0x0,8
tick,0x7ffa19ab1d94,75303107,0,0x0,8
tick,0x7ffa19ab1d94,75318212,0,0x0,8
tick,0x7ffa19ab1d94,75333786,0,0x0,8
tick,0x7ffa19ab1d94,75349014,0,0x0,8
tick,0x7ffa19ab1d94,75364943,0,0x0,8
tick,0x7ffa19ab1d94,75380280,0,0x0,8
tick,0x7ffa19ab1d94,75395803,0,0x0,8
tick,0x7ffa19ab1d94,75411788,0,0x0,8
tick,0x7ffa19ab1d94,75427076,0,0x0,8
tick,0x7ffa19ab1d94,75442834,0,0x0,8
tick,0x7ffa19ab1d94,75458164,0,0x0,8
tick,0x7ffa19ab1d94,75473450,0,0x0,8
tick,0x7ffa19ab1d94,75489304,0,0x0,8
tick,0x7ffa19ab1d94,75505102,0,0x0,8
tick,0x7ffa19ab1d94,75521706,0,0x0,8
tick,0x7ffa19ab1d94,75536478,0,0x0,8
tick,0x7ffa19ab1d94,75551765,0,0x0,8
tick,0x7ffa19ab1d94,75567239,0,0x0,8
tick,0x7ffa19ab1d94,75583027,0,0x0,8
tick,0x7ffa19ab1d94,75598374,0,0x0,8
tick,0x7ffa19ab1d94,75613935,0,0x0,8
tick,0x7ffa19ab1d94,75629364,0,0x0,8
tick,0x7ffa19ab1d94,75645219,0,0x0,8
tick,0x7ffa19ab1d94,75660799,0,0x0,8
tick,0x7ffa19ab1d94,75676252,0,0x0,8
tick,0x7ffa19ab1d94,75691458,0,0x0,8
tick,0x7ffa19ab1d94,75707594,0,0x0,8
tick,0x7ffa19ab1d94,75724406,0,0x0,8
tick,0x7ffa19ab1d94,75739739,0,0x0,8
tick,0x7ffa19ab1d94,75755096,0,0x0,8
tick,0x7ffa19ab1d94,75770572,0,0x0,8
tick,0x7ffa19ab1d94,75786266,0,0x0,8
tick,0x7ffa19ab1d94,75801828,0,0x0,8
tick,0x7ffa19ab1d94,75817633,0,0x0,8
tick,0x7ffa19ab1d94,75834113,0,0x0,8
tick,0x7ffa19ab1d94,75849584,0,0x0,8
tick,0x7ffa19ab1d94,75865091,0,0x0,8
tick,0x7ffa19ab1d94,75880962,0,0x0,8
tick,0x7ffa19ab1d94,75895830,0,0x0,8
tick,0x7ffa19ab1d94,75911411,0,0x0,8
tick,0x7ffa19ab1d94,75927295,0,0x0,8
tick,0x7ffa19ab1d94,75943332,0,0x0,8
tick,0x7ffa19ab1d94,75958970,0,0x0,8
tick,0x7ffa19ab1d94,75974591,0,0x0,8
tick,0x7ffa19ab1d94,75990865,0,0x0,8
tick,0x7ffa19ab1d94,76006023,0,0x0,8
tick,0x7ffa19ab1d94,76021358,0,0x0,8
tick,0x7ffa19ab1d94,76036378,0,0x0,8
tick,0x7ffa19ab1d94,76051720,0,0x0,8
tick,0x7ffa19ab1d94,76067644,0,0x0,8
tick,0x7ffa19ab1d94,76083340,0,0x0,8
tick,0x7ffa19ab1d94,76099019,0,0x0,8
tick,0x7ffa19ab1d94,76114539,0,0x0,8
tick,0x7ffa19ab1d94,76128680,0,0x0,8
tick,0x7ffa19ab1d94,76144220,0,0x0,8
tick,0x7ffa19ab1d94,76160118,0,0x0,8
tick,0x7ffa19ab1d94,76175887,0,0x0,8
tick,0x7ffa19ab1d94,76192030,0,0x0,8
tick,0x7ffa19ab1d94,76207462,0,0x0,8
tick,0x7ffa19ab1d94,76222836,0,0x0,8
tick,0x7ffa19ab1d94,76238687,0,0x0,8
tick,0x7ffa19ab1d94,76254622,0,0x0,8
tick,0x7ffa19ab1d94,76271101,0,0x0,8
tick,0x7ffa19ab1d94,76285680,0,0x0,8
tick,0x7ffa19ab1d94,76301535,0,0x0,8
tick,0x7ffa19ab1d94,76317492,0,0x0,8
tick,0x7ffa19ab1d94,76332804,0,0x0,8
tick,0x7ffa19ab1d94,76348146,0,0x0,8
tick,0x7ffa19ab1d94,76364219,0,0x0,8
tick,0x7ffa19ab1d94,76379455,0,0x0,8
tick,0x7ffa19ab1d94,76394670,0,0x0,8
tick,0x7ffa19ab1d94,76409982,0,0x0,8
tick,0x7ffa19ab1d94,76425543,0,0x0,8
tick,0x7ffa19ab1d94,76441449,0,0x0,8
tick,0x7ffa19ab1d94,76457435,0,0x0,8
tick,0x7ffa19ab1d94,76472863,0,0x0,8
tick,0x7ffa19ab1d94,76488792,0,0x0,8
tick,0x7ffa19ab1d94,76504685,0,0x0,8
tick,0x7ffa19ab1d94,76520500,0,0x0,8
tick,0x7ffa19ab1d94,76536407,0,0x0,8
tick,0x7ffa19ab1d94,76552346,0,0x0,8
tick,0x7ffa19ab1d94,76567338,0,0x0,8
tick,0x7ffa19ab1d94,76583137,0,0x0,8
tick,0x7ffa19ab1d94,76598931,0,0x0,8
tick,0x7ffa19ab1d94,76615139,0,0x0,8
tick,0x7ffa19ab1d94,76630863,0,0x0,8
tick,0x7ffa19ab1d94,76647202,0,0x0,8
tick,0x7ffa19ab1d94,76661372,0,0x0,8
tick,0x7ffa19ab1d94,76677806,0,0x0,8
tick,0x7ffa19ab1d94,76693197,0,0x0,8
tick,0x7ffa19ab1d94,76709334,0,0x0,8
tick,0x7ffa19ab1d94,76724889,0,0x0,8
tick,0x7ffa19ab1d94,76740353,0,0x0,8
tick,0x7ffa19ab1d94,76755979,0,0x0,8
tick,0x7ffa19ab1d94,76771049,0,0x0,8
tick,0x7ffa19ab1d94,76786652,0,0x0,8
tick,0x7ffa19ab1d94,76801796,0,0x0,8
tick,0x7ffa19ab1d94,76817662,0,0x0,8
tick,0x7ffa19ab1d94,76835785,0,0x0,8
tick,0x7ffa19ab1d94,76849456,0,0x0,8
tick,0x7ffa19ab1d94,76864603,0,0x0,8
tick,0x7ffa19ab1d94,76880773,0,0x0,8
tick,0x7ffa19ab1d94,76896143,0,0x0,8
tick,0x7ffa19ab1d94,76911760,0,0x0,8
tick,0x7ffa19ab1d94,76926832,0,0x0,8
tick,0x7ffa19ab1d94,76942995,0,0x0,8
tick,0x7ffa19ab1d94,76958876,0,0x0,8
tick,0x7ffa19ab1d94,76974821,0,0x0,8
tick,0x7ffa19ab1d94,76990739,0,0x0,8
tick,0x7ffa19ab1d94,77006714,0,0x0,8
tick,0x7ffa19ab1d94,77022850,0,0x0,8
tick,0x7ffa19ab1d94,77037871,0,0x0,8
tick,0x7ffa19ab1d94,77053706,0,0x0,8
tick,0x7ffa19ab1d94,77069406,0,0x0,8
tick,0x7ffa19ab1d94,77084851,0,0x0,8
tick,0x7ffa19ab1d94,77100577,0,0x0,8
tick,0x7ffa19ab1d94,77115386,0,0x0,8
tick,0x7ffa19ab1d94,77131877,0,0x0,8
tick,0x7ffa19ab1d94,77147629,0,0x0,8
tick,0x7ffa19ab1d94,77163484,0,0x0,8
tick,0x7ffa19ab1d94,77181291,0,0x0,8
tick,0x7ffa19ab1d94,77194844,0,0x0,8
tick,0x7ffa19ab1d94,77210284,0,0x0,8
tick,0x7ffa19ab1d94,77226045,0,0x0,8
tick,0x7ffa19ab1d94,77247828,0,0x0,8
tick,0x7ffa19ab1d94,77256626,0,0x0,8
tick,0x7ffa19ab1d94,77273247,0,0x0,8
tick,0x7ffa19ab1d94,77290757,0,0x0,8
tick,0x7ffa19ab1d94,77304938,0,0x0,8
tick,0x7ffa19ab1d94,77319846,0,0x0,8
tick,0x7ffa19ab1d94,77336303,0,0x0,8
tick,0x7ffa19ab1d94,77351484,0,0x0,8
tick,0x7ffa19ab1d94,77366258,0,0x0,8
tick,0x7ffa19ab1d94,77381906,0,0x0,8
tick,0x7ffa19ab1d94,77396631,0,0x0,8
tick,0x7ffa19ab1d94,77414136,0,0x0,8
tick,0x7ffa19ab1d94,77428004,0,0x0,8
tick,0x7ffa19ab1d94,77443810,0,0x0,8
tick,0x7ffa19ab1d94,77459050,0,0x0,8
tick,0x7ffa19ab1d94,77474887,0,0x0,8
tick,0x7ffa19ab1d94,77490689,0,0x0,8
tick,0x7ffa19ab1d94,77506215,0,0x0,8
tick,0x7ffa19ab1d94,77521515,0,0x0,8
tick,0x7ffa19ab1d94,77537251,0,0x0,8
tick,0x7ffa19ab1d94,77554013,0,0x0,8
tick,0x7ffa19ab1d94,77568170,0,0x0,8
tick,0x7ffa19ab1d94,77583828,0,0x0,8
tick,0x7ffa19ab1d94,77598982,0,0x0,8
tick,0x7ffa19ab1d94,77614354,0,0x0,8
tick,0x7ffa19ab1d94,77630839,0,0x0,8
tick,0x7ffa19ab1d94,77647634,0,0x0,8
tick,0x7ffa19ab1d94,77663799,0,0x0,8
tick,0x7ffa19ab1d94,77677607,0,0x0,8
tick,0x7ffa19ab1d94,77693042,0,0x0,8
tick,0x7ffa19ab1d94,77708483,0,0x0,8
tick,0x7ffa19ab1d94,77724329,0,0x0,8
tick,0x7ffa19ab1d94,77739516,0,0x0,8
tick,0x7ffa19ab1d94,77755062,0,0x0,8
tick,0x7ffa19ab1d94,77770752,0,0x0,8
tick,0x7ffa19ab1d94,77786605,0,0x0,8
tick,0x7ffa19ab1d94,77802447,0,0x0,8
tick,0x7ffa19ab1d94,77818129,0,0x0,8
tick,0x7ffa19ab1d94,77833211,0,0x0,8
tick,0x7ffa19ab1d94,77848671,0,0x0,8
tick,0x7ffa19ab1d94,77863964,0,0x0,8
tick,0x7ffa19ab1d94,77879852,0,0x0,8
tick,0x7ffa19ab1d94,77895318,0,0x0,8
tick,0x7ffa19ab1d94,77911696,0,0x0,8
tick,0x7ffa19ab1d94,77927179,0,0x0,8
tick,0x7ffa19ab1d94,77943190,0,0x0,8
tick,0x7ffa19ab1d94,77958710,0,0x0,8
tick,0x7ffa19ab1d94,77974407,0,0x0,8
tick,0x7ffa19ab1d94,77990235,0,0x0,8
tick,0x7ffa19ab1d94,78005707,0,0x0,8
tick,0x7ffa19ab1d94,78021539,0,0x0,8
tick,0x7ffa19ab1d94,78037696,0,0x0,8
tick,0x7ffa19ab1d94,78052769,0,0x0,8
tick,0x7ffa19ab1d94,78068261,0,0x0,8
tick,0x7ffa19ab1d94,78083937,0,0x0,8
tick,0x7ffa19ab1d94,78099542,0,0x0,8
tick,0x7ffa19ab1d94,78115141,0,0x0,8
tick,0x7ffa19ab1d94,78131406,0,0x0,8
tick,0x7ffa19ab1d94,78147498,0,0x0,8
tick,0x7ffa19ab1d94,78162921,0,0x0,8
tick,0x7ffa19ab1d94,78178186,0,0x0,8
tick,0x7ffa19ab1d94,78193495,0,0x0,8
tick,0x7ffa19ab1d94,78209085,0,0x0,8
tick,0x7ffa19ab1d94,78224885,0,0x0,8
tick,0x7ffa19ab1d94,78240398,0,0x0,8
tick,0x7ffa19ab1d94,78256461,0,0x0,8
tick,0x7ffa19ab1d94,78271695,0,0x0,8
tick,0x7ffa19ab1d94,78287581,0,0x0,8
tick,0x7ffa19ab1d94,78302969,0,0x0,8
tick,0x7ffa19ab1d94,78318542,0,0x0,8
tick,0x7ffa19ab1d94,78333593,0,0x0,8
tick,0x7ffa19ab1d94,78348811,0,0x0,8
tick,0x7ffa19ab1d94,78364719,0,0x0,8
tick,0x7ffa19ab1d94,78380471,0,0x0,8
tick,0x7ffa19ab1d94,78395942,0,0x0,8
tick,0x7ffa19ab1d94,78411467,0,0x0,8
tick,0x7ffa19ab1d94,78426673,0,0x0,8
tick,0x7ffa19ab1d94,78442189,0,0x0,8
tick,0x7ffa19ab1d94,78457709,0,0x0,8
tick,0x7ffa19ab1d94,78472876,0,0x0,8
tick,0x7ffa19ab1d94,78488191,0,0x0,8
tick,0x7ffa19ab1d94,78503795,0,0x0,8
tick,0x7ffa19ab1d94,78518988,0,0x0,8
tick,0x7ffa19ab1d94,78534622,0,0x0,8
tick,0x7ffa19ab1d94,78550262,0,0x0,8
tick,0x7ffa19ab1d94,78565631,0,0x0,8
tick,0x7ffa19ab1d94,78581951,0,0x0,8
tick,0x7ffa19ab1d94,78597608,0,0x0,8
tick,0x7ffa19ab1d94,78613707,0,0x0,8
tick,0x7ffa19ab1d94,78629338,0,0x0,8
tick,0x7ffa19ab1d94,78645435,0,0x0,8
tick,0x7ffa19ab1d94,78660971,0,0x0,8
tick,0x7ffa19ab1d94,78676518,0,0x0,8
tick,0x7ffa19ab1d94,78692445,0,0x0,8
tick,0x7ffa19ab1d94,78708116,0,0x0,8
tick,0x7ffa19ab1d94,78724156,0,0x0,8
tick,0x7ffa19ab1d94,78739889,0,0x0,8
tick,0x7ffa19ab1d94,78755459,0,0x0,8
tick,0x7ffa19ab1d94,78770191,0,0x0,8
tick,0x7ffa19ab1d94,78785726,0,0x0,8
tick,0x7ffa19ab1d94,78800852,0,0x0,8
tick,0x7ffa19ab1d94,78816921,0,0x0,8
tick,0x7ffa19ab1d94,78832937,0,0x0,8
tick,0x7ffa19ab1d94,78849184,0,0x0,8
tick,0x7ffa19ab1d94,78865029,0,0x0,8
tick,0x7ffa19ab1d94,78880154,0,0x0,8
tick,0x7ffa19ab1d94,78895853,0,0x0,8
tick,0x7ffa19ab1d94,78911540,0,0x0,8
tick,0x7ffa19ab1d94,78926805,0,0x0,8
tick,0x7ffa19ab1d94,78942580,0,0x0,8
tick,0x7ffa19ab1d94,78957971,0,0x0,8
tick,0x7ffa19ab1d94,78973026,0,0x0,8
tick,0x7ffa19ab1d94,78988793,0,0x0,8
tick,0x7ffa19ab1d94,79004978,0,0x0,8
tick,0x7ffa19ab1d94,79020513,0,0x0,8
tick,0x7ffa19ab1d94,79035958,0,0x0,8
tick,0x7ffa19ab1d94,79051844,0,0x0,8
tick,0x7ffa19ab1d94,79068051,0,0x0,8
tick,0x7ffa19ab1d94,79083491,0,0x0,8
tick,0x7ffa19ab1d94,79098818,0,0x0,8
tick,0x7ffa19ab1d94,79114693,0,0x0,8
tick,0x7ffa19ab1d94,79130252,0,0x0,8
tick,0x7ffa19ab1d94,79145789,0,0x0,8
tick,0x7ffa19ab1d94,79160886,0,0x0,8
tick,0x7ffa19ab1d94,79176931,0,0x0,8
tick,0x7ffa19ab1d94,79192044,0,0x0,8
tick,0x7ffa19ab1d94,79207749,0,0x0,8
tick,0x7ffa19ab1d94,79223077,0,0x0,8
tick,0x7ffa19ab1d94,79238659,0,0x0,8
tick,0x7ffa19ab1d94,79254063,0,0x0,8
tick,0x7ffa19ab1d94,79269086,0,0x0,8
tick,0x7ffa19ab1d94,79284797,0,0x0,8
tick,0x7ffa19ab1d94,79300331,0,0x0,8
tick,0x7ffa19ab1d94,79316083,0,0x0,8
tick,0x7ffa19ab1d94,79331567,0,0x0,8
tick,0x7ffa19ab1d94,79347527,0,0x0,8
tick,0x7ffa19ab1d94,79362843,0,0x0,8
tick,0x7ffa19ab1d94,79377371,0,0x0,8
tick,0x7ffa19ab1d94,79393863,0,0x0,8
tick,0x7ffa19ab1d94,79408214,0,0x0,8
tick,0x7ffa19ab1d94,79424063,0,0x0,8
tick,0x7ffa19ab1d94,79440116,0,0x0,8
tick,0x7ffa19ab1d94,79455495,0,0x0,8
tick,0x7ffa19ab1d94,79470954,0,0x0,8
tick,0x7ffa19ab1d94,79485803,0,0x0,8
tick,0x7ffa19ab1d94,79501486,0,0x0,8
tick,0x7ffa19ab1d94,79516835,0,0x0,8
tick,0x7ffa19ab1d94,79533259,0,0x0,8
tick,0x7ffa19ab1d94,79549111,0,0x0,8
tick,0x7ffa19ab1d94,79565049,0,0x0,8
tick,0x7ffa19ab1d94,79580378,0,0x0,8
tick,0x7ffa19ab1d94,79596304,0,0x0,8
tick,0x7ffa19ab1d94,79611580,0,0x0,8
tick,0x7ffa19ab1d94,79627939,0,0x0,8
tick,0x7ffa19ab1d94,79642770,0,0x0,8
tick,0x7ffa19ab1d94,79658174,0,0x0,8
tick,0x7ffa19ab1d94,79673479,0,0x0,8
tick,0x7ffa19ab1d94,79688876,0,0x0,8
tick,0x7ffa19ab1d94,79704645,0,0x0,8
tick,0x7ffa19ab1d94,79720224,0,0x0,8
tick,0x7ffa19ab1d94,79736202,0,0x0,8
tick,0x7ffa19ab1d94,79751552,0,0x0,8
tick,0x7ffa19ab1d94,79767103,0,0x0,8
tick,0x7ffa19ab1d94,79782847,0,0x0,8
tick,0x7ffa19ab1d94,79798034,0,0x0,8
tick,0x7ffa19ab1d94,79813670,0,0x0,8
tick,0x7ffa19ab1d94,79829128,0,0x0,8
tick,0x7ffa19ab1d94,79845075,0,0x0,8
tick,0x7ffa19ab1d94,79860280,0,0x0,8
tick,0x7ffa19ab1d94,79877330,0,0x0,8
tick,0x7ffa19ab1d94,79891505,0,0x0,8
tick,0x7ffa19ab1d94,79907402,0,0x0,8
tick,0x7ffa19ab1d94,79923042,0,0x0,8
tick,0x7ffa19ab1d94,79938187,0,0x0,8
tick,0x7ffa19ab1d94,79954341,0,0x0,8
tick,0x7ffa19ab1d94,79970268,0,0x0,8
tick,0x7ffa19ab1d94,79987273,0,0x0,8
tick,0x7ffa19ab1d94,80001815,0,0x0,8
tick,0x7ffa19ab1d94,80016962,0,0x0,8
tick,0x7ffa19ab1d94,80033018,0,0x0,8
tick,0x7ffa19ab1d94,80048014,0,0x0,8
tick,0x7ffa19ab1d94,80063625,0,0x0,8
tick,0x7ffa19ab1d94,80079027,0,0x0,8
tick,0x7ffa19ab1d94,80094969,0,0x0,8
tick,0x7ffa19ab1d94,80110696,0,0x0,8
tick,0x7ffa19ab1d94,80126493,0,0x0,8
tick,0x7ffa19ab1d94,80146201,0,0x0,8
tick,0x7ffa19ab1d94,80156877,0,0x0,8
tick,0x7ffa19ab1d94,80173231,0,0x0,8
tick,0x7ffa19ab1d94,80188798,0,0x0,8
tick,0x7ffa19ab1d94,80203528,0,0x0,8
tick,0x7ffa19ab1d94,80218682,0,0x0,8
tick,0x7ffa19ab1d94,80235132,0,0x0,8
tick,0x7ffa19ab1d94,80255507,0,0x0,8
tick,0x7ffa19ab1d94,80267682,0,0x0,8
tick,0x7ffa19ab1d94,80280349,0,0x0,8
tick,0x7ffa19ab1d94,80296131,0,0x0,8
tick,0x7ffa19ab1d94,80311778,0,0x0,8
tick,0x7ffa19ab1d94,80328371,0,0x0,8
tick,0x7ffa19ab1d94,80345245,0,0x0,8
tick,0x7ffa19ab1d94,80364960,0,0x0,8
tick,0x7ffa19ab1d94,80376301,0,0x0,8
tick,0x7ffa19ab1d94,80393362,0,0x0,8
tick,0x7ffa19ab1d94,80406846,0,0x0,8
tick,0x7ffa19ab1d94,80425184,0,0x0,8
tick,0x7ffa19ab1d94,80438332,0,0x0,8
tick,0x7ffa19ab1d94,80456524,0,0x0,8
tick,0x7ffa19ab1d94,80470405,0,0x0,8
tick,0x7ffa19ab1d94,80486518,0,0x0,8
tick,0x7ffa19ab1d94,80501293,0,0x0,8
tick,0x7ffa19ab1d94,80516670,0,0x0,8
tick,0x7ffa19ab1d94,80532148,0,0x0,8
tick,0x7ffa19ab1d94,80547337,0,0x0,8
tick,0x7ffa19ab1d94,80562824,0,0x0,8
tick,0x7ffa19ab1d94,80578623,0,0x0,8
tick,0x7ffa19ab1d94,80594451,0,0x0,8
tick,0x7ffa19ab1d94,80610119,0,0x0,8
tick,0x7ffa19ab1d94,80626157,0,0x0,8
tick,0x7ffa19ab1d94,80641663,0,0x0,8
tick,0x7ffa19ab1d94,80656789,0,0x0,8
tick,0x7ffa19ab1d94,80672297,0,0x0,8
tick,0x7ffa19ab1d94,80688290,0,0x0,8
tick,0x7ffa19ab1d94,80704144,0,0x0,8
tick,0x7ffa19ab1d94,80719751,0,0x0,8
tick,0x7ffa19ab1d94,80735212,0,0x0,8
tick,0x7ffa19ab1d94,80751912,0,0x0,8
tick,0x7ffa19ab1d94,80767564,0,0x0,8
tick,0x7ffa19ab1d94,80783530,0,0x0,8
tick,0x7ffa19ab1d94,80799559,0,0x0,8
tick,0x7ffa19ab1d94,80814579,0,0x0,8
tick,0x7ffa19ab1d94,80830450,0,0x0,8
tick,0x7ffa19ab1d94,80846097,0,0x0,8
tick,0x7ffa19ab1d94,80861617,0,0x0,8
tick,0x7ffa19ab1d94,80877558,0,0x0,8
tick,0x7ffa19ab1d94,80900099,0,0x0,8
tick,0x7ffa19ab1d94,80910498,0,0x0,8
tick,0x7ffa19ab1d94,80924135,0,0x0,8
tick,0x7ffa19ab1d94,80940119,0,0x0,8
tick,0x7ffa19ab1d94,80956931,0,0x0,8
tick,0x7ffa19ab1d94,80971629,0,0x0,8
tick,0x7ffa19ab1d94,80987985,0,0x0,8
tick,0x7ffa19ab1d94,81003092,0,0x0,8
tick,0x7ffa19ab1d94,81017550,0,0x0,8
tick,0x7ffa19ab1d94,81033008,0,0x0,8
tick,0x7ffa19ab1d94,81048896,0,0x0,8
tick,0x7ffa19ab1d94,81063759,0,0x0,8
tick,0x7ffa19ab1d94,81079714,0,0x0,8
tick,0x7ffa19ab1d94,81094977,0,0x0,8
tick,0x7ffa19ab1d94,81110792,0,0x0,8
tick,0x7ffa19ab1d94,81126914,0,0x0,8
tick,0x7ffa19ab1d94,81143722,0,0x0,8
tick,0x7ffa19ab1d94,81160349,0,0x0,8
tick,0x7ffa19ab1d94,81174176,0,0x0,8
tick,0x7ffa19ab1d94,81190510,0,0x0,8
tick,0x7ffa19ab1d94,81205677,0,0x0,8
tick,0x7ffa19ab1d94,81225669,0,0x0,8
tick,0x7ffa19ab1d94,81239332,0,0x0,8
tick,0x7ffa19ab1d94,81253202,0,0x0,8
tick,0x7ffa19ab1d94,81268841,0,0x0,8
tick,0x7ffa19ab1d94,81284700,0,0x0,8
tick,0x7ffa19ab1d94,81300398,0,0x0,8
tick,0x7ffa19ab1d94,81316144,0,0x0,8
tick,0x7ffa19ab1d94,81331569,0,0x0,8
tick,0x7ffa19ab1d94,81347393,0,0x0,8
tick,0x7ffa19ab1d94,81362675,0,0x0,8
tick,0x7ffa19ab1d94,81378290,0,0x0,8
tick,0x7ffa19ab1d94,81395795,0,0x0,8
tick,0x7ffa19ab1d94,81410118,0,0x0,8
tick,0x7ffa19ab1d94,81425983,0,0x0,8
tick,0x7ffa19ab1d94,81442016,0,0x0,8
tick,0x7ffa19ab1d94,81457131,0,0x0,8
tick,0x7ffa19ab1d94,81472792,0,0x0,8
tick,0x7ffa19ab1d94,81488770,0,0x0,8
tick,0x7ffa19ab1d94,81505774,0,0x0,8
tick,0x7ffa19ab1d94,81519969,0,0x0,8
tick,0x7ffa19ab1d94,81535078,0,0x0,8
tick,0x7ffa19ab1d94,81551466,0,0x0,8
tick,0x7ffa19ab1d94,81567489,0,0x0,8
tick,0x7ffa19ab1d94,81583485,0,0x0,8
tick,0x7ffa19ab1d94,81598647,0,0x0,8
tick,0x7ffa19ab1d94,81614697,0,0x0,8
tick,0x7ffa19ab1d94,81629933,0,0x0,8
tick,0x7ffa19ab1d94,81645377,0,0x0,8
tick,0x7ffa19ab1d94,81660194,0,0x0,8
tick,0x7ffa19ab1d94,81676308,0,0x0,8
tick,0x7ffa19ab1d94,81693281,0,0x0,8
tick,0x7ffa19ab1d94,81707588,0,0x0,8
tick,0x7ffa19ab1d94,81727801,0,0x0,8
tick,0x7ffa19ab1d94,81738260,0,0x0,8
tick,0x7ffa19ab1d94,81754374,0,0x0,8
tick,0x7ffa19ab1d94,81769922,0,0x0,8
tick,0x7ffa19ab1d94,81785700,0,0x0,8
tick,0x7ffa19ab1d94,81803631,0,0x0,8
tick,0x7ffa19ab1d94,81817101,0,0x0,8
tick,0x7ffa19ab1d94,81832599,0,0x0,8
tick,0x7ffa19ab1d94,81848038,0,0x0,8
tick,0x7ffa19ab1d94,81863425,0,0x0,8
tick,0x7ffa19ab1d94,81878680,0,0x0,8
tick,0x7ffa19ab1d94,81894852,0,0x0,8
tick,0x7ffa19ab1d94,81910767,0,0x0,8
tick,0x7ffa19ab1d94,81926512,0,0x0,8
tick,0x7ffa19ab1d94,81943031,0,0x0,8
tick,0x7ffa19ab1d94,81958966,0,0x0,8
tick,0x7ffa19ab1d94,81974239,0,0x0,8
tick,0x7ffa19ab1d94,81989762,0,0x0,8
tick,0x7ffa19ab1d94,82005673,0,0x0,8
tick,0x7ffa19ab1d94,82021711,0,0x0,8
tick,0x7ffa19ab1d94,82037158,0,0x0,8
tick,0x7ffa19ab1d94,82053240,0,0x0,8
tick,0x7ffa19ab1d94,82069145,0,0x0,8
tick,0x7ffa19ab1d94,82084230,0,0x0,8
tick,0x7ffa19ab1d94,82099442,0,0x0,8
tick,0x7ffa19ab1d94,82114742,0,0x0,8
tick,0x7ffa19ab1d94,82130386,0,0x0,8
tick,0x7ffa19ab1d94,82145552,0,0x0,8
tick,0x7ffa19ab1d94,82164054,0,0x0,8
tick,0x7ffa19ab1d94,82178883,0,0x0,8
tick,0x7ffa19ab1d94,82193023,0,0x0,8
tick,0x7ffa19ab1d94,82209062,0,0x0,8
tick,0x7ffa19ab1d94,82225410,0,0x0,8
tick,0x7ffa19ab1d94,82240668,0,0x0,8
tick,0x7ffa19ab1d94,82256171,0,0x0,8
tick,0x7ffa19ab1d94,82271728,0,0x0,8
tick,0x7ffa19ab1d94,82287743,0,0x0,8
tick,0x7ffa19ab1d94,82303813,0,0x0,8
tick,0x7ffa19ab1d94,82319729,0,0x0,8
tick,0x7ffa19ab1d94,82334977,0,0x0,8
tick,0x7ffa19ab1d94,82350547,0,0x0,8
tick,0x7ffa19ab1d94,82366623,0,0x0,8
tick,0x7ffa19ab1d94,82382985,0,0x0,8
tick,0x7ffa19ab1d94,82398707,0,0x0,8
tick,0x7ffa19ab1d94,82414006,0,0x0,8
tick,0x7ffa19ab1d94,82429923,0,0x0,8
tick,0x7ffa19ab1d94,82445709,0,0x0,8
tick,0x7ffa19ab1d94,82461912,0,0x0,8
tick,0x7ffa19ab1d94,82478180,0,0x0,8
tick,0x7ffa19ab1d94,82493587,0,0x0,8
tick,0x7ffa19ab1d94,82510912,0,0x0,8
tick,0x7ffa19ab1d94,82526163,0,0x0,8
tick,0x7ffa19ab1d94,82548108,0,0x0,8
tick,0x7ffa19ab1d94,82556887,0,0x0,8
tick,0x7ffa19ab1d94,82571836,0,0x0,8
tick,0x7ffa19ab1d94,82587268,0,0x0,8
tick,0x7ffa19ab1d94,82603301,0,0x0,8
tick,0x7ffa19ab1d94,82620508,0,0x0,8
tick,0x7ffa19ab1d94,82634686,0,0x0,8
tick,0x7ffa19ab1d94,82650106,0,0x0,8
tick,0x7ffa19ab1d94,82666087,0,0x0,8
tick,0x7ffa19ab1d94,82682020,0,0x0,8
tick,0x7ffa19ab1d94,82697997,0,0x0,8
tick,0x7ffa19ab1d94,82712862,0,0x0,8
tick,0x7ffa19ab1d94,82728334,0,0x0,8
tick,0x7ffa19ab1d94,82744409,0,0x0,8
tick,0x7ffa19ab1d94,82758366,0,0x0,8
tick,0x7ffa19ab1d94,82773174,0,0x0,8
tick,0x7ffa19ab1d94,82788377,0,0x0,8
tick,0x7ffa19ab1d94,82805474,0,0x0,8
tick,0x7ffa19ab1d94,82845756,0,0x0,8
tick,0x7ffa19ab1d94,82851745,0,0x0,8
tick,0x7ffa19ab1d94,82869977,0,0x0,8
tick,0x7ffa19ab1d94,82889244,0,0x0,8
tick,0x7ffa19ab1d94,82899554,0,0x0,8
tick,0x7ffa19ab1d94,82916222,0,0x0,8
tick,0x7ffa19ab1d94,82931337,0,0x0,8
tick,0x7ffa19ab1d94,82946745,0,0x0,8
tick,0x7ffa19ab1d94,82980768,0,0x0,8
tick,0x7ffa19ab1d94,83002146,0,0x0,8
tick,0x7ffa19ab1d94,83012387,0,0x0,8
tick,0x7ffa19ab1d94,83045909,0,0x0,8
tick,0x7ffa19ab1d94,83063249,0,0x0,8
tick,0x7ffa19ab1d94,83085210,0,0x0,8
tick,0x7ffa19ab1d94,83123548,0,0x0,8
tick,0x7ffa19ab1d94,83157912,0,0x0,8
tick,0x7ffa19ab1d94,83164791,0,0x0,8
tick,0x7ffa19ab1d94,83195015,0,0x0,8
tick,0x7ffa19ab1d94,83215430,0,0x0,8
tick,0x7ffa19ab1d94,83236074,0,0x0,8
tick,0x7ffa19ab1d94,83246734,0,0x0,8
tick,0x7ffa19ab1d94,83274802,0,0x0,8
tick,0x7ffa19ab1d94,83296800,0,0x0,8
tick,0x7ffa19ab1d94,83309004,0,0x0,8
tick,0x7ffa19ab1d94,83340386,0,0x0,8
tick,0x7ffa19ab1d94,83353966,0,0x0,8
tick,0x7ffa19ab1d94,83371990,0,0x0,8
tick,0x7ffa19ab1d94,83386178,0,0x0,8
tick,0x7ffa19ab1d94,83418025,0,0x0,8
tick,0x7ffa19ab1d94,83431239,0,0x0,8
tick,0x7ffa19ab1d94,83446328,0,0x0,8
tick,0x7ffa19ab1d94,83462025,0,0x0,8
tick,0x7ffa19ab1d94,83477734,0,0x0,8
tick,0x7ffa19ab1d94,83493488,0,0x0,8
tick,0x7ffa19ab1d94,83508874,0,0x0,8
tick,0x7ffa19ab1d94,83527769,0,0x0,8
tick,0x7ffa19ab1d94,83538891,0,0x0,8
tick,0x7ffa19ab1d94,83555023,0,0x0,8
tick,0x7ffa19ab1d94,83570704,0,0x0,8
tick,0x7ffa19ab1d94,83586965,0,0x0,8
tick,0x7ffa19ab1d94,83602739,0,0x0,8
tick,0x7ffa19ab1d94,83619024,0,0x0,8
tick,0x7ffa19ab1d94,83633201,0,0x0,8
tick,0x7ffa19ab1d94,83648811,0,0x0,8
tick,0x7ffa19ab1d94,83664582,0,0x0,8
tick,0x7ffa19ab1d94,83680395,0,0x0,8
tick,0x7ffa19ab1d94,83695719,0,0x0,8
tick,0x7ffa19ab1d94,83711298,0,0x0,8
tick,0x7ffa19ab1d94,83727138,0,0x0,8
tick,0x7ffa19ab1d94,83742886,0,0x0,8
tick,0x7ffa19ab1d94,83757632,0,0x0,8
tick,0x7ffa19ab1d94,83774648,0,0x0,8
tick,0x7ffa19ab1d94,83789006,0,0x0,8
tick,0x7ffa19ab1d94,83804001,0,0x0,8
tick,0x7ffa19ab1d94,83819747,0,0x0,8
tick,0x7ffa19ab1d94,83835119,0,0x0,8
tick,0x7ffa19ab1d94,83851483,0,0x0,8
tick,0x7ffa19ab1d94,83867542,0,0x0,8
tick,0x7ffa19ab1d94,83882864,0,0x0,8
tick,0x7ffa19ab1d94,83899441,0,0x0,8
tick,0x7ffa19ab1d94,83915470,0,0x0,8
tick,0x7ffa19ab1d94,83932969,0,0x0,8
tick,0x7ffa19ab1d94,83946047,0,0x0,8
tick,0x7ffa19ab1d94,83964488,0,0x0,8
tick,0x7ffa19ab1d94,83977926,0,0x0,8
tick,0x7ffa19ab1d94,83994340,0,0x0,8
tick,0x7ffa19ab1d94,84011440,0,0x0,8
tick,0x7ffa19ab1d94,84033139,0,0x0,8
tick,0x7ffa19ab1d94,84044943,0,0x0,8
tick,0x7ffa19ab1d94,84067255,0,0x0,8
tick,0x7ffa19ab1d94,84074801,0,0x0,8
tick,0x7ffa19ab1d94,84086189,0,0x0,8
tick,0x7ffa19ab1d94,84116746,0,0x0,8
tick,0x7ffa19ab1d94,84132857,0,0x0,8
tick,0x7ffa19ab1d94,84151686,0,0x0,8
tick,0x7ffa19ab1d94,84164073,0,0x0,8
tick,0x7ffa19ab1d94,84178590,0,0x0,8
tick,0x7ffa19ab1d94,84196354,0,0x0,8
tick,0x7ffa19ab1d94,84235711,0,0x0,8
tick,0x7ffa19ab1d94,84244792,0,0x0,8
tick,0x7ffa19ab1d94,84262234,0,0x0,8
tick,0x7ffa19ab1d94,84281658,0,0x0,8
tick,0x7ffa19ab1d94,84291006,0,0x0,8
tick,0x7ffa19ab1d94,84311166,0,0x0,8
tick,0x7ffa19ab1d94,84318242,0,0x0,8
tick,0x7ffa19ab1d94,84334605,0,0x0,8
tick,0x7ffa19ab1d94,84349621,0,0x0,8
tick,0x7ffa19ab1d94,84365363,0,0x0,8
tick,0x7ffa19ab1d94,84380408,0,0x0,8
tick,0x7ffa19ab1d94,84396040,0,0x0,8
tick,0x7ffa19ab1d94,84419213,0,0x0,8
tick,0x7ffa19ab1d94,84441847,0,0x0,8
tick,0x7ffa19ab1d94,84445097,0,0x0,8
tick,0x7ffa19ab1d94,84463367,0,0x0,8
tick,0x7ffa19ab1d94,84477183,0,0x0,8
tick,0x7ffa19ab1d94,84503597,0,0x0,8
tick,0x7ffa19ab1d94,84516445,0,0x0,8
tick,0x7ffa19ab1d94,84530089,0,0x0,8
tick,0x7ffa19ab1d94,84541795,0,0x0,8
tick,0x7ffa19ab1d94,84554205,0,0x0,8
tick,0x7ffa19ab1d94,84569129,0,0x0,8
tick,0x7ffa19ab1d94,84583513,0,0x0,8
tick,0x7ffa19ab1d94,84603509,0,0x0,8
tick,0x7ffa19ab1d94,84616815,0,0x0,8
tick,0x7ffa19ab1d94,84631829,0,0x0,8
tick,0x7ffa19ab1d94,84649886,0,0x0,8
tick,0x7ffa19ab1d94,84664372,0,0x0,8
tick,0x7ffa19ab1d94,84678853,0,0x0,8
tick,0x7ffa19ab1d94,84692827,0,0x0,8
tick,0x7ffa19ab1d94,84709305,0,0x0,8
tick,0x7ffa19ab1d94,84725372,0,0x0,8
tick,0x7ffa19ab1d94,84740097,0,0x0,8
tick,0x7ffa19ab1d94,84762468,0,0x0,8
tick,0x7ffa19ab1d94,84786391,0,0x0,8
tick,0x7ffa19ab1d94,84803438,0,0x0,8
tick,0x7ffa19ab1d94,84817857,0,0x0,8
tick,0x7ffa19ab1d94,84833150,0,0x0,8
tick,0x7ffa19ab1d94,84847950,0,0x0,8
tick,0x7ffa19ab1d94,84864660,0,0x0,8
tick,0x7ffa19ab1d94,84880302,0,0x0,8
tick,0x7ffa19ab1d94,84896517,0,0x0,8
tick,0x7ffa19ab1d94,84911765,0,0x0,8
tick,0x7ffa19ab1d94,84942500,0,0x0,8
tick,0x7ffa19ab1d94,84973535,0,0x0,8
tick,0x7ffa19ab1d94,84993334,0,0x0,8
tick,0x7ffa19ab1d94,85008047,0,0x0,8
tick,0x7ffa19ab1d94,85020950,0,0x0,8
tick,0x7ffa19ab1d94,85045645,0,0x0,8
tick,0x7ffa19ab1d94,85061808,0,0x0,8
tick,0x7ffa19ab1d94,85066403,0,0x0,8
tick,0x7ffa19ab1d94,85081923,0,0x0,8
tick,0x7ffa19ab1d94,85097149,0,0x0,8
tick,0x7ffa19ab1d94,85113084,0,0x0,8
tick,0x7ffa19ab1d94,85135076,0,0x0,8
tick,0x7ffa19ab1d94,85147525,0,0x0,8
tick,0x7ffa19ab1d94,85159346,0,0x0,8
tick,0x7ffa19ab1d94,85174921,0,0x0,8
tick,0x7ffa19ab1d94,85199848,0,0x0,8
tick,0x7ffa19ab1d94,85217788,0,0x0,8
tick,0x7ffa19ab1d94,85228759,0,0x0,8
tick,0x7ffa19ab1d94,85244094,0,0x0,8
tick,0x7ffa19ab1d94,85255097,0,0x0,8
tick,0x7ffa19ab1d94,85270302,0,0x0,8
tick,0x7ffa19ab1d94,85286046,0,0x0,8
tick,0x7ffa19ab1d94,85303952,0,0x0,8
tick,0x7ffa19ab1d94,85355840,0,0x0,8
tick,0x7ffa19ab1d94,85363533,0,0x0,8
tick,0x7ffa19ab1d94,85379099,0,0x0,8
tick,0x7ffa19ab1d94,85395572,0,0x0,8
tick,0x7ffa19ab1d94,85413186,0,0x0,8
tick,0x7ffa19ab1d94,85431390,0,0x0,8
tick,0x7ffa19ab1d94,85454098,0,0x0,8
tick,0x7ffa19ab1d94,85459245,0,0x0,8
tick,0x7ffa19ab1d94,85476197,0,0x0,8
tick,0x7ffa19ab1d94,85494755,0,0x0,8
tick,0x7ffa19ab1d94,85510960,0,0x0,8
tick,0x7ffa19ab1d94,85526087,0,0x0,8
tick,0x7ffa19ab1d94,85539978,0,0x0,8
tick,0x7ffa19ab1d94,85561260,0,0x0,8
tick,0x7ffa19ab1d94,85567149,0,0x0,8
tick,0x7ffa19ab1d94,85589376,0,0x0,8
tick,0x7ffa19ab1d94,85603404,0,0x0,8
tick,0x7ffa19ab1d94,85615572,0,0x0,8
tick,0x7ffa19ab1d94,85630486,0,0x0,8
tick,0x7ffa19ab1d94,85646250,0,0x0,8
tick,0x7ffa19ab1d94,85665192,0,0x0,8
tick,0x7ffa19ab1d94,85680781,0,0x0,8
tick,0x7ffa19ab1d94,85693621,0,0x0,8
tick,0x7ffa19ab1d94,85710390,0,0x0,8
tick,0x7ffa19ab1d94,85735359,0,0x0,8
tick,0x7ffa19ab1d94,85744827,0,0x0,8
tick,0x7ffa19ab1d94,85761182,0,0x0,8
tick,0x7ffa19ab1d94,85779048,0,0x0,8
tick,0x7ffa19ab1d94,85794774,0,0x0,8
tick,0x7ffa19ab1d94,85803031,0,0x0,8
tick,0x7ffa19ab1d94,85823234,0,0x0,8
tick,0x7ffa19ab1d94,85839557,0,0x0,8
tick,0x7ffa19ab1d94,85849381,0,0x0,8
tick,0x7ffa19ab1d94,85863580,0,0x0,8
tick,0x7ffa19ab1d94,85878909,0,0x0,8
tick,0x7ffa19ab1d94,85903490,0,0x0,8
tick,0x7ffa19ab1d94,85913372,0,0x0,8
tick,0x7ffa19ab1d94,85926436,0,0x0,8
tick,0x7ffa19ab1d94,85944027,0,0x0,8
tick,0x7ffa19ab1d94,85966794,0,0x0,8
tick,0x7ffa19ab1d94,85977597,0,0x0,8
tick,0x7ffa19ab1d94,85989605,0,0x0,8
tick,0x7ffa19ab1d94,86022291,0,0x0,8
tick,0x7ffa19ab1d94,86040682,0,0x0,8
tick,0x7ffa19ab1d94,86054193,0,0x0,8
tick,0x7ffa19ab1d94,86067702,0,0x0,8
tick,0x7ffa19ab1d94,86084746,0,0x0,8
tick,0x7ffa19ab1d94,86100083,0,0x0,8
tick,0x7ffa19ab1d94,86114889,0,0x0,8
tick,0x7ffa19ab1d94,86131480,0,0x0,8
tick,0x7ffa19ab1d94,86147660,0,0x0,8
tick,0x7ffa19ab1d94,86179398,0,0x0,8
tick,0x7ffa19ab1d94,86201812,0,0x0,8
tick,0x7ffa19ab1d94,86211621,0,0x0,8
tick,0x7ffa19ab1d94,86228083,0,0x0,8
tick,0x7ffa19ab1d94,86244716,0,0x0,8
tick,0x7ffa19ab1d94,86277237,0,0x0,8
tick,0x7ffa19ab1d94,86295111,0,0x0,8
tick,0x7ffa19ab1d94,86308374,0,0x0,8
tick,0x7ffa19ab1d94,86323393,0,0x0,8
tick,0x7ffa19ab1d94,86349922,0,0x0,8
tick,0x7ffa19ab1d94,86358187,0,0x0,8
tick,0x7ffa19ab1d94,86372301,0,0x0,8
tick,0x7ffa19ab1d94,86385047,0,0x0,8
tick,0x7ffa19ab1d94,86402054,0,0x0,8
tick,0x7ffa19ab1d94,86415725,0,0x0,8
tick,0x7ffa19ab1d94,86432957,0,0x0,8
tick,0x7ffa19ab1d94,86449176,0,0x0,8
tick,0x7ffa19ab1d94,86467977,0,0x0,8
tick,0x7ffa19ab1d94,86479345,0,0x0,8
tick,0x7ffa19ab1d94,86495299,0,0x0,8
tick,0x7ffa19ab1d94,86512574,0,0x0,8
tick,0x7ffa19ab1d94,86526946,0,0x0,8
tick,0x7ffa19ab1d94,86546340,0,0x0,8
tick,0x7ffa19ab1d94,86558107,0,0x0,8
tick,0x7ffa19ab1d94,86572851,0,0x0,8
tick,0x7ffa19ab1d94,86588645,0,0x0,8
tick,0x7ffa19ab1d94,86607125,0,0x0,8
tick,0x7ffa19ab1d94,86624651,0,0x0,8
tick,0x7ffa19ab1d94,86635169,0,0x0,8
tick,0x7ffa19ab1d94,86651573,0,0x0,8
tick,0x7ffa19ab1d94,86667587,0,0x0,8
tick,0x7ffa19ab1d94,86683280,0,0x0,8
tick,0x7ffa19ab1d94,86699009,0,0x0,8
tick,0x7ffa19ab1d94,86714948,0,0x0,8
tick,0x7ffa19ab1d94,86738742,0,0x0,8
tick,0x7ffa19ab1d94,86747458,0,0x0,8
tick,0x7ffa19ab1d94,86761813,0,0x0,8
tick,0x7ffa19ab1d94,86777108,0,0x0,8
tick,0x7ffa19ab1d94,86792885,0,0x0,8
tick,0x7ffa19ab1d94,86809638,0,0x0,8
tick,0x7ffa19ab1d94,86824100,0,0x0,8
tick,0x7ffa19ab1d94,86841077,0,0x0,8
tick,0x7ffa19ab1d94,86855351,0,0x0,8
tick,0x7ffa19ab1d94,86871235,0,0x0,8
tick,0x7ffa19ab1d94,86889792,0,0x0,8
tick,0x7ffa19ab1d94,86906526,0,0x0,8
tick,0x7ffa19ab1d94,86919457,0,0x0,8
tick,0x7ffa19ab1d94,86934325,0,0x0,8
tick,0x7ffa19ab1d94,86949784,0,0x0,8
tick,0x7ffa19ab1d94,86965058,0,0x0,8
tick,0x7ffa19ab1d94,86982043,0,0x0,8
tick,0x7ffa19ab1d94,86995547,0,0x0,8
tick,0x7ffa19ab1d94,87011870,0,0x0,8
tick,0x7ffa19ab1d94,87046623,0,0x0,8
tick,0x7ffa19ab1d94,87059883,0,0x0,8
tick,0x7ffa19ab1d94,87072783,0,0x0,8
tick,0x7ffa19ab1d94,87090670,0,0x0,8
tick,0x7ffa19ab1d94,87106096,0,0x0,8
tick,0x7ffa19ab1d94,87124458,0,0x0,8
tick,0x7ffa19ab1d94,87135230,0,0x0,8
tick,0x7ffa19ab1d94,87152258,0,0x0,8
tick,0x7ffa19ab1d94,87167057,0,0x0,8
tick,0x7ffa19ab1d94,87205524,0,0x0,8
tick,0x7ffa19ab1d94,87214792,0,0x0,8
tick,0x7ffa19ab1d94,87230688,0,0x0,8
tick,0x7ffa19ab1d94,87247132,0,0x0,8
tick,0x7ffa19ab1d94,87261602,0,0x0,8
tick,0x7ffa19ab1d94,87275980,0,0x0,8
tick,0x7ffa19ab1d94,87291726,0,0x0,8
tick,0x7ffa19ab1d94,87307291,0,0x0,8
tick,0x7ffa19ab1d94,87325378,0,0x0,8
tick,0x7ffa19ab1d94,87338455,0,0x0,8
tick,0x7ffa19ab1d94,87353510,0,0x0,8
tick,0x7ffa19ab1d94,87371081,0,0x0,8
tick,0x7ffa19ab1d94,87389977,0,0x0,8
tick,0x7ffa19ab1d94,87402742,0,0x0,8
tick,0x7ffa19ab1d94,87420239,0,0x0,8
tick,0x7ffa19ab1d94,87431811,0,0x0,8
tick,0x7ffa19ab1d94,87448298,0,0x0,8
tick,0x7ffa19ab1d94,87463298,0,0x0,8
tick,0x7ffa19ab1d94,87479463,0,0x0,8
tick,0x7ffa19ab1d94,87493927,0,0x0,8
tick,0x7ffa19ab1d94,87509451,0,0x0,8
tick,0x7ffa19ab1d94,87524818,0,0x0,8
tick,0x7ffa19ab1d94,87541031,0,0x0,8
tick,0x7ffa19ab1d94,87556405,0,0x0,8
tick,0x7ffa19ab1d94,87572228,0,0x0,8
tick,0x7ffa19ab1d94,87589364,0,0x0,8
tick,0x7ffa19ab1d94,87605120,0,0x0,8
tick,0x7ffa19ab1d94,87619888,0,0x0,8
tick,0x7ffa19ab1d94,87634791,0,0x0,8
tick,0x7ffa19ab1d94,87650547,0,0x0,8
tick,0x7ffa19ab1d94,87665748,0,0x0,8
tick,0x7ffa19ab1d94,87681842,0,0x0,8
tick,0x7ffa19ab1d94,87697554,0,0x0,8
tick,0x7ffa19ab1d94,87713215,0,0x0,8
tick,0x7ffa19ab1d94,87731566,0,0x0,8
tick,0x7ffa19ab1d94,87745034,0,0x0,8
tick,0x7ffa19ab1d94,87760158,0,0x0,8
tick,0x7ffa19ab1d94,87777530,0,0x0,8
tick,0x7ffa19ab1d94,87792450,0,0x0,8
tick,0x7ffa19ab1d94,87807675,0,0x0,8
tick,0x7ffa19ab1d94,87822999,0,0x0,8
tick,0x7ffa19ab1d94,87845623,0,0x0,8
tick,0x7ffa19ab1d94,87856122,0,0x0,8
tick,0x7ffa19ab1d94,87869953,0,0x0,8
tick,0x7ffa19ab1d94,87884912,0,0x0,8
tick,0x7ffa19ab1d94,87900303,0,0x0,8
tick,0x7ffa19ab1d94,87916338,0,0x0,8
tick,0x7ffa19ab1d94,87931976,0,0x0,8
tick,0x7ffa19ab1d94,87948123,0,0x0,8
tick,0x7ffa19ab1d94,87965712,0,0x0,8
tick,0x7ffa19ab1d94,87983089,0,0x0,8
tick,0x7ffa19ab1d94,87996224,0,0x0,8
tick,0x7ffa19ab1d94,88028015,0,0x0,8
tick,0x7ffa19ab1d94,88042746,0,0x0,8
tick,0x7ffa19ab1d94,88057624,0,0x0,8
tick,0x7ffa19ab1d94,88073079,0,0x0,8
tick,0x7ffa19ab1d94,88089403,0,0x0,8
tick,0x7ffa19ab1d94,88119704,0,0x0,8
tick,0x7ffa19ab1d94,88136956,0,0x0,8
tick,0x7ffa19ab1d94,88173886,0,0x0,8
tick,0x7ffa19ab1d94,88183833,0,0x0,8
tick,0x7ffa19ab1d94,88197432,0,0x0,8
tick,0x7ffa19ab1d94,88214035,0,0x0,8
tick,0x7ffa19ab1d94,88229292,0,0x0,8
tick,0x7ffa19ab1d94,88247579,0,0x0,8
tick,0x7ffa19ab1d94,88260354,0,0x0,8
tick,0x7ffa19ab1d94,88276751,0,0x0,8
tick,0x7ffa19ab1d94,88308734,0,0x0,8
tick,0x7ffa19ab1d94,88323345,0,0x0,8
tick,0x7ffa19ab1d94,88344422,0,0x0,8
tick,0x7ffa19ab1d94,88363396,0,0x0,8
tick,0x7ffa19ab1d94,88371955,0,0x0,8
tick,0x7ffa19ab1d94,88395826,0,0x0,8
tick,0x7ffa19ab1d94,88405216,0,0x0,8
tick,0x7ffa19ab1d94,88417712,0,0x0,8
tick,0x7ffa19ab1d94,88432766,0,0x0,8
tick,0x7ffa19ab1d94,88448695,0,0x0,8
tick,0x7ffa19ab1d94,88465535,0,0x0,8
tick,0x7ffa19ab1d94,88481149,0,0x0,8
tick,0x7ffa19ab1d94,88497600,0,0x0,8
tick,0x7ffa19ab1d94,88513174,0,0x0,8
tick,0x7ffa19ab1d94,88529337,0,0x0,8
tick,0x7ffa19ab1d94,88545560,0,0x0,8
tick,0x7ffa19ab1d94,88563311,0,0x0,8
tick,0x7ffa19ab1d94,88576783,0,0x0,8
tick,0x7ffa19ab1d94,88591774,0,0x0,8
tick,0x7ffa19ab1d94,88608312,0,0x0,8
tick,0x7ffa19ab1d94,88623376,0,0x0,8
tick,0x7ffa19ab1d94,88639166,0,0x0,8
tick,0x7ffa19ab1d94,88655770,0,0x0,8
tick,0x7ffa19ab1d94,88670987,0,0x0,8
tick,0x7ffa19ab1d94,88686571,0,0x0,8
tick,0x7ffa19ab1d94,88703621,0,0x0,8
tick,0x7ffa19ab1d94,88717350,0,0x0,8
tick,0x7ffa19ab1d94,88733627,0,0x0,8
tick,0x7ffa19ab1d94,88749247,0,0x0,8
tick,0x7ffa19ab1d94,88766582,0,0x0,8
tick,0x7ffa19ab1d94,88779791,0,0x0,8
tick,0x7ffa19ab1d94,88795635,0,0x0,8
tick,0x7ffa19ab1d94,88811769,0,0x0,8
tick,0x7ffa19ab1d94,88827613,0,0x0,8
tick,0x7ffa19ab1d94,88843720,0,0x0,8
tick,0x7ffa19ab1d94,88865393,0,0x0,8
tick,0x7ffa19ab1d94,88874484,0,0x0,8
tick,0x7ffa19ab1d94,88890253,0,0x0,8
tick,0x7ffa19ab1d94,88905386,0,0x0,8
tick,0x7ffa19ab1d94,88921537,0,0x0,8
tick,0x7ffa19ab1d94,88937082,0,0x0,8
tick,0x7ffa19ab1d94,88957879,0,0x0,8
tick,0x7ffa19ab1d94,88972185,0,0x0,8
tick,0x7ffa19ab1d94,88983829,0,0x0,8
tick,0x7ffa19ab1d94,89007962,0,0x0,8
tick,0x7ffa19ab1d94,89020531,0,0x0,8
tick,0x7ffa19ab1d94,89033323,0,0x0,8
tick,0x7ffa19ab1d94,89046133,0,0x0,8
tick,0x7ffa19ab1d94,89061660,0,0x0,8
tick,0x7ffa19ab1d94,89077608,0,0x0,8
tick,0x7ffa19ab1d94,89092798,0,0x0,8
tick,0x7ffa19ab1d94,89108412,0,0x0,8
tick,0x7ffa19ab1d94,89124011,0,0x0,8
tick,0x7ffa19ab1d94,89139540,0,0x0,8
tick,0x7ffa19ab1d94,89155655,0,0x0,8
tick,0x7ffa19ab1d94,89171813,0,0x0,8
tick,0x7ffa19ab1d94,89187620,0,0x0,8
tick,0x7ffa19ab1d94,89203449,0,0x0,8
tick,0x7ffa19ab1d94,89218999,0,0x0,8
tick,0x7ffa19ab1d94,89234932,0,0x0,8
tick,0x7ffa19ab1d94,89249941,0,0x0,8
tick,0x7ffa19ab1d94,89265372,0,0x0,8
tick,0x7ffa19ab1d94,89280828,0,0x0,8
tick,0x7ffa19ab1d94,89296107,0,0x0,8
tick,0x7ffa19ab1d94,89311629,0,0x0,8
tick,0x7ffa19ab1d94,89327003,0,0x0,8
tick,0x7ffa19ab1d94,89342904,0,0x0,8
tick,0x7ffa19ab1d94,89358696,0,0x0,8
tick,0x7ffa19ab1d94,89374116,0,0x0,8
tick,0x7ffa19ab1d94,89390236,0,0x0,8
tick,0x7ffa19ab1d94,89405217,0,0x0,8
tick,0x7ffa19ab1d94,89425890,0,0x0,8
tick,0x7ffa19ab1d94,89436690,0,0x0,8
tick,0x7ffa19ab1d94,89452684,0,0x0,8
tick,0x7ffa19ab1d94,89468065,0,0x0,8
tick,0x7ffa19ab1d94,89483574,0,0x0,8
tick,0x7ffa19ab1d94,89499684,0,0x0,8
tick,0x7ffa19ab1d94,89515209,0,0x0,8
tick,0x7ffa19ab1d94,89530925,0,0x0,8
tick,0x7ffa19ab1d94,89547305,0,0x0,8
tick,0x7ffa19ab1d94,89562798,0,0x0,8
tick,0x7ffa19ab1d94,89578321,0,0x0,8
tick,0x7ffa19ab1d94,89593631,0,0x0,8
tick,0x7ffa19ab1d94,89609029,0,0x0,8
tick,0x7ffa19ab1d94,89625018,0,0x0,8
tick,0x7ffa19ab1d94,89640502,0,0x0,8
tick,0x7ffa19ab1d94,89655966,0,0x0,8
tick,0x7ffa19ab1d94,89671857,0,0x0,8
tick,0x7ffa19ab1d94,89687488,0,0x0,8
tick,0x7ffa19ab1d94,89703053,0,0x0,8
tick,0x7ffa19ab1d94,89718095,0,0x0,8
tick,0x7ffa19ab1d94,89734090,0,0x0,8
tick,0x7ffa19ab1d94,89749440,0,0x0,8
tick,0x7ffa19ab1d94,89764641,0,0x0,8
tick,0x7ffa19ab1d94,89780609,0,0x0,8
tick,0x7ffa19ab1d94,89796227,0,0x0,8
tick,0x7ffa19ab1d94,89811837,0,0x0,8
tick,0x7ffa19ab1d94,89826960,0,0x0,8
tick,0x7ffa19ab1d94,89843437,0,0x0,8
tick,0x7ffa19ab1d94,89857989,0,0x0,8
tick,0x7ffa19ab1d94,89873591,0,0x0,8
tick,0x7ffa19ab1d94,89889487,0,0x0,8
tick,0x7ffa19ab1d94,89905682,0,0x0,8
tick,0x7ffa19ab1d94,89920168,0,0x0,8
tick,0x7ffa19ab1d94,89935260,0,0x0,8
tick,0x7ffa19ab1d94,89951555,0,0x0,8
tick,0x7ffa19ab1d94,89967430,0,0x0,8
tick,0x7ffa19ab1d94,89982601,0,0x0,8
tick,0x7ffa19ab1d94,89998435,0,0x0,8
tick,0x7ffa19ab1d94,90014567,0,0x0,8
tick,0x7ffa19ab1d94,90036568,0,0x0,8
tick,0x7ffa19ab1d94,90046288,0,0x0,8
tick,0x7ffa19ab1d94,90061849,0,0x0,8
tick,0x7ffa19ab1d94,90077432,0,0x0,8
tick,0x7ffa19ab1d94,90093046,0,0x0,8
tick,0x7ffa19ab1d94,90108719,0,0x0,8
tick,0x7ffa19ab1d94,90124015,0,0x0,8
tick,0x7ffa19ab1d94,90140475,0,0x0,8
tick,0x7ffa19ab1d94,90155344,0,0x0,8
tick,0x7ffa19ab1d94,90171930,0,0x0,8
tick,0x7ffa19ab1d94,90187029,0,0x0,8
tick,0x7ffa19ab1d94,90202886,0,0x0,8
tick,0x7ffa19ab1d94,90218631,0,0x0,8
tick,0x7ffa19ab1d94,90234813,0,0x0,8
tick,0x7ffa19ab1d94,90250814,0,0x0,8
tick,0x7ffa19ab1d94,90266569,0,0x0,8
tick,0x7ffa19ab1d94,90282919,0,0x0,8
tick,0x7ffa19ab1d94,90298257,0,0x0,8
tick,0x7ffa19ab1d94,90313945,0,0x0,8
tick,0x7ffa19ab1d94,90329902,0,0x0,8
tick,0x7ffa19ab1d94,90345413,0,0x0,8
tick,0x7ffa19ab1d94,90361365,0,0x0,8
tick,0x7ffa19ab1d94,90376775,0,0x0,8
tick,0x7ffa19ab1d94,90392163,0,0x0,8
tick,0x7ffa19ab1d94,90407606,0,0x0,8
tick,0x7ffa19ab1d94,90423324,0,0x0,8
tick,0x7ffa19ab1d94,90438965,0,0x0,8
tick,0x7ffa19ab1d94,90453913,0,0x0,8
tick,0x7ffa19ab1d94,90469504,0,0x0,8
tick,0x7ffa19ab1d94,90484822,0,0x0,8
tick,0x7ffa19ab1d94,90501178,0,0x0,8
tick,0x7ffa19ab1d94,90517371,0,0x0,8
tick,0x7ffa19ab1d94,90532617,0,0x0,8
tick,0x7ffa19ab1d94,90548322,0,0x0,8
tick,0x7ffa19ab1d94,90563248,0,0x0,8
tick,0x7ffa19ab1d94,90579188,0,0x0,8
tick,0x7ffa19ab1d94,90595377,0,0x0,8
tick,0x7ffa19ab1d94,90610944,0,0x0,8
tick,0x7ffa19ab1d94,90626936,0,0x0,8
tick,0x7ffa19ab1d94,90642547,0,0x0,8
tick,0x7ffa19ab1d94,90657870,0,0x0,8
tick,0x7ffa19ab1d94,90673657,0,0x0,8
tick,0x7ffa19ab1d94,90689707,0,0x0,8
tick,0x7ffa19ab1d94,90705680,0,0x0,8
tick,0x7ffa19ab1d94,90722075,0,0x0,8
tick,0x7ffa19ab1d94,90737101,0,0x0,8
tick,0x7ffa19ab1d94,90752944,0,0x0,8
tick,0x7ffa19ab1d94,90768830,0,0x0,8
tick,0x7ffa19ab1d94,90784354,0,0x0,8
tick,0x7ffa19ab1d94,90800479,0,0x0,8
tick,0x7ffa19ab1d94,90815507,0,0x0,8
tick,0x7ffa19ab1d94,90831297,0,0x0,8
tick,0x7ffa19ab1d94,90846475,0,0x0,8
tick,0x7ffa19ab1d94,90862203,0,0x0,8
tick,0x7ffa19ab1d94,90877455,0,0x0,8
tick,0x7ffa19ab1d94,90893006,0,0x0,8
tick,0x7ffa19ab1d94,90908663,0,0x0,8
tick,0x7ffa19ab1d94,90924783,0,0x0,8
tick,0x7ffa19ab1d94,90940203,0,0x0,8
tick,0x7ffa19ab1d94,90955331,0,0x0,8
tick,0x7ffa19ab1d94,90970959,0,0x0,8
tick,0x7ffa19ab1d94,90986635,0,0x0,8
tick,0x7ffa19ab1d94,91002092,0,0x0,8
tick,0x7ffa19ab1d94,91017747,0,0x0,8
tick,0x7ffa19ab1d94,91033097,0,0x0,8
tick,0x7ffa19ab1d94,91048681,0,0x0,8
tick,0x7ffa19ab1d94,91064407,0,0x0,8
tick,0x7ffa19ab1d94,91079825,0,0x0,8
tick,0x7ffa19ab1d94,91095836,0,0x0,8
tick,0x7ffa19ab1d94,91111910,0,0x0,8
tick,0x7ffa19ab1d94,91127564,0,0x0,8
tick,0x7ffa19ab1d94,91143356,0,0x0,8
tick,0x7ffa19ab1d94,91158562,0,0x0,8
tick,0x7ffa19ab1d94,91173879,0,0x0,8
tick,0x7ffa19ab1d94,91189876,0,0x0,8
tick,0x7ffa19ab1d94,91205363,0,0x0,8
tick,0x7ffa19ab1d94,91220037,0,0x0,8
tick,0x7ffa19ab1d94,91236510,0,0x0,8
tick,0x7ffa19ab1d94,91251574,0,0x0,8
tick,0x7ffa19ab1d94,91268139,0,0x0,8
tick,0x7ffa19ab1d94,91282662,0,0x0,8
tick,0x7ffa19ab1d94,91297630,0,0x0,8
tick,0x7ffa19ab1d94,91313563,0,0x0,8
tick,0x7ffa19ab1d94,91329602,0,0x0,8
tick,0x7ffa19ab1d94,91344889,0,0x0,8
tick,0x7ffa19ab1d94,91360833,0,0x0,8
tick,0x7ffa19ab1d94,91376960,0,0x0,8
tick,0x7ffa19ab1d94,91393164,0,0x0,8
tick,0x7ffa19ab1d94,91407616,0,0x0,8
tick,0x7ffa19ab1d94,91423416,0,0x0,8
tick,0x7ffa19ab1d94,91438307,0,0x0,8
tick,0x7ffa19ab1d94,91453682,0,0x0,8
tick,0x7ffa19ab1d94,91469745,0,0x0,8
tick,0x7ffa19ab1d94,91485583,0,0x0,8
tick,0x7ffa19ab1d94,91501033,0,0x0,8
tick,0x7ffa19ab1d94,91517056,0,0x0,8
tick,0x7ffa19ab1d94,91533670,0,0x0,8
tick,0x7ffa19ab1d94,91549454,0,0x0,8
tick,0x7ffa19ab1d94,91563951,0,0x0,8
tick,0x7ffa19ab1d94,91579484,0,0x0,8
tick,0x7ffa19ab1d94,91595059,0,0x0,8
tick,0x7ffa19ab1d94,91611755,0,0x0,8
tick,0x7ffa19ab1d94,91627553,0,0x0,8
tick,0x7ffa19ab1d94,91643218,0,0x0,8
tick,0x7ffa19ab1d94,91659202,0,0x0,8
tick,0x7ffa19ab1d94,91675058,0,0x0,8
tick,0x7ffa19ab1d94,91690876,0,0x0,8
tick,0x7ffa19ab1d94,91707027,0,0x0,8
tick,0x7ffa19ab1d94,91722651,0,0x0,8
tick,0x7ffa19ab1d94,91738639,0,0x0,8
tick,0x7ffa19ab1d94,91754656,0,0x0,8
tick,0x7ffa19ab1d94,91770331,0,0x0,8
tick,0x7ffa19ab1d94,91786193,0,0x0,8
tick,0x7ffa19ab1d94,91801599,0,0x0,8
tick,0x7ffa19ab1d94,91817174,0,0x0,8
tick,0x7ffa19ab1d94,91839631,0,0x0,8
tick,0x7ffa19ab1d94,91849845,0,0x0,8
tick,0x7ffa19ab1d94,91863558,0,0x0,8
tick,0x7ffa19ab1d94,91879280,0,0x0,8
tick,0x7ffa19ab1d94,91894974,0,0x0,8
tick,0x7ffa19ab1d94,91910656,0,0x0,8
tick,0x7ffa19ab1d94,91925485,0,0x0,8
tick,0x7ffa19ab1d94,91940874,0,0x0,8
tick,0x7ffa19ab1d94,91956435,0,0x0,8
tick,0x7ffa19ab1d94,91971801,0,0x0,8
tick,0x7ffa19ab1d94,91987198,0,0x0,8
tick,0x7ffa19ab1d94,92002624,0,0x0,8
tick,0x7ffa19ab1d94,92017782,0,0x0,8
tick,0x7ffa19ab1d94,92034071,0,0x0,8
tick,0x7ffa19ab1d94,92049195,0,0x0,8
tick,0x7ffa19ab1d94,92064333,0,0x0,8
tick,0x7ffa19ab1d94,92079589,0,0x0,8
tick,0x7ffa19ab1d94,92094614,0,0x0,8
tick,0x7ffa19ab1d94,92110795,0,0x0,8
tick,0x7ffa19ab1d94,92126271,0,0x0,8
tick,0x7ffa19ab1d94,92141436,0,0x0,8
tick,0x7ffa19ab1d94,92157158,0,0x0,8
tick,0x7ffa19ab1d94,92172991,0,0x0,8
tick,0x7ffa19ab1d94,92188199,0,0x0,8
tick,0x7ffa19ab1d94,92203670,0,0x0,8
tick,0x7ffa19ab1d94,92219141,0,0x0,8
tick,0x7ffa19ab1d94,92234670,0,0x0,8
tick,0x7ffa19ab1d94,92250810,0,0x0,8
tick,0x7ffa19ab1d94,92266679,0,0x0,8
tick,0x7ffa19ab1d94,92282720,0,0x0,8
tick,0x7ffa19ab1d94,92298603,0,0x0,8
tick,0x7ffa19ab1d94,92314530,0,0x0,8
tick,0x7ffa19ab1d94,92329932,0,0x0,8
tick,0x7ffa19ab1d94,92345308,0,0x0,8
tick,0x7ffa19ab1d94,92360812,0,0x0,8
tick,0x7ffa19ab1d94,92376827,0,0x0,8
tick,0x7ffa19ab1d94,92392993,0,0x0,8
tick,0x7ffa19ab1d94,92408654,0,0x0,8
tick,0x7ffa19ab1d94,92424022,0,0x0,8
tick,0x7ffa19ab1d94,92439715,0,0x0,8
tick,0x7ffa19ab1d94,92454877,0,0x0,8
tick,0x7ffa19ab1d94,92470814,0,0x0,8
tick,0x7ffa19ab1d94,92486497,0,0x0,8
tick,0x7ffa19ab1d94,92502514,0,0x0,8
tick,0x7ffa19ab1d94,92517998,0,0x0,8
tick,0x7ffa19ab1d94,92533813,0,0x0,8
tick,0x7ffa19ab1d94,92549355,0,0x0,8
tick,0x7ffa19ab1d94,92565051,0,0x0,8
tick,0x7ffa19ab1d94,92580230,0,0x0,8
tick,0x7ffa19ab1d94,92594648,0,0x0,8
tick,0x7ffa19ab1d94,92610825,0,0x0,8
tick,0x7ffa19ab1d94,92626871,0,0x0,8
tick,0x7ffa19ab1d94,92643065,0,0x0,8
tick,0x7ffa19ab1d94,92657322,0,0x0,8
tick,0x7ffa19ab1d94,92672840,0,0x0,8
tick,0x7ffa19ab1d94,92688084,0,0x0,8
tick,0x7ffa19ab1d94,92703237,0,0x0,8
tick,0x7ffa19ab1d94,92719194,0,0x0,8
tick,0x7ffa19ab1d94,92734835,0,0x0,8
tick,0x7ffa19ab1d94,92750220,0,0x0,8
tick,0x7ffa19ab1d94,92766505,0,0x0,8
tick,0x7ffa19ab1d94,92781784,0,0x0,8
tick,0x7ffa19ab1d94,92797113,0,0x0,8
tick,0x7ffa19ab1d94,92812533,0,0x0,8
tick,0x7ffa19ab1d94,92827956,0,0x0,8
tick,0x7ffa19ab1d94,92843756,0,0x0,8
tick,0x7ffa19ab1d94,92859356,0,0x0,8
tick,0x7ffa19ab1d94,92874889,0,0x0,8
tick,0x7ffa19ab1d94,92890813,0,0x0,8
tick,0x7ffa19ab1d94,92906009,0,0x0,8
tick,0x7ffa19ab1d94,92921376,0,0x0,8
tick,0x7ffa19ab1d94,92937516,0,0x0,8
tick,0x7ffa19ab1d94,92952748,0,0x0,8
tick,0x7ffa19ab1d94,92968720,0,0x0,8
tick,0x7ffa19ab1d94,92984719,0,0x0,8
tick,0x7ffa19ab1d94,93000619,0,0x0,8
tick,0x7ffa19ab1d94,93015943,0,0x0,8
tick,0x7ffa19ab1d94,93031693,0,0x0,8
tick,0x7ffa19ab1d94,93047446,0,0x0,8
tick,0x7ffa19ab1d94,93062636,0,0x0,8
tick,0x7ffa19ab1d94,93078138,0,0x0,8
tick,0x7ffa19ab1d94,93093497,0,0x0,8
tick,0x7ffa19ab1d94,93108940,0,0x0,8
tick,0x7ffa19ab1d94,93124064,0,0x0,8
tick,0x7ffa19ab1d94,93139477,0,0x0,8
tick,0x7ffa19ab1d94,93154633,0,0x0,8
tick,0x7ffa19ab1d94,93169813,0,0x0,8
tick,0x7ffa19ab1d94,93185262,0,0x0,8
tick,0x7ffa19ab1d94,93200175,0,0x0,8
tick,0x7ffa19ab1d94,93215358,0,0x0,8
tick,0x7ffa19ab1d94,93231390,0,0x0,8
tick,0x7ffa19ab1d94,93246520,0,0x0,8
tick,0x7ffa19ab1d94,93262098,0,0x0,8
tick,0x7ffa19ab1d94,93277769,0,0x0,8
tick,0x7ffa19ab1d94,93292906,0,0x0,8
tick,0x7ffa19ab1d94,93308240,0,0x0,8
tick,0x7ffa19ab1d94,93324158,0,0x0,8
tick,0x7ffa19ab1d94,93339629,0,0x0,8
tick,0x7ffa19ab1d94,93354820,0,0x0,8
tick,0x7ffa19ab1d94,93370934,0,0x0,8
tick,0x7ffa19ab1d94,93386236,0,0x0,8
tick,0x7ffa19ab1d94,93401557,0,0x0,8
tick,0x7ffa19ab1d94,93417439,0,0x0,8
tick,0x7ffa19ab1d94,93433596,0,0x0,8
tick,0x7ffa19ab1d94,93449612,0,0x0,8
tick,0x7ffa19ab1d94,93465503,0,0x0,8
tick,0x7ffa19ab1d94,93480333,0,0x0,8
tick,0x7ffa19ab1d94,93496241,0,0x0,8
tick,0x7ffa19ab1d94,93511887,0,0x0,8
tick,0x7ffa19ab1d94,93527742,0,0x0,8
tick,0x7ffa19ab1d94,93542850,0,0x0,8
tick,0x7ffa19ab1d94,93558223,0,0x0,8
tick,0x7ffa19ab1d94,93573917,0,0x0,8
tick,0x7ffa19ab1d94,93589863,0,0x0,8
tick,0x7ffa19ab1d94,93605416,0,0x0,8
tick,0x7ffa19ab1d94,93621406,0,0x0,8
tick,0x7ffa19ab1d94,93637291,0,0x0,8
tick,0x7ffa19ab1d94,93653043,0,0x0,8
tick,0x7ffa19ab1d94,93668869,0,0x0,8
tick,0x7ffa19ab1d94,93684000,0,0x0,8
tick,0x7ffa19ab1d94,93699720,0,0x0,8
tick,0x7ffa19ab1d94,93715352,0,0x0,8
tick,0x7ffa19ab1d94,93731257,0,0x0,8
tick,0x7ffa19ab1d94,93747762,0,0x0,8
tick,0x7ffa19ab1d94,93762688,0,0x0,8
tick,0x7ffa19ab1d94,93783294,0,0x0,8
tick,0x7ffa19ab1d94,93793674,0,0x0,8
tick,0x7ffa19ab1d94,93809675,0,0x0,8
tick,0x7ffa19ab1d94,93824978,0,0x0,8
tick,0x7ffa19ab1d94,93844468,0,0x0,8
tick,0x7ffa19ab1d94,93865355,0,0x0,8
tick,0x7ffa19ab1d94,93875342,0,0x0,8
tick,0x7ffa19ab1d94,93890112,0,0x0,8
tick,0x7ffa19ab1d94,93906446,0,0x0,8
tick,0x7ffa19ab1d94,93922465,0,0x0,8
tick,0x7ffa19ab1d94,93940296,0,0x0,8
tick,0x7ffa19ab1d94,93951699,0,0x0,8
tick,0x7ffa19ab1d94,93967801,0,0x0,8
tick,0x7ffa19ab1d94,93982820,0,0x0,8
tick,0x7ffa19ab1d94,93999965,0,0x0,8
tick,0x7ffa19ab1d94,94014624,0,0x0,8
tick,0x7ffa19ab1d94,94031367,0,0x0,8
tick,0x7ffa19ab1d94,94046985,0,0x0,8
tick,0x7ffa19ab1d94,94062462,0,0x0,8
tick,0x7ffa19ab1d94,94077660,0,0x0,8
tick,0x7ffa19ab1d94,94093686,0,0x0,8
tick,0x7ffa19ab1d94,94108812,0,0x0,8
tick,0x7ffa19ab1d94,94124249,0,0x0,8
tick,0x7ffa19ab1d94,94140631,0,0x0,8
tick,0x7ffa19ab1d94,94156727,0,0x0,8
tick,0x7ffa19ab1d94,94171567,0,0x0,8
tick,0x7ffa19ab1d94,94187985,0,0x0,8
tick,0x7ffa19ab1d94,94202514,0,0x0,8
tick,0x7ffa19ab1d94,94217849,0,0x0,8
tick,0x7ffa19ab1d94,94233734,0,0x0,8
tick,0x7ffa19ab1d94,94249181,0,0x0,8
tick,0x7ffa19ab1d94,94265130,0,0x0,8
tick,0x7ffa19ab1d94,94281835,0,0x0,8
tick,0x7ffa19ab1d94,94295923,0,0x0,8
tick,0x7ffa19ab1d94,94311696,0,0x0,8
tick,0x7ffa19ab1d94,94326658,0,0x0,8
tick,0x7ffa19ab1d94,94342015,0,0x0,8
tick,0x7ffa19ab1d94,94357626,0,0x0,8
tick,0x7ffa19ab1d94,94372715,0,0x0,8
tick,0x7ffa19ab1d94,94388489,0,0x0,8
tick,0x7ffa19ab1d94,94404282,0,0x0,8
tick,0x7ffa19ab1d94,94419449,0,0x0,8
tick,0x7ffa19ab1d94,94434882,0,0x0,8
tick,0x7ffa19ab1d94,94450111,0,0x0,8
tick,0x7ffa19ab1d94,94465642,0,0x0,8
tick,0x7ffa19ab1d94,94480631,0,0x0,8
tick,0x7ffa19ab1d94,94496236,0,0x0,8
tick,0x7ffa19ab1d94,94511920,0,0x0,8
tick,0x7ffa19ab1d94,94527571,0,0x0,8
tick,0x7ffa19ab1d94,94543024,0,0x0,8
tick,0x7ffa19ab1d94,94558588,0,0x0,8
tick,0x7ffa19ab1d94,94574570,0,0x0,8
tick,0x7ffa19ab1d94,94590501,0,0x0,8
tick,0x7ffa19ab1d94,94605806,0,0x0,8
tick,0x7ffa19ab1d94,94621905,0,0x0,8
tick,0x7ffa19ab1d94,94637704,0,0x0,8
tick,0x7ffa19ab1d94,94653545,0,0x0,8
tick,0x7ffa19ab1d94,94668740,0,0x0,8
tick,0x7ffa19ab1d94,94684557,0,0x0,8
tick,0x7ffa19ab1d94,94699742,0,0x0,8
tick,0x7ffa19ab1d94,94714534,0,0x0,8
tick,0x7ffa19ab1d94,94730032,0,0x0,8
tick,0x7ffa19ab1d94,94746605,0,0x0,8
tick,0x7ffa19ab1d94,94761899,0,0x0,8
tick,0x7ffa19ab1d94,94777270,0,0x0,8
tick,0x7ffa19ab1d94,94794395,0,0x0,8
tick,0x7ffa19ab1d94,94808775,0,0x0,8
tick,0x7ffa19ab1d94,94824028,0,0x0,8
tick,0x7ffa19ab1d94,94840236,0,0x0,8
tick,0x7ffa19ab1d94,94855289,0,0x0,8
tick,0x7ffa19ab1d94,94870475,0,0x0,8
tick,0x7ffa19ab1d94,94886407,0,0x0,8
tick,0x7ffa19ab1d94,94901978,0,0x0,8
tick,0x7ffa19ab1d94,94918128,0,0x0,8
tick,0x7ffa19ab1d94,94934715,0,0x0,8
tick,0x7ffa19ab1d94,94949503,0,0x0,8
tick,0x7ffa19ab1d94,94965204,0,0x0,8
tick,0x7ffa19ab1d94,94980525,0,0x0,8
tick,0x7ffa19ab1d94,94997471,0,0x0,8
tick,0x7ffa19ab1d94,95011496,0,0x0,8
tick,0x7ffa19ab1d94,95027460,0,0x0,8
tick,0x7ffa19ab1d94,95043216,0,0x0,8
tick,0x7ffa19ab1d94,95058524,0,0x0,8
tick,0x7ffa19ab1d94,95074234,0,0x0,8
tick,0x7ffa19ab1d94,95089693,0,0x0,8
tick,0x7ffa19ab1d94,95105654,0,0x0,8
tick,0x7ffa19ab1d94,95121574,0,0x0,8
tick,0x7ffa19ab1d94,95137046,0,0x0,8
tick,0x7ffa19ab1d94,95152623,0,0x0,8
tick,0x7ffa19ab1d94,95168247,0,0x0,8
tick,0x7ffa19ab1d94,95183677,0,0x0,8
tick,0x7ffa19ab1d94,95199386,0,0x0,8
tick,0x7ffa19ab1d94,95214546,0,0x0,8
tick,0x7ffa19ab1d94,95230125,0,0x0,8
tick,0x7ffa19ab1d94,95245906,0,0x0,8
tick,0x7ffa19ab1d94,95261532,0,0x0,8
tick,0x7ffa19ab1d94,95276274,0,0x0,8
tick,0x7ffa19ab1d94,95291650,0,0x0,8
tick,0x7ffa19ab1d94,95306802,0,0x0,8
tick,0x7ffa19ab1d94,95322170,0,0x0,8
tick,0x7ffa19ab1d94,95337239,0,0x0,8
tick,0x7ffa19ab1d94,95353174,0,0x0,8
tick,0x7ffa19ab1d94,95369654,0,0x0,8
tick,0x7ffa19ab1d94,95384364,0,0x0,8
tick,0x7ffa19ab1d94,95400009,0,0x0,8
tick,0x7ffa19ab1d94,95416053,0,0x0,8
tick,0x7ffa19ab1d94,95433888,0,0x0,8
tick,0x7ffa19ab1d94,95451471,0,0x0,8
tick,0x7ffa19ab1d94,95467047,0,0x0,8
tick,0x7ffa19ab1d94,95484087,0,0x0,8
tick,0x7ffa19ab1d94,95493828,0,0x0,8
tick,0x7ffa19ab1d94,95509610,0,0x0,8
tick,0x7ffa19ab1d94,95524973,0,0x0,8
tick,0x7ffa19ab1d94,95541675,0,0x0,8
tick,0x7ffa19ab1d94,95557068,0,0x0,8
tick,0x7ffa19ab1d94,95572696,0,0x0,8
tick,0x7ffa19ab1d94,95587691,0,0x0,8
tick,0x7ffa19ab1d94,95604585,0,0x0,8
tick,0x7ffa19ab1d94,95618489,0,0x0,8
tick,0x7ffa19ab1d94,95634212,0,0x0,8
tick,0x7ffa19ab1d94,95649537,0,0x0,8
tick,0x7ffa19ab1d94,95666477,0,0x0,8
tick,0x7ffa19ab1d94,95682570,0,0x0,8
tick,0x7ffa19ab1d94,95698725,0,0x0,8
tick,0x7ffa19ab1d94,95717674,0,0x0,8
tick,0x7ffa19ab1d94,95728893,0,0x0,8
tick,0x7ffa19ab1d94,95747441,0,0x0,8
tick,0x7ffa19ab1d94,95760318,0,0x0,8
tick,0x7ffa19ab1d94,95775927,0,0x0,8
tick,0x7ffa19ab1d94,95791891,0,0x0,8
tick,0x7ffa19ab1d94,95807577,0,0x0,8
tick,0x7ffa19ab1d94,95822351,0,0x0,8
tick,0x7ffa19ab1d94,95837995,0,0x0,8
tick,0x7ffa19ab1d94,95853883,0,0x0,8
tick,0x7ffa19ab1d94,95868936,0,0x0,8
tick,0x7ffa19ab1d94,95885166,0,0x0,8
tick,0x7ffa19ab1d94,95901237,0,0x0,8
tick,0x7ffa19ab1d94,95917754,0,0x0,8
tick,0x7ffa19ab1d94,95933912,0,0x0,8
tick,0x7ffa19ab1d94,95951302,0,0x0,8
tick,0x7ffa19ab1d94,95964353,0,0x0,8
tick,0x7ffa19ab1d94,95980398,0,0x0,8
tick,0x7ffa19ab1d94,95997562,0,0x0,8
tick,0x7ffa19ab1d94,96010567,0,0x0,8
tick,0x7ffa19ab1d94,96026584,0,0x0,8
tick,0x7ffa19ab1d94,96041677,0,0x0,8
tick,0x7ffa19ab1d94,96057082,0,0x0,8
tick,0x7ffa19ab1d94,96073017,0,0x0,8
tick,0x7ffa19ab1d94,96088105,0,0x0,8
tick,0x7ffa19ab1d94,96103774,0,0x0,8
tick,0x7ffa19ab1d94,96119232,0,0x0,8
tick,0x7ffa19ab1d94,96134489,0,0x0,8
tick,0x7ffa19ab1d94,96150144,0,0x0,8
tick,0x7ffa19ab1d94,96165697,0,0x0,8
tick,0x7ffa19ab1d94,96183599,0,0x0,8
tick,0x7ffa19ab1d94,96197621,0,0x0,8
tick,0x7ffa19ab1d94,96214409,0,0x0,8
tick,0x7ffa19ab1d94,96228541,0,0x0,8
tick,0x7ffa19ab1d94,96244039,0,0x0,8
tick,0x7ffa19ab1d94,96259930,0,0x0,8
tick,0x7ffa19ab1d94,96275305,0,0x0,8
tick,0x7ffa19ab1d94,96291240,0,0x0,8
tick,0x7ffa19ab1d94,96306834,0,0x0,8
tick,0x7ffa19ab1d94,96321463,0,0x0,8
tick,0x7ffa19ab1d94,96337289,0,0x0,8
tick,0x7ffa19ab1d94,96352712,0,0x0,8
tick,0x7ffa19ab1d94,96368228,0,0x0,8
tick,0x7ffa19ab1d94,96383284,0,0x0,8
tick,0x7ffa19ab1d94,96398916,0,0x0,8
tick,0x7ffa19ab1d94,96415856,0,0x0,8
tick,0x7ffa19ab1d94,96431649,0,0x0,8
tick,0x7ffa19ab1d94,96445898,0,0x0,8
tick,0x7ffa19ab1d94,96463519,0,0x0,8
tick,0x7ffa19ab1d94,96496391,0,0x0,8
tick,0x7ffa19ab1d94,96517311,0,0x0,8
tick,0x7ffa19ab1d94,96534088,0,0x0,8
tick,0x7ffa19ab1d94,96545310,0,0x0,8
tick,0x7ffa19ab1d94,96557781,0,0x0,8
tick,0x7ffa19ab1d94,96571679,0,0x0,8
tick,0x7ffa19ab1d94,96588292,0,0x0,8
tick,0x7ffa19ab1d94,96603591,0,0x0,8
tick,0x7ffa19ab1d94,96618889,0,0x0,8
tick,0x7ffa19ab1d94,96634665,0,0x0,8
tick,0x7ffa19ab1d94,96651177,0,0x0,8
tick,0x7ffa19ab1d94,96665981,0,0x0,8
tick,0x7ffa19ab1d94,96684434,0,0x0,8
tick,0x7ffa19ab1d94,96699760,0,0x0,8
tick,0x7ffa19ab1d94,96715234,0,0x0,8
tick,0x7ffa19ab1d94,96731907,0,0x0,8
tick,0x7ffa19ab1d94,96746181,0,0x0,8
tick,0x7ffa19ab1d94,96759458,0,0x0,8
tick,0x7ffa19ab1d94,96774865,0,0x0,8
tick,0x7ffa19ab1d94,96790126,0,0x0,8
tick,0x7ffa19ab1d94,96805724,0,0x0,8
tick,0x7ffa19ab1d94,96823137,0,0x0,8
tick,0x7ffa19ab1d94,96835948,0,0x0,8
tick,0x7ffa19ab1d94,96852486,0,0x0,8
tick,0x7ffa19ab1d94,96867308,0,0x0,8
tick,0x7ffa19ab1d94,96883267,0,0x0,8
tick,0x7ffa19ab1d94,96900819,0,0x0,8
tick,0x7ffa19ab1d94,96913955,0,0x0,8
tick,0x7ffa19ab1d94,96930333,0,0x0,8
tick,0x7ffa19ab1d94,96946720,0,0x0,8
tick,0x7ffa19ab1d94,96965018,0,0x0,8
tick,0x7ffa19ab1d94,96976550,0,0x0,8
tick,0x7ffa19ab1d94,96992062,0,0x0,8
tick,0x7ffa19ab1d94,97008851,0,0x0,8
tick,0x7ffa19ab1d94,97022916,0,0x0,8
tick,0x7ffa19ab1d94,97038654,0,0x0,8
tick,0x7ffa19ab1d94,97053691,0,0x0,8
tick,0x7ffa19ab1d94,97069708,0,0x0,8
tick,0x7ffa19ab1d94,97084734,0,0x0,8
tick,0x7ffa19ab1d94,97106191,0,0x0,8
tick,0x7ffa19ab1d94,97116395,0,0x0,8
tick,0x7ffa19ab1d94,97131867,0,0x0,8
tick,0x7ffa19ab1d94,97148870,0,0x0,8
tick,0x7ffa19ab1d94,97163974,0,0x0,8
tick,0x7ffa19ab1d94,97179309,0,0x0,8
tick,0x7ffa19ab1d94,97197626,0,0x0,8
tick,0x7ffa19ab1d94,97212414,0,0x0,8
tick,0x7ffa19ab1d94,97228904,0,0x0,8
tick,0x7ffa19ab1d94,97242761,0,0x0,8
tick,0x7ffa19ab1d94,97257880,0,0x0,8
tick,0x7ffa19ab1d94,97274652,0,0x0,8
tick,0x7ffa19ab1d94,97289130,0,0x0,8
tick,0x7ffa19ab1d94,97305531,0,0x0,8
tick,0x7ffa19ab1d94,97324127,0,0x0,8
tick,0x7ffa19ab1d94,97341096,0,0x0,8
tick,0x7ffa19ab1d94,97353007,0,0x0,8
tick,0x7ffa19ab1d94,97371129,0,0x0,8
tick,0x7ffa19ab1d94,97384903,0,0x0,8
tick,0x7ffa19ab1d94,97398506,0,0x0,8
tick,0x7ffa19ab1d94,97415092,0,0x0,8
tick,0x7ffa19ab1d94,97453148,0,0x0,8
tick,0x7ffa19ab1d94,97466646,0,0x0,8
tick,0x7ffa19ab1d94,97481374,0,0x0,8
tick,0x7ffa19ab1d94,97500563,0,0x0,8
tick,0x7ffa19ab1d94,97506376,0,0x0,8
tick,0x7ffa19ab1d94,97524143,0,0x0,8
tick,0x7ffa19ab1d94,97544849,0,0x0,8
tick,0x7ffa19ab1d94,97558069,0,0x0,8
tick,0x7ffa19ab1d94,97571336,0,0x0,8
tick,0x7ffa19ab1d94,97585774,0,0x0,8
tick,0x7ffa19ab1d94,97599381,0,0x0,8
tick,0x7ffa19ab1d94,97616076,0,0x0,8
tick,0x7ffa19ab1d94,97633021,0,0x0,8
tick,0x7ffa19ab1d94,97649054,0,0x0,8
tick,0x7ffa19ab1d94,97663058,0,0x0,8
tick,0x7ffa19ab1d94,97684706,0,0x0,8
tick,0x7ffa19ab1d94,97701443,0,0x0,8
tick,0x7ffa19ab1d94,97711685,0,0x0,8
tick,0x7ffa19ab1d94,97725145,0,0x0,8
tick,0x7ffa19ab1d94,97740986,0,0x0,8
tick,0x7ffa19ab1d94,97758034,0,0x0,8
tick,0x7ffa19ab1d94,97773538,0,0x0,8
tick,0x7ffa19ab1d94,97788414,0,0x0,8
tick,0x7ffa19ab1d94,97803576,0,0x0,8
tick,0x7ffa19ab1d94,97819227,0,0x0,8
tick,0x7ffa19ab1d94,97835214,0,0x0,8
tick,0x7ffa19ab1d94,97849935,0,0x0,8
tick,0x7ffa19ab1d94,97865459,0,0x0,8
tick,0x7ffa19ab1d94,97881765,0,0x0,8
tick,0x7ffa19ab1d94,97897713,0,0x0,8
tick,0x7ffa19ab1d94,97913627,0,0x0,8
tick,0x7ffa19ab1d94,97929119,0,0x0,8
tick,0x7ffa19ab1d94,97945419,0,0x0,8
tick,0x7ffa19ab1d94,97961018,0,0x0,8
tick,0x7ffa19ab1d94,97977839,0,0x0,8
tick,0x7ffa19ab1d94,97992414,0,0x0,8
tick,0x7ffa19ab1d94,98007841,0,0x0,8
tick,0x7ffa19ab1d94,98022721,0,0x0,8
tick,0x7ffa19ab1d94,98038514,0,0x0,8
tick,0x7ffa19ab1d94,98054021,0,0x0,8
tick,0x7ffa19ab1d94,98069699,0,0x0,8
tick,0x7ffa19ab1d94,98086611,0,0x0,8
tick,0x7ffa19ab1d94,98105759,0,0x0,8
tick,0x7ffa19ab1d94,98117196,0,0x0,8
tick,0x7ffa19ab1d94,98133323,0,0x0,8
tick,0x7ffa19ab1d94,98148274,0,0x0,8
tick,0x7ffa19ab1d94,98163729,0,0x0,8
tick,0x7ffa19ab1d94,98180117,0,0x0,8
tick,0x7ffa19ab1d94,98195877,0,0x0,8
tick,0x7ffa19ab1d94,98210854,0,0x0,8
tick,0x7ffa19ab1d94,98227131,0,0x0,8
tick,0x7ffa19ab1d94,98243061,0,0x0,8
tick,0x7ffa19ab1d94,98258764,0,0x0,8
tick,0x7ffa19ab1d94,98274715,0,0x0,8
tick,0x7ffa19ab1d94,98290348,0,0x0,8
tick,0x7ffa19ab1d94,98305736,0,0x0,8
tick,0x7ffa19ab1d94,98321352,0,0x0,8
tick,0x7ffa19ab1d94,98336725,0,0x0,8
tick,0x7ffa19ab1d94,98352785,0,0x0,8
tick,0x7ffa19ab1d94,98367912,0,0x0,8
tick,0x7ffa19ab1d94,98383062,0,0x0,8
tick,0x7ffa19ab1d94,98398690,0,0x0,8
tick,0x7ffa19ab1d94,98414734,0,0x0,8
tick,0x7ffa19ab1d94,98430171,0,0x0,8
tick,0x7ffa19ab1d94,98445969,0,0x0,8
tick,0x7ffa19ab1d94,98462089,0,0x0,8
tick,0x7ffa19ab1d94,98477792,0,0x0,8
tick,0x7ffa19ab1d94,98493595,0,0x0,8
tick,0x7ffa19ab1d94,98513336,0,0x0,8
tick,0x7ffa19ab1d94,98524876,0,0x0,8
tick,0x7ffa19ab1d94,98541184,0,0x0,8
tick,0x7ffa19ab1d94,98556930,0,0x0,8
tick,0x7ffa19ab1d94,98573197,0,0x0,8
tick,0x7ffa19ab1d94,98588568,0,0x0,8
tick,0x7ffa19ab1d94,98603552,0,0x0,8
tick,0x7ffa19ab1d94,98619364,0,0x0,8
tick,0x7ffa19ab1d94,98634570,0,0x0,8
tick,0x7ffa19ab1d94,98649865,0,0x0,8
tick,0x7ffa19ab1d94,98665504,0,0x0,8
tick,0x7ffa19ab1d94,98680620,0,0x0,8
tick,0x7ffa19ab1d94,98696274,0,0x0,8
tick,0x7ffa19ab1d94,98711648,0,0x0,8
tick,0x7ffa19ab1d94,98727529,0,0x0,8
tick,0x7ffa19ab1d94,98742945,0,0x0,8
tick,0x7ffa19ab1d94,98759127,0,0x0,8
tick,0x7ffa19ab1d94,98774782,0,0x0,8
tick,0x7ffa19ab1d94,98790720,0,0x0,8
tick,0x7ffa19ab1d94,98806649,0,0x0,8
tick,0x7ffa19ab1d94,98822393,0,0x0,8
tick,0x7ffa19ab1d94,98838430,0,0x0,8
tick,0x7ffa19ab1d94,98853973,0,0x0,8
tick,0x7ffa19ab1d94,98869166,0,0x0,8
tick,0x7ffa19ab1d94,98884698,0,0x0,8
tick,0x7ffa19ab1d94,98900345,0,0x0,8
tick,0x7ffa19ab1d94,98915670,0,0x0,8
tick,0x7ffa19ab1d94,98932485,0,0x0,8
tick,0x7ffa19ab1d94,98947892,0,0x0,8
tick,0x7ffa19ab1d94,98973280,0,0x0,8
tick,0x7ffa19ab1d94,98981746,0,0x0,8
tick,0x7ffa19ab1d94,99003982,0,0x0,8
tick,0x7ffa19ab1d94,99015437,0,0x0,8
tick,0x7ffa19ab1d94,99035495,0,0x0,8
tick,0x7ffa19ab1d94,99050433,0,0x0,8
tick,0x7ffa19ab1d94,99062440,0,0x0,8
tick,0x7ffa19ab1d94,99077705,0,0x0,8
tick,0x7ffa19ab1d94,99090288,0,0x0,8
tick,0x7ffa19ab1d94,99118266,0,0x0,8
tick,0x7ffa19ab1d94,99122320,0,0x0,8
tick,0x7ffa19ab1d94,99136703,0,0x0,8
tick,0x7ffa19ab1d94,99154106,0,0x0,8
tick,0x7ffa19ab1d94,99169747,0,0x0,8
tick,0x7ffa19ab1d94,99185825,0,0x0,8
tick,0x7ffa19ab1d94,99199751,0,0x0,8
tick,0x7ffa19ab1d94,99215468,0,0x0,8
tick,0x7ffa19ab1d94,99228782,0,0x0,8
tick,0x7ffa19ab1d94,99244967,0,0x0,8
tick,0x7ffa19ab1d94,99261969,0,0x0,8
tick,0x7ffa19ab1d94,99278878,0,0x0,8
tick,0x7ffa19ab1d94,99295272,0,0x0,8
tick,0x7ffa19ab1d94,99307369,0,0x0,8
tick,0x7ffa19ab1d94,99322608,0,0x0,8
tick,0x7ffa19ab1d94,99337889,0,0x0,8
tick,0x7ffa19ab1d94,99352863,0,0x0,8
tick,0x7ffa19ab1d94,99368610,0,0x0,8
tick,0x7ffa19ab1d94,99384613,0,0x0,8
tick,0x7ffa19ab1d94,99400052,0,0x0,8
tick,0x7ffa19ab1d94,99415249,0,0x0,8
tick,0x7ffa19ab1d94,99430582,0,0x0,8
tick,0x7ffa19ab1d94,99449456,0,0x0,8
tick,0x7ffa19ab1d94,99462187,0,0x0,8
tick,0x7ffa19ab1d94,99478294,0,0x0,8
tick,0x7ffa19ab1d94,99494914,0,0x0,8
tick,0x7ffa19ab1d94,99514808,0,0x0,8
tick,0x7ffa19ab1d94,99524091,0,0x0,8
tick,0x7ffa19ab1d94,99537966,0,0x0,8
tick,0x7ffa19ab1d94,99553188,0,0x0,8
tick,0x7ffa19ab1d94,99568975,0,0x0,8
tick,0x7ffa19ab1d94,99583928,0,0x0,8
tick,0x7ffa19ab1d94,99599359,0,0x0,8
tick,0x7ffa19ab1d94,99614697,0,0x0,8
tick,0x7ffa19ab1d94,99631025,0,0x0,8
tick,0x7ffa19ab1d94,99645724,0,0x0,8
tick,0x7ffa19ab1d94,99662054,0,0x0,8
tick,0x7ffa19ab1d94,99677991,0,0x0,8
tick,0x7ffa19ab1d94,99694284,0,0x0,8
tick,0x7ffa19ab1d94,99710447,0,0x0,8
tick,0x7ffa19ab1d94,99727740,0,0x0,8
tick,0x7ffa19ab1d94,99740659,0,0x0,8
tick,0x7ffa19ab1d94,99756354,0,0x0,8
tick,0x7ffa19ab1d94,99771581,0,0x0,8
tick,0x7ffa19ab1d94,99787230,0,0x0,8
tick,0x7ffa19ab1d94,99802689,0,0x0,8
tick,0x7ffa19ab1d94,99818011,0,0x0,8
tick,0x7ffa19ab1d94,99834196,0,0x0,8
tick,0x7ffa19ab1d94,99850157,0,0x0,8
tick,0x7ffa19ab1d94,99865734,0,0x0,8
tick,0x7ffa19ab1d94,99881457,0,0x0,8
tick,0x7ffa19ab1d94,99896673,0,0x0,8
tick,0x7ffa19ab1d94,99912146,0,0x0,8
tick,0x7ffa19ab1d94,99927826,0,0x0,8
tick,0x7ffa19ab1d94,99944404,0,0x0,8
tick,0x7ffa19ab1d94,99960070,0,0x0,8
tick,0x7ffa19ab1d94,99972907,0,0x0,8
tick,0x7ffa19ab1d94,99988492,0,0x0,8
tick,0x7ffa19ab1d94,100004394,0,0x0,8
tick,0x7ffa19ab1d94,100019879,0,0x0,8
tick,0x7ffa19ab1d94,100035350,0,0x0,8
tick,0x7ffa19ab1d94,100050664,0,0x0,8
tick,0x7ffa19ab1d94,100065999,0,0x0,8
tick,0x7ffa19ab1d94,100081589,0,0x0,8
tick,0x7ffa19ab1d94,100097115,0,0x0,8
tick,0x7ffa19ab1d94,100113022,0,0x0,8
tick,0x7ffa19ab1d94,100128131,0,0x0,8
tick,0x7ffa19ab1d94,100144007,0,0x0,8
tick,0x7ffa19ab1d94,100159587,0,0x0,8
tick,0x7ffa19ab1d94,100174762,0,0x0,8
tick,0x7ffa19ab1d94,100190372,0,0x0,8
tick,0x7ffa19ab1d94,100206425,0,0x0,8
tick,0x7ffa19ab1d94,100221878,0,0x0,8
tick,0x7ffa19ab1d94,100237447,0,0x0,8
tick,0x7ffa19ab1d94,100252725,0,0x0,8
tick,0x7ffa19ab1d94,100268401,0,0x0,8
tick,0x7ffa19ab1d94,100284484,0,0x0,8
tick,0x7ffa19ab1d94,100300372,0,0x0,8
tick,0x7ffa19ab1d94,100315826,0,0x0,8
tick,0x7ffa19ab1d94,100331864,0,0x0,8
tick,0x7ffa19ab1d94,100347422,0,0x0,8
tick,0x7ffa19ab1d94,100363098,0,0x0,8
tick,0x7ffa19ab1d94,100378777,0,0x0,8
tick,0x7ffa19ab1d94,100395051,0,0x0,8
tick,0x7ffa19ab1d94,100410801,0,0x0,8
tick,0x7ffa19ab1d94,100426666,0,0x0,8
tick,0x7ffa19ab1d94,100442801,0,0x0,8
tick,0x7ffa19ab1d94,100457680,0,0x0,8
tick,0x7ffa19ab1d94,100472861,0,0x0,8
tick,0x7ffa19ab1d94,100488358,0,0x0,8
tick,0x7ffa19ab1d94,100505805,0,0x0,8
tick,0x7ffa19ab1d94,100519859,0,0x0,8
tick,0x7ffa19ab1d94,100535827,0,0x0,8
tick,0x7ffa19ab1d94,100552275,0,0x0,8
tick,0x7ffa19ab1d94,100566676,0,0x0,8
tick,0x7ffa19ab1d94,100582213,0,0x0,8
tick,0x7ffa19ab1d94,100599956,0,0x0,8
tick,0x7ffa19ab1d94,100615625,0,0x0,8
tick,0x7ffa19ab1d94,100628901,0,0x0,8
tick,0x7ffa19ab1d94,100644984,0,0x0,8
tick,0x7ffa19ab1d94,100662381,0,0x0,8
tick,0x7ffa19ab1d94,100686316,0,0x0,8
tick,0x7ffa19ab1d94,100696104,0,0x0,8
tick,0x7ffa19ab1d94,100706486,0,0x0,8
tick,0x7ffa19ab1d94,100721983,0,0x0,8
tick,0x7ffa19ab1d94,100737876,0,0x0,8
tick,0x7ffa19ab1d94,100753143,0,0x0,8
tick,0x7ffa19ab1d94,100768888,0,0x0,8
tick,0x7ffa19ab1d94,100784568,0,0x0,8
tick,0x7ffa19ab1d94,100800476,0,0x0,8
tick,0x7ffa19ab1d94,100816879,0,0x0,8
tick,0x7ffa19ab1d94,100831096,0,0x0,8
tick,0x7ffa19ab1d94,100846763,0,0x0,8
tick,0x7ffa19ab1d94,100862970,0,0x0,8
tick,0x7ffa19ab1d94,100878396,0,0x0,8
tick,0x7ffa19ab1d94,100894301,0,0x0,8
tick,0x7ffa19ab1d94,100909852,0,0x0,8
tick,0x7ffa19ab1d94,100924672,0,0x0,8
tick,0x7ffa19ab1d94,100943608,0,0x0,8
tick,0x7ffa19ab1d94,100958933,0,0x0,8
tick,0x7ffa19ab1d94,100974185,0,0x0,8
tick,0x7ffa19ab1d94,100989062,0,0x0,8
tick,0x7ffa19ab1d94,101004977,0,0x0,8
tick,0x7ffa19ab1d94,101020136,0,0x0,8
tick,0x7ffa19ab1d94,101035568,0,0x0,8
tick,0x7ffa19ab1d94,101051948,0,0x0,8
tick,0x7ffa19ab1d94,101067715,0,0x0,8
tick,0x7ffa19ab1d94,101083612,0,0x0,8
tick,0x7ffa19ab1d94,101098775,0,0x0,8
tick,0x7ffa19ab1d94,101114798,0,0x0,8
tick,0x7ffa19ab1d94,101129623,0,0x0,8
tick,0x7ffa19ab1d94,101144646,0,0x0,8
tick,0x7ffa19ab1d94,101159580,0,0x0,8
tick,0x7ffa19ab1d94,101175014,0,0x0,8
tick,0x7ffa19ab1d94,101191241,0,0x0,8
tick,0x7ffa19ab1d94,101206883,0,0x0,8
tick,0x7ffa19ab1d94,101223603,0,0x0,8
tick,0x7ffa19ab1d94,101238940,0,0x0,8
tick,0x7ffa19ab1d94,101254570,0,0x0,8
tick,0x7ffa19ab1d94,101269772,0,0x0,8
tick,0x7ffa19ab1d94,101285661,0,0x0,8
tick,0x7ffa19ab1d94,101300983,0,0x0,8
tick,0x7ffa19ab1d94,101316632,0,0x0,8
tick,0x7ffa19ab1d94,101331896,0,0x0,8
tick,0x7ffa19ab1d94,101347443,0,0x0,8
tick,0x7ffa19ab1d94,101362641,0,0x0,8
tick,0x7ffa19ab1d94,101378592,0,0x0,8
tick,0x7ffa19ab1d94,101394097,0,0x0,8
tick,0x7ffa19ab1d94,101409484,0,0x0,8
tick,0x7ffa19ab1d94,101425048,0,0x0,8
tick,0x7ffa19ab1d94,101440315,0,0x0,8
tick,0x7ffa19ab1d94,101457076,0,0x0,8
tick,0x7ffa19ab1d94,101473345,0,0x0,8
tick,0x7ffa19ab1d94,101488457,0,0x0,8
tick,0x7ffa19ab1d94,101504033,0,0x0,8
tick,0x7ffa19ab1d94,101519482,0,0x0,8
tick,0x7ffa19ab1d94,101534727,0,0x0,8
tick,0x7ffa19ab1d94,101549944,0,0x0,8
tick,0x7ffa19ab1d94,101565562,0,0x0,8
tick,0x7ffa19ab1d94,101581595,0,0x0,8
tick,0x7ffa19ab1d94,101597027,0,0x0,8
tick,0x7ffa19ab1d94,101612997,0,0x0,8
tick,0x7ffa19ab1d94,101628874,0,0x0,8
tick,0x7ffa19ab1d94,101644120,0,0x0,8
tick,0x7ffa19ab1d94,101659426,0,0x0,8
tick,0x7ffa19ab1d94,101674841,0,0x0,8
tick,0x7ffa19ab1d94,101690149,0,0x0,8
tick,0x7ffa19ab1d94,101705682,0,0x0,8
tick,0x7ffa19ab1d94,101721472,0,0x0,8
tick,0x7ffa19ab1d94,101737155,0,0x0,8
tick,0x7ffa19ab1d94,101752287,0,0x0,8
tick,0x7ffa19ab1d94,101767822,0,0x0,8
tick,0x7ffa19ab1d94,101783099,0,0x0,8
tick,0x7ffa19ab1d94,101799024,0,0x0,8
tick,0x7ffa19ab1d94,101814355,0,0x0,8
tick,0x7ffa19ab1d94,101829864,0,0x0,8
tick,0x7ffa19ab1d94,101845252,0,0x0,8
tick,0x7ffa19ab1d94,101861868,0,0x0,8
tick,0x7ffa19ab1d94,101877498,0,0x0,8
tick,0x7ffa19ab1d94,101892254,0,0x0,8
tick,0x7ffa19ab1d94,101907888,0,0x0,8
tick,0x7ffa19ab1d94,101923968,0,0x0,8
tick,0x7ffa19ab1d94,101939819,0,0x0,8
tick,0x7ffa19ab1d94,101956779,0,0x0,8
tick,0x7ffa19ab1d94,101971603,0,0x0,8
tick,0x7ffa19ab1d94,101987363,0,0x0,8
tick,0x7ffa19ab1d94,102003863,0,0x0,8
tick,0x7ffa19ab1d94,102019085,0,0x0,8
tick,0x7ffa19ab1d94,102034960,0,0x0,8
tick,0x7ffa19ab1d94,102049980,0,0x0,8
tick,0x7ffa19ab1d94,102065591,0,0x0,8
tick,0x7ffa19ab1d94,102082051,0,0x0,8
tick,0x7ffa19ab1d94,102097885,0,0x0,8
tick,0x7ffa19ab1d94,102113604,0,0x0,8
tick,0x7ffa19ab1d94,102128483,0,0x0,8
tick,0x7ffa19ab1d94,102143749,0,0x0,8
tick,0x7ffa19ab1d94,102159434,0,0x0,8
tick,0x7ffa19ab1d94,102176234,0,0x0,8
tick,0x7ffa19ab1d94,102190673,0,0x0,8
tick,0x7ffa19ab1d94,102206309,0,0x0,8
tick,0x7ffa19ab1d94,102222908,0,0x0,8
tick,0x7ffa19ab1d94,102239088,0,0x0,8
tick,0x7ffa19ab1d94,102254163,0,0x0,8
tick,0x7ffa19ab1d94,102270001,0,0x0,8
tick,0x7ffa19ab1d94,102285405,0,0x0,8
tick,0x7ffa19ab1d94,102301937,0,0x0,8
tick,0x7ffa19ab1d94,102317352,0,0x0,8
tick,0x7ffa19ab1d94,102332590,0,0x0,8
tick,0x7ffa19ab1d94,102348618,0,0x0,8
tick,0x7ffa19ab1d94,102364248,0,0x0,8
tick,0x7ffa19ab1d94,102379985,0,0x0,8
tick,0x7ffa19ab1d94,102395961,0,0x0,8
tick,0x7ffa19ab1d94,102411549,0,0x0,8
tick,0x7ffa19ab1d94,102426888,0,0x0,8
tick,0x7ffa19ab1d94,102442872,0,0x0,8
tick,0x7ffa19ab1d94,102458093,0,0x0,8
tick,0x7ffa19ab1d94,102473942,0,0x0,8
tick,0x7ffa19ab1d94,102489746,0,0x0,8
tick,0x7ffa19ab1d94,102505579,0,0x0,8
tick,0x7ffa19ab1d94,102521669,0,0x0,8
tick,0x7ffa19ab1d94,102537758,0,0x0,8
tick,0x7ffa19ab1d94,102552405,0,0x0,8
tick,0x7ffa19ab1d94,102568173,0,0x0,8
tick,0x7ffa19ab1d94,102584211,0,0x0,8
tick,0x7ffa19ab1d94,102600198,0,0x0,8
tick,0x7ffa19ab1d94,102616035,0,0x0,8
tick,0x7ffa19ab1d94,102631934,0,0x0,8
tick,0x7ffa19ab1d94,102647847,0,0x0,8
tick,0x7ffa19ab1d94,102663688,0,0x0,8
tick,0x7ffa19ab1d94,102680913,0,0x0,8
tick,0x7ffa19ab1d94,102694807,0,0x0,8
tick,0x7ffa19ab1d94,102711686,0,0x0,8
tick,0x7ffa19ab1d94,102726395,0,0x0,8
tick,0x7ffa19ab1d94,102742018,0,0x0,8
tick,0x7ffa19ab1d94,102757238,0,0x0,8
tick,0x7ffa19ab1d94,102774365,0,0x0,8
tick,0x7ffa19ab1d94,102788868,0,0x0,8
tick,0x7ffa19ab1d94,102804406,0,0x0,8
tick,0x7ffa19ab1d94,102820297,0,0x0,8
tick,0x7ffa19ab1d94,102835817,0,0x0,8
tick,0x7ffa19ab1d94,102851804,0,0x0,8
tick,0x7ffa19ab1d94,102867562,0,0x0,8
tick,0x7ffa19ab1d94,102883474,0,0x0,8
tick,0x7ffa19ab1d94,102897910,0,0x0,8
tick,0x7ffa19ab1d94,102914132,0,0x0,8
tick,0x7ffa19ab1d94,102930070,0,0x0,8
tick,0x7ffa19ab1d94,102946387,0,0x0,8
tick,0x7ffa19ab1d94,102963440,0,0x0,8
tick,0x7ffa19ab1d94,102977492,0,0x0,8
tick,0x7ffa19ab1d94,102992746,0,0x0,8
tick,0x7ffa19ab1d94,103009328,0,0x0,8
tick,0x7ffa19ab1d94,103024686,0,0x0,8
tick,0x7ffa19ab1d94,103040785,0,0x0,8
tick,0x7ffa19ab1d94,103056165,0,0x0,8
tick,0x7ffa19ab1d94,103071851,0,0x0,8
tick,0x7ffa19ab1d94,103087297,0,0x0,8
tick,0x7ffa19ab1d94,103103303,0,0x0,8
tick,0x7ffa19ab1d94,103118609,0,0x0,8
tick,0x7ffa19ab1d94,103134448,0,0x0,8
tick,0x7ffa19ab1d94,103150436,0,0x0,8
tick,0x7ffa19ab1d94,103166784,0,0x0,8
tick,0x7ffa19ab1d94,103181863,0,0x0,8
tick,0x7ffa19ab1d94,103197724,0,0x0,8
tick,0x7ffa19ab1d94,103212799,0,0x0,8
tick,0x7ffa19ab1d94,103228725,0,0x0,8
tick,0x7ffa19ab1d94,103244569,0,0x0,8
tick,0x7ffa19ab1d94,103260140,0,0x0,8
tick,0x7ffa19ab1d94,103275583,0,0x0,8
tick,0x7ffa19ab1d94,103291685,0,0x0,8
tick,0x7ffa19ab1d94,103307649,0,0x0,8
tick,0x7ffa19ab1d94,103323789,0,0x0,8
tick,0x7ffa19ab1d94,103339324,0,0x0,8
tick,0x7ffa19ab1d94,103355036,0,0x0,8
tick,0x7ffa19ab1d94,103370417,0,0x0,8
tick,0x7ffa19ab1d94,103386473,0,0x0,8
tick,0x7ffa19ab1d94,103401630,0,0x0,8
tick,0x7ffa19ab1d94,103417589,0,0x0,8
tick,0x7ffa19ab1d94,103432945,0,0x0,8
tick,0x7ffa19ab1d94,103448613,0,0x0,8
tick,0x7ffa19ab1d94,103464674,0,0x0,8
tick,0x7ffa19ab1d94,103480273,0,0x0,8
tick,0x7ffa19ab1d94,103496136,0,0x0,8
tick,0x7ffa19ab1d94,103511731,0,0x0,8
tick,0x7ffa19ab1d94,103527038,0,0x0,8
tick,0x7ffa19ab1d94,103543612,0,0x0,8
tick,0x7ffa19ab1d94,103557956,0,0x0,8
tick,0x7ffa19ab1d94,103572929,0,0x0,8
tick,0x7ffa19ab1d94,103588346,0,0x0,8
tick,0x7ffa19ab1d94,103604770,0,0x0,8
tick,0x7ffa19ab1d94,103620368,0,0x0,8
tick,0x7ffa19ab1d94,103636209,0,0x0,8
tick,0x7ffa19ab1d94,103651781,0,0x0,8
tick,0x7ffa19ab1d94,103667041,0,0x0,8
tick,0x7ffa19ab1d94,103682912,0,0x0,8
tick,0x7ffa19ab1d94,103698430,0,0x0,8
tick,0x7ffa19ab1d94,103713740,0,0x0,8
tick,0x7ffa19ab1d94,103729842,0,0x0,8
tick,0x7ffa19ab1d94,103745763,0,0x0,8
tick,0x7ffa19ab1d94,103761623,0,0x0,8
tick,0x7ffa19ab1d94,103777149,0,0x0,8
tick,0x7ffa19ab1d94,103792383,0,0x0,8
tick,0x7ffa19ab1d94,103807925,0,0x0,8
tick,0x7ffa19ab1d94,103823356,0,0x0,8
tick,0x7ffa19ab1d94,103839169,0,0x0,8
tick,0x7ffa19ab1d94,103854708,0,0x0,8
tick,0x7ffa19ab1d94,103870011,0,0x0,8
tick,0x7ffa19ab1d94,103885259,0,0x0,8
tick,0x7ffa19ab1d94,103900993,0,0x0,8
tick,0x7ffa19ab1d94,103917092,0,0x0,8
tick,0x7ffa19ab1d94,103932821,0,0x0,8
tick,0x7ffa19ab1d94,103948611,0,0x0,8
tick,0x7ffa19ab1d94,103963976,0,0x0,8
tick,0x7ffa19ab1d94,103979256,0,0x0,8
tick,0x7ffa19ab1d94,103994796,0,0x0,8
tick,0x7ffa19ab1d94,104010430,0,0x0,8
tick,0x7ffa19ab1d94,104025544,0,0x0,8
tick,0x7ffa19ab1d94,104042000,0,0x0,8
tick,0x7ffa19ab1d94,104057403,0,0x0,8
tick,0x7ffa19ab1d94,104072649,0,0x0,8
tick,0x7ffa19ab1d94,104088443,0,0x0,8
tick,0x7ffa19ab1d94,104104702,0,0x0,8
tick,0x7ffa19ab1d94,104119432,0,0x0,8
tick,0x7ffa19ab1d94,104135040,0,0x0,8
tick,0x7ffa19ab1d94,104150362,0,0x0,8
tick,0x7ffa19ab1d94,104166236,0,0x0,8
tick,0x7ffa19ab1d94,104181880,0,0x0,8
tick,0x7ffa19ab1d94,104197088,0,0x0,8
tick,0x7ffa19ab1d94,104213131,0,0x0,8
tick,0x7ffa19ab1d94,104230255,0,0x0,8
tick,0x7ffa19ab1d94,104245196,0,0x0,8
tick,0x7ffa19ab1d94,104260739,0,0x0,8
tick,0x7ffa19ab1d94,104276120,0,0x0,8
tick,0x7ffa19ab1d94,104291843,0,0x0,8
tick,0x7ffa19ab1d94,104307389,0,0x0,8
tick,0x7ffa19ab1d94,104322700,0,0x0,8
tick,0x7ffa19ab1d94,104338469,0,0x0,8
tick,0x7ffa19ab1d94,104354689,0,0x0,8
tick,0x7ffa19ab1d94,104370341,0,0x0,8
tick,0x7ffa19ab1d94,104385876,0,0x0,8
tick,0x7ffa19ab1d94,104402056,0,0x0,8
tick,0x7ffa19ab1d94,104417839,0,0x0,8
tick,0x7ffa19ab1d94,104433575,0,0x0,8
tick,0x7ffa19ab1d94,104448817,0,0x0,8
tick,0x7ffa19ab1d94,104463888,0,0x0,8
tick,0x7ffa19ab1d94,104479709,0,0x0,8
tick,0x7ffa19ab1d94,104495929,0,0x0,8
tick,0x7ffa19ab1d94,104512149,0,0x0,8
tick,0x7ffa19ab1d94,104528069,0,0x0,8
tick,0x7ffa19ab1d94,104543576,0,0x0,8
tick,0x7ffa19ab1d94,104558565,0,0x0,8
tick,0x7ffa19ab1d94,104573670,0,0x0,8
tick,0x7ffa19ab1d94,104589179,0,0x0,8
tick,0x7ffa19ab1d94,104604598,0,0x0,8
tick,0x7ffa19ab1d94,104619375,0,0x0,8
tick,0x7ffa19ab1d94,104635279,0,0x0,8
tick,0x7ffa19ab1d94,104650339,0,0x0,8
tick,0x7ffa19ab1d94,104665898,0,0x0,8
tick,0x7ffa19ab1d94,104681491,0,0x0,8
tick,0x7ffa19ab1d94,104696978,0,0x0,8
tick,0x7ffa19ab1d94,104712892,0,0x0,8
tick,0x7ffa19ab1d94,104728826,0,0x0,8
tick,0x7ffa19ab1d94,104744024,0,0x0,8
tick,0x7ffa19ab1d94,104764776,0,0x0,8
tick,0x7ffa19ab1d94,104774852,0,0x0,8
tick,0x7ffa19ab1d94,104790930,0,0x0,8
tick,0x7ffa19ab1d94,104806564,0,0x0,8
tick,0x7ffa19ab1d94,104822135,0,0x0,8
tick,0x7ffa19ab1d94,104837838,0,0x0,8
tick,0x7ffa19ab1d94,104854585,0,0x0,8
tick,0x7ffa19ab1d94,104868321,0,0x0,8
tick,0x7ffa19ab1d94,104883629,0,0x0,8
tick,0x7ffa19ab1d94,104901124,0,0x0,8
tick,0x7ffa19ab1d94,104915555,0,0x0,8
tick,0x7ffa19ab1d94,104932009,0,0x0,8
tick,0x7ffa19ab1d94,104947212,0,0x0,8
tick,0x7ffa19ab1d94,104962383,0,0x0,8
tick,0x7ffa19ab1d94,104977905,0,0x0,8
tick,0x7ffa19ab1d94,104993731,0,0x0,8
tick,0x7ffa19ab1d94,105009214,0,0x0,8
tick,0x7ffa19ab1d94,105025175,0,0x0,8
tick,0x7ffa19ab1d94,105040253,0,0x0,8
tick,0x7ffa19ab1d94,105056051,0,0x0,8
tick,0x7ffa19ab1d94,105071889,0,0x0,8
tick,0x7ffa19ab1d94,105087765,0,0x0,8
tick,0x7ffa19ab1d94,105103746,0,0x0,8
tick,0x7ffa19ab1d94,105119345,0,0x0,8
tick,0x7ffa19ab1d94,105135040,0,0x0,8
tick,0x7ffa19ab1d94,105150084,0,0x0,8
tick,0x7ffa19ab1d94,105166454,0,0x0,8
tick,0x7ffa19ab1d94,105181997,0,0x0,8
tick,0x7ffa19ab1d94,105197542,0,0x0,8
tick,0x7ffa19ab1d94,105212915,0,0x0,8
tick,0x7ffa19ab1d94,105228529,0,0x0,8
tick,0x7ffa19ab1d94,105244226,0,0x0,8
tick,0x7ffa19ab1d94,105259791,0,0x0,8
tick,0x7ffa19ab1d94,105275073,0,0x0,8
tick,0x7ffa19ab1d94,105290973,0,0x0,8
tick,0x7ffa19ab1d94,105306125,0,0x0,8
tick,0x7ffa19ab1d94,105321807,0,0x0,8
tick,0x7ffa19ab1d94,105337453,0,0x0,8
tick,0x7ffa19ab1d94,105353694,0,0x0,8
tick,0x7ffa19ab1d94,105368198,0,0x0,8
tick,0x7ffa19ab1d94,105383358,0,0x0,8
tick,0x7ffa19ab1d94,105398920,0,0x0,8
tick,0x7ffa19ab1d94,105414862,0,0x0,8
tick,0x7ffa19ab1d94,105430007,0,0x0,8
tick,0x7ffa19ab1d94,105445651,0,0x0,8
tick,0x7ffa19ab1d94,105461875,0,0x0,8
tick,0x7ffa19ab1d94,105476571,0,0x0,8
tick,0x7ffa19ab1d94,105491850,0,0x0,8
tick,0x7ffa19ab1d94,105507538,0,0x0,8
tick,0x7ffa19ab1d94,105522739,0,0x0,8
tick,0x7ffa19ab1d94,105538579,0,0x0,8
tick,0x7ffa19ab1d94,105554526,0,0x0,8
tick,0x7ffa19ab1d94,105570966,0,0x0,8
tick,0x7ffa19ab1d94,105587236,0,0x0,8
tick,0x7ffa19ab1d94,105603449,0,0x0,8
tick,0x7ffa19ab1d94,105619797,0,0x0,8
tick,0x7ffa19ab1d94,105634265,0,0x0,8
tick,0x7ffa19ab1d94,105650288,0,0x0,8
tick,0x7ffa19ab1d94,105664815,0,0x0,8
tick,0x7ffa19ab1d94,105680269,0,0x0,8
tick,0x7ffa19ab1d94,105696202,0,0x0,8
tick,0x7ffa19ab1d94,105711535,0,0x0,8
tick,0x7ffa19ab1d94,105727060,0,0x0,8
tick,0x7ffa19ab1d94,105743753,0,0x0,8
tick,0x7ffa19ab1d94,105758220,0,0x0,8
tick,0x7ffa19ab1d94,105774450,0,0x0,8
tick,0x7ffa19ab1d94,105789683,0,0x0,8
tick,0x7ffa19ab1d94,105806416,0,0x0,8
tick,0x7ffa19ab1d94,105821746,0,0x0,8
tick,0x7ffa19ab1d94,105837437,0,0x0,8
tick,0x7ffa19ab1d94,105853127,0,0x0,8
tick,0x7ffa19ab1d94,105868081,0,0x0,8
tick,0x7ffa19ab1d94,105883479,0,0x0,8
tick,0x7ffa19ab1d94,105899254,0,0x0,8
tick,0x7ffa19ab1d94,105915314,0,0x0,8
tick,0x7ffa19ab1d94,105930842,0,0x0,8
tick,0x7ffa19ab1d94,105946418,0,0x0,8
tick,0x7ffa19ab1d94,105961802,0,0x0,8
tick,0x7ffa19ab1d94,105977945,0,0x0,8
tick,0x7ffa19ab1d94,105992994,0,0x0,8
tick,0x7ffa19ab1d94,106008109,0,0x0,8
tick,0x7ffa19ab1d94,106023631,0,0x0,8
tick,0x7ffa19ab1d94,106039264,0,0x0,8
tick,0x7ffa19ab1d94,106054923,0,0x0,8
tick,0x7ffa19ab1d94,106071602,0,0x0,8
tick,0x7ffa19ab1d94,106092704,0,0x0,8
tick,0x7ffa19ab1d94,106106130,0,0x0,8
tick,0x7ffa19ab1d94,106118106,0,0x0,8
tick,0x7ffa19ab1d94,106132736,0,0x0,8
tick,0x7ffa19ab1d94,106148625,0,0x0,8
tick,0x7ffa19ab1d94,106174729,0,0x0,8
tick,0x7ffa19ab1d94,106179460,0,0x0,8
tick,0x7ffa19ab1d94,106196079,0,0x0,8
tick,0x7ffa19ab1d94,106211533,0,0x0,8
tick,0x7ffa19ab1d94,106226770,0,0x0,8
tick,0x7ffa19ab1d94,106242040,0,0x0,8
tick,0x7ffa19ab1d94,106257070,0,0x0,8
tick,0x7ffa19ab1d94,106274384,0,0x0,8
tick,0x7ffa19ab1d94,106290852,0,0x0,8
tick,0x7ffa19ab1d94,106305432,0,0x0,8
tick,0x7ffa19ab1d94,106322239,0,0x0,8
tick,0x7ffa19ab1d94,106337730,0,0x0,8
tick,0x7ffa19ab1d94,106354494,0,0x0,8
tick,0x7ffa19ab1d94,106371919,0,0x0,8
tick,0x7ffa19ab1d94,106387009,0,0x0,8
tick,0x7ffa19ab1d94,106398592,0,0x0,8
tick,0x7ffa19ab1d94,106414241,0,0x0,8
tick,0x7ffa19ab1d94,106429752,0,0x0,8
tick,0x7ffa19ab1d94,106445190,0,0x0,8
tick,0x7ffa19ab1d94,106461650,0,0x0,8
tick,0x7ffa19ab1d94,106476114,0,0x0,8
tick,0x7ffa19ab1d94,106493029,0,0x0,8
tick,0x7ffa19ab1d94,106507490,0,0x0,8
tick,0x7ffa19ab1d94,106523400,0,0x0,8
tick,0x7ffa19ab1d94,106539577,0,0x0,8
tick,0x7ffa19ab1d94,106554723,0,0x0,8
tick,0x7ffa19ab1d94,106570220,0,0x0,8
tick,0x7ffa19ab1d94,106586657,0,0x0,8
tick,0x7ffa19ab1d94,106602879,0,0x0,8
tick,0x7ffa19ab1d94,106618554,0,0x0,8
tick,0x7ffa19ab1d94,106633081,0,0x0,8
tick,0x7ffa19ab1d94,106649445,0,0x0,8
tick,0x7ffa19ab1d94,106664533,0,0x0,8
tick,0x7ffa19ab1d94,106680722,0,0x0,8
tick,0x7ffa19ab1d94,106697741,0,0x0,8
tick,0x7ffa19ab1d94,106713472,0,0x0,8
tick,0x7ffa19ab1d94,106730642,0,0x0,8
tick,0x7ffa19ab1d94,106745383,0,0x0,8
tick,0x7ffa19ab1d94,106765421,0,0x0,8
tick,0x7ffa19ab1d94,106775976,0,0x0,8
tick,0x7ffa19ab1d94,106790901,0,0x0,8
tick,0x7ffa19ab1d94,106806666,0,0x0,8
tick,0x7ffa19ab1d94,106824358,0,0x0,8
tick,0x7ffa19ab1d94,106838291,0,0x0,8
tick,0x7ffa19ab1d94,106853075,0,0x0,8
tick,0x7ffa19ab1d94,106869805,0,0x0,8
tick,0x7ffa19ab1d94,106883945,0,0x0,8
tick,0x7ffa19ab1d94,106898911,0,0x0,8
tick,0x7ffa19ab1d94,106914369,0,0x0,8
tick,0x7ffa19ab1d94,106930399,0,0x0,8
tick,0x7ffa19ab1d94,106945691,0,0x0,8
tick,0x7ffa19ab1d94,106962230,0,0x0,8
tick,0x7ffa19ab1d94,106976905,0,0x0,8
tick,0x7ffa19ab1d94,106992915,0,0x0,8
tick,0x7ffa19ab1d94,107007626,0,0x0,8
tick,0x7ffa19ab1d94,107023461,0,0x0,8
tick,0x7ffa19ab1d94,107039303,0,0x0,8
tick,0x7ffa19ab1d94,107054956,0,0x0,8
tick,0x7ffa19ab1d94,107070378,0,0x0,8
tick,0x7ffa19ab1d94,107087219,0,0x0,8
tick,0x7ffa19ab1d94,107103406,0,0x0,8
tick,0x7ffa19ab1d94,107119138,0,0x0,8
tick,0x7ffa19ab1d94,107134940,0,0x0,8
tick,0x7ffa19ab1d94,107150534,0,0x0,8
tick,0x7ffa19ab1d94,107166195,0,0x0,8
tick,0x7ffa19ab1d94,107181770,0,0x0,8
tick,0x7ffa19ab1d94,107197490,0,0x0,8
tick,0x7ffa19ab1d94,107212873,0,0x0,8
tick,0x7ffa19ab1d94,107227946,0,0x0,8
tick,0x7ffa19ab1d94,107243650,0,0x0,8
tick,0x7ffa19ab1d94,107258896,0,0x0,8
tick,0x7ffa19ab1d94,107274814,0,0x0,8
tick,0x7ffa19ab1d94,107290720,0,0x0,8
tick,0x7ffa19ab1d94,107306354,0,0x0,8
tick,0x7ffa19ab1d94,107322402,0,0x0,8
tick,0x7ffa19ab1d94,107338466,0,0x0,8
tick,0x7ffa19ab1d94,107354911,0,0x0,8
tick,0x7ffa19ab1d94,107371229,0,0x0,8
tick,0x7ffa19ab1d94,107387027,0,0x0,8
tick,0x7ffa19ab1d94,107403277,0,0x0,8
tick,0x7ffa19ab1d94,107418879,0,0x0,8
tick,0x7ffa19ab1d94,107434915,0,0x0,8
tick,0x7ffa19ab1d94,107450167,0,0x0,8
tick,0x7ffa19ab1d94,107465933,0,0x0,8
tick,0x7ffa19ab1d94,107481445,0,0x0,8
tick,0x7ffa19ab1d94,107496355,0,0x0,8
tick,0x7ffa19ab1d94,107511698,0,0x0,8
tick,0x7ffa19ab1d94,107526730,0,0x0,8
tick,0x7ffa19ab1d94,107542275,0,0x0,8
tick,0x7ffa19ab1d94,107557010,0,0x0,8
tick,0x7ffa19ab1d94,107572409,0,0x0,8
tick,0x7ffa19ab1d94,107587913,0,0x0,8
tick,0x7ffa19ab1d94,107604199,0,0x0,8
tick,0x7ffa19ab1d94,107619366,0,0x0,8
tick,0x7ffa19ab1d94,107635483,0,0x0,8
tick,0x7ffa19ab1d94,107651654,0,0x0,8
tick,0x7ffa19ab1d94,107667762,0,0x0,8
tick,0x7ffa19ab1d94,107683547,0,0x0,8
tick,0x7ffa19ab1d94,107699055,0,0x0,8
tick,0x7ffa19ab1d94,107714746,0,0x0,8
tick,0x7ffa19ab1d94,107731952,0,0x0,8
tick,0x7ffa19ab1d94,107756386,0,0x0,8
tick,0x7ffa19ab1d94,107766449,0,0x0,8
tick,0x7ffa19ab1d94,107777953,0,0x0,8
tick,0x7ffa19ab1d94,107803964,0,0x0,8
tick,0x7ffa19ab1d94,107810246,0,0x0,8
tick,0x7ffa19ab1d94,107828736,0,0x0,8
tick,0x7ffa19ab1d94,107846977,0,0x0,8
tick,0x7ffa19ab1d94,107858313,0,0x0,8
tick,0x7ffa19ab1d94,107874235,0,0x0,8
tick,0x7ffa19ab1d94,107888666,0,0x0,8
tick,0x7ffa19ab1d94,107905996,0,0x0,8
tick,0x7ffa19ab1d94,107919454,0,0x0,8
tick,0x7ffa19ab1d94,107938875,0,0x0,8
tick,0x7ffa19ab1d94,107960701,0,0x0,8
tick,0x7ffa19ab1d94,107972916,0,0x0,8
tick,0x7ffa19ab1d94,107988233,0,0x0,8
tick,0x7ffa19ab1d94,108031524,0,0x0,8
tick,0x7ffa19ab1d94,108057615,0,0x0,8
tick,0x7ffa19ab1d94,108061499,0,0x0,8
tick,0x7ffa19ab1d94,108075739,0,0x0,8
tick,0x7ffa19ab1d94,108092342,0,0x0,8
tick,0x7ffa19ab1d94,108110298,0,0x0,8
tick,0x7ffa19ab1d94,108124320,0,0x0,8
tick,0x7ffa19ab1d94,108139661,0,0x0,8
tick,0x7ffa19ab1d94,108154658,0,0x0,8
tick,0x7ffa19ab1d94,108177385,0,0x0,8
tick,0x7ffa19ab1d94,108189518,0,0x0,8
tick,0x7ffa19ab1d94,108204710,0,0x0,8
tick,0x7ffa19ab1d94,108215611,0,0x0,8
tick,0x7ffa19ab1d94,108231446,0,0x0,8
tick,0x7ffa19ab1d94,108247788,0,0x0,8
tick,0x7ffa19ab1d94,108262135,0,0x0,8
tick,0x7ffa19ab1d94,108277438,0,0x0,8
tick,0x7ffa19ab1d94,108293501,0,0x0,8
tick,0x7ffa19ab1d94,108308805,0,0x0,8
tick,0x7ffa19ab1d94,108324517,0,0x0,8
tick,0x7ffa19ab1d94,108340648,0,0x0,8
tick,0x7ffa19ab1d94,108355733,0,0x0,8
tick,0x7ffa19ab1d94,108371703,0,0x0,8
tick,0x7ffa19ab1d94,108386784,0,0x0,8
tick,0x7ffa19ab1d94,108401885,0,0x0,8
tick,0x7ffa19ab1d94,108416880,0,0x0,8
tick,0x7ffa19ab1d94,108432959,0,0x0,8
tick,0x7ffa19ab1d94,108447844,0,0x0,8
tick,0x7ffa19ab1d94,108463659,0,0x0,8
tick,0x7ffa19ab1d94,108479448,0,0x0,8
tick,0x7ffa19ab1d94,108495139,0,0x0,8
tick,0x7ffa19ab1d94,108510765,0,0x0,8
tick,0x7ffa19ab1d94,108526671,0,0x0,8
tick,0x7ffa19ab1d94,108541940,0,0x0,8
tick,0x7ffa19ab1d94,108556713,0,0x0,8
tick,0x7ffa19ab1d94,108572483,0,0x0,8
tick,0x7ffa19ab1d94,108587568,0,0x0,8
tick,0x7ffa19ab1d94,108602531,0,0x0,8
tick,0x7ffa19ab1d94,108618520,0,0x0,8
tick,0x7ffa19ab1d94,108633884,0,0x0,8
tick,0x7ffa19ab1d94,108649875,0,0x0,8
tick,0x7ffa19ab1d94,108665199,0,0x0,8
tick,0x7ffa19ab1d94,108681467,0,0x0,8
tick,0x7ffa19ab1d94,108697259,0,0x0,8
tick,0x7ffa19ab1d94,108713147,0,0x0,8
tick,0x7ffa19ab1d94,108728982,0,0x0,8
tick,0x7ffa19ab1d94,108744617,0,0x0,8
tick,0x7ffa19ab1d94,108761604,0,0x0,8
tick,0x7ffa19ab1d94,108775105,0,0x0,8
tick,0x7ffa19ab1d94,108791791,0,0x0,8
tick,0x7ffa19ab1d94,108807573,0,0x0,8
tick,0x7ffa19ab1d94,108822918,0,0x0,8
tick,0x7ffa19ab1d94,108838599,0,0x0,8
tick,0x7ffa19ab1d94,108854558,0,0x0,8
tick,0x7ffa19ab1d94,108870108,0,0x0,8
tick,0x7ffa19ab1d94,108885379,0,0x0,8
tick,0x7ffa19ab1d94,108901390,0,0x0,8
tick,0x7ffa19ab1d94,108918098,0,0x0,8
tick,0x7ffa19ab1d94,108932851,0,0x0,8
tick,0x7ffa19ab1d94,108948739,0,0x0,8
tick,0x7ffa19ab1d94,108965052,0,0x0,8
tick,0x7ffa19ab1d94,108980308,0,0x0,8
tick,0x7ffa19ab1d94,108996012,0,0x0,8
tick,0x7ffa19ab1d94,109010610,0,0x0,8
tick,0x7ffa19ab1d94,109026507,0,0x0,8
tick,0x7ffa19ab1d94,109042370,0,0x0,8
tick,0x7ffa19ab1d94,109057345,0,0x0,8
tick,0x7ffa19ab1d94,109073704,0,0x0,8
tick,0x7ffa19ab1d94,109088768,0,0x0,8
tick,0x7ffa19ab1d94,109104560,0,0x0,8
tick,0x7ffa19ab1d94,109119749,0,0x0,8
tick,0x7ffa19ab1d94,109135631,0,0x0,8
tick,0x7ffa19ab1d94,109151682,0,0x0,8
tick,0x7ffa19ab1d94,109167811,0,0x0,8
tick,0x7ffa19ab1d94,109183660,0,0x0,8
tick,0x7ffa19ab1d94,109198884,0,0x0,8
tick,0x7ffa19ab1d94,109213829,0,0x0,8
tick,0x7ffa19ab1d94,109229002,0,0x0,8
tick,0x7ffa19ab1d94,109244202,0,0x0,8
tick,0x7ffa19ab1d94,109259627,0,0x0,8
tick,0x7ffa19ab1d94,109275362,0,0x0,8
tick,0x7ffa19ab1d94,109291901,0,0x0,8
tick,0x7ffa19ab1d94,109307595,0,0x0,8
tick,0x7ffa19ab1d94,109323377,0,0x0,8
tick,0x7ffa19ab1d94,109338996,0,0x0,8
tick,0x7ffa19ab1d94,109354743,0,0x0,8
tick,0x7ffa19ab1d94,109370465,0,0x0,8
tick,0x7ffa19ab1d94,109386298,0,0x0,8
tick,0x7ffa19ab1d94,109401558,0,0x0,8
tick,0x7ffa19ab1d94,109417433,0,0x0,8
tick,0x7ffa19ab1d94,109432921,0,0x0,8
tick,0x7ffa19ab1d94,109447943,0,0x0,8
tick,0x7ffa19ab1d94,109463211,0,0x0,8
tick,0x7ffa19ab1d94,109478489,0,0x0,8
tick,0x7ffa19ab1d94,109493844,0,0x0,8
tick,0x7ffa19ab1d94,109509657,0,0x0,8
tick,0x7ffa19ab1d94,109525702,0,0x0,8
tick,0x7ffa19ab1d94,109542106,0,0x0,8
tick,0x7ffa19ab1d94,109557072,0,0x0,8
tick,0x7ffa19ab1d94,109572302,0,0x0,8
tick,0x7ffa19ab1d94,109587068,0,0x0,8
tick,0x7ffa19ab1d94,109602329,0,0x0,8
tick,0x7ffa19ab1d94,109617973,0,0x0,8
tick,0x7ffa19ab1d94,109633754,0,0x0,8
tick,0x7ffa19ab1d94,109648924,0,0x0,8
tick,0x7ffa19ab1d94,109664372,0,0x0,8
tick,0x7ffa19ab1d94,109679925,0,0x0,8
tick,0x7ffa19ab1d94,109695890,0,0x0,8
tick,0x7ffa19ab1d94,109711622,0,0x0,8
tick,0x7ffa19ab1d94,109727474,0,0x0,8
tick,0x7ffa19ab1d94,109743193,0,0x0,8
tick,0x7ffa19ab1d94,109758964,0,0x0,8
tick,0x7ffa19ab1d94,109774416,0,0x0,8
tick,0x7ffa19ab1d94,109790255,0,0x0,8
tick,0x7ffa19ab1d94,109805502,0,0x0,8
tick,0x7ffa19ab1d94,109821780,0,0x0,8
tick,0x7ffa19ab1d94,109837599,0,0x0,8
tick,0x7ffa19ab1d94,109853367,0,0x0,8
tick,0x7ffa19ab1d94,109869101,0,0x0,8
tick,0x7ffa19ab1d94,109884676,0,0x0,8
tick,0x7ffa19ab1d94,109901647,0,0x0,8
tick,0x7ffa19ab1d94,109917034,0,0x0,8
tick,0x7ffa19ab1d94,109933184,0,0x0,8
tick,0x7ffa19ab1d94,109950396,0,0x0,8
tick,0x7ffa19ab1d94,109965383,0,0x0,8
tick,0x7ffa19ab1d94,109980924,0,0x0,8
tick,0x7ffa19ab1d94,109995735,0,0x0,8
tick,0x7ffa19ab1d94,110010854,0,0x0,8
tick,0x7ffa19ab1d94,110026454,0,0x0,8
tick,0x7ffa19ab1d94,110042032,0,0x0,8
tick,0x7ffa19ab1d94,110056873,0,0x0,8
tick,0x7ffa19ab1d94,110072767,0,0x0,8
tick,0x7ffa19ab1d94,110088144,0,0x0,8
tick,0x7ffa19ab1d94,110103277,0,0x0,8
tick,0x7ffa19ab1d94,110119059,0,0x0,8
tick,0x7ffa19ab1d94,110135222,0,0x0,8
tick,0x7ffa19ab1d94,110150735,0,0x0,8
tick,0x7ffa19ab1d94,110166752,0,0x0,8
tick,0x7ffa19ab1d94,110182642,0,0x0,8
tick,0x7ffa19ab1d94,110198208,0,0x0,8
tick,0x7ffa19ab1d94,110213803,0,0x0,8
tick,0x7ffa19ab1d94,110229115,0,0x0,8
tick,0x7ffa19ab1d94,110244586,0,0x0,8
tick,0x7ffa19ab1d94,110260103,0,0x0,8
tick,0x7ffa19ab1d94,110275686,0,0x0,8
tick,0x7ffa19ab1d94,110290475,0,0x0,8
tick,0x7ffa19ab1d94,110306624,0,0x0,8
tick,0x7ffa19ab1d94,110321518,0,0x0,8
tick,0x7ffa19ab1d94,110336881,0,0x0,8
tick,0x7ffa19ab1d94,110352867,0,0x0,8
tick,0x7ffa19ab1d94,110368475,0,0x0,8
tick,0x7ffa19ab1d94,110384073,0,0x0,8
tick,0x7ffa19ab1d94,110400074,0,0x0,8
tick,0x7ffa19ab1d94,110415344,0,0x0,8
tick,0x7ffa19ab1d94,110431577,0,0x0,8
tick,0x7ffa19ab1d94,110446949,0,0x0,8
tick,0x7ffa19ab1d94,110462812,0,0x0,8
tick,0x7ffa19ab1d94,110478674,0,0x0,8
tick,0x7ffa19ab1d94,110493872,0,0x0,8
tick,0x7ffa19ab1d94,110508920,0,0x0,8
tick,0x7ffa19ab1d94,110524043,0,0x0,8
tick,0x7ffa19ab1d94,110539847,0,0x0,8
tick,0x7ffa19ab1d94,110555109,0,0x0,8
tick,0x7ffa19ab1d94,110570430,0,0x0,8
tick,0x7ffa19ab1d94,110585958,0,0x0,8
tick,0x7ffa19ab1d94,110601530,0,0x0,8
tick,0x7ffa19ab1d94,110616838,0,0x0,8
tick,0x7ffa19ab1d94,110631931,0,0x0,8
tick,0x7ffa19ab1d94,110647123,0,0x0,8
tick,0x7ffa19ab1d94,110662870,0,0x0,8
tick,0x7ffa19ab1d94,110678752,0,0x0,8
tick,0x7ffa19ab1d94,110694563,0,0x0,8
tick,0x7ffa19ab1d94,110709698,0,0x0,8
tick,0x7ffa19ab1d94,110725780,0,0x0,8
tick,0x7ffa19ab1d94,110741692,0,0x0,8
tick,0x7ffa19ab1d94,110757735,0,0x0,8
tick,0x7ffa19ab1d94,110772908,0,0x0,8
tick,0x7ffa19ab1d94,110788519,0,0x0,8
tick,0x7ffa19ab1d94,110803637,0,0x0,8
tick,0x7ffa19ab1d94,110819268,0,0x0,8
tick,0x7ffa19ab1d94,110835105,0,0x0,8
tick,0x7ffa19ab1d94,110850149,0,0x0,8
tick,0x7ffa19ab1d94,110865643,0,0x0,8
tick,0x7ffa19ab1d94,110881993,0,0x0,8
tick,0x7ffa19ab1d94,110897394,0,0x0,8
tick,0x7ffa19ab1d94,110913359,0,0x0,8
tick,0x7ffa19ab1d94,110928503,0,0x0,8
tick,0x7ffa19ab1d94,110943904,0,0x0,8
tick,0x7ffa19ab1d94,110959262,0,0x0,8
tick,0x7ffa19ab1d94,110975455,0,0x0,8
tick,0x7ffa19ab1d94,110991098,0,0x0,8
tick,0x7ffa19ab1d94,111006340,0,0x0,8
tick,0x7ffa19ab1d94,111021552,0,0x0,8
tick,0x7ffa19ab1d94,111037703,0,0x0,8
tick,0x7ffa19ab1d94,111053963,0,0x0,8
tick,0x7ffa19ab1d94,111069244,0,0x0,8
tick,0x7ffa19ab1d94,111084442,0,0x0,8
tick,0x7ffa19ab1d94,111099633,0,0x0,8
tick,0x7ffa19ab1d94,111115521,0,0x0,8
tick,0x7ffa19ab1d94,111131342,0,0x0,8
tick,0x7ffa19ab1d94,111149464,0,0x0,8
tick,0x7ffa19ab1d94,111162760,0,0x0,8
tick,0x7ffa19ab1d94,111177874,0,0x0,8
tick,0x7ffa19ab1d94,111193953,0,0x0,8
tick,0x7ffa19ab1d94,111209679,0,0x0,8
tick,0x7ffa19ab1d94,111225376,0,0x0,8
tick,0x7ffa19ab1d94,111241805,0,0x0,8
tick,0x7ffa19ab1d94,111257370,0,0x0,8
tick,0x7ffa19ab1d94,111272950,0,0x0,8
tick,0x7ffa19ab1d94,111288568,0,0x0,8
tick,0x7ffa19ab1d94,111304721,0,0x0,8
tick,0x7ffa19ab1d94,111319298,0,0x0,8
tick,0x7ffa19ab1d94,111333886,0,0x0,8
tick,0x7ffa19ab1d94,111349258,0,0x0,8
tick,0x7ffa19ab1d94,111365710,0,0x0,8
tick,0x7ffa19ab1d94,111381002,0,0x0,8
tick,0x7ffa19ab1d94,111396178,0,0x0,8
tick,0x7ffa19ab1d94,111412142,0,0x0,8
tick,0x7ffa19ab1d94,111427055,0,0x0,8
tick,0x7ffa19ab1d94,111442629,0,0x0,8
tick,0x7ffa19ab1d94,111457654,0,0x0,8
tick,0x7ffa19ab1d94,111474409,0,0x0,8
tick,0x7ffa19ab1d94,111489994,0,0x0,8
tick,0x7ffa19ab1d94,111505326,0,0x0,8
tick,0x7ffa19ab1d94,111521318,0,0x0,8
tick,0x7ffa19ab1d94,111536222,0,0x0,8
tick,0x7ffa19ab1d94,111552421,0,0x0,8
tick,0x7ffa19ab1d94,111568220,0,0x0,8
tick,0x7ffa19ab1d94,111583472,0,0x0,8
tick,0x7ffa19ab1d94,111602614,0,0x0,8
tick,0x7ffa19ab1d94,111615549,0,0x0,8
tick,0x7ffa19ab1d94,111634710,0,0x0,8
tick,0x7ffa19ab1d94,111649000,0,0x0,8
tick,0x7ffa19ab1d94,111665411,0,0x0,8
tick,0x7ffa19ab1d94,111678050,0,0x0,8
tick,0x7ffa19ab1d94,111693417,0,0x0,8
tick,0x7ffa19ab1d94,111708771,0,0x0,8
tick,0x7ffa19ab1d94,111724532,0,0x0,8
tick,0x7ffa19ab1d94,111740235,0,0x0,8
tick,0x7ffa19ab1d94,111755765,0,0x0,8
tick,0x7ffa19ab1d94,111771870,0,0x0,8
tick,0x7ffa19ab1d94,111787168,0,0x0,8
tick,0x7ffa19ab1d94,111802906,0,0x0,8
tick,0x7ffa19ab1d94,111818596,0,0x0,8
tick,0x7ffa19ab1d94,111834233,0,0x0,8
tick,0x7ffa19ab1d94,111849727,0,0x0,8
tick,0x7ffa19ab1d94,111866334,0,0x0,8
tick,0x7ffa19ab1d94,111882187,0,0x0,8
tick,0x7ffa19ab1d94,111896197,0,0x0,8
tick,0x7ffa19ab1d94,111911737,0,0x0,8
tick,0x7ffa19ab1d94,111926565,0,0x0,8
tick,0x7ffa19ab1d94,111941840,0,0x0,8
tick,0x7ffa19ab1d94,111956935,0,0x0,8
tick,0x7ffa19ab1d94,111973241,0,0x0,8
tick,0x7ffa19ab1d94,111988326,0,0x0,8
tick,0x7ffa19ab1d94,112003876,0,0x0,8
tick,0x7ffa19ab1d94,112019553,0,0x0,8
tick,0x7ffa19ab1d94,112034588,0,0x0,8
tick,0x7ffa19ab1d94,112050202,0,0x0,8
tick,0x7ffa19ab1d94,112066194,0,0x0,8
tick,0x7ffa19ab1d94,112083402,0,0x0,8
tick,0x7ffa19ab1d94,112098625,0,0x0,8
tick,0x7ffa19ab1d94,112112287,0,0x0,8
tick,0x7ffa19ab1d94,112128069,0,0x0,8
tick,0x7ffa19ab1d94,112143634,0,0x0,8
tick,0x7ffa19ab1d94,112159214,0,0x0,8
tick,0x7ffa19ab1d94,112175029,0,0x0,8
tick,0x7ffa19ab1d94,112190725,0,0x0,8
tick,0x7ffa19ab1d94,112206743,0,0x0,8
tick,0x7ffa19ab1d94,112222664,0,0x0,8
tick,0x7ffa19ab1d94,112237818,0,0x0,8
tick,0x7ffa19ab1d94,112252588,0,0x0,8
tick,0x7ffa19ab1d94,112268722,0,0x0,8
tick,0x7ffa19ab1d94,112284247,0,0x0,8
tick,0x7ffa19ab1d94,112300259,0,0x0,8
tick,0x7ffa19ab1d94,112316228,0,0x0,8
tick,0x7ffa19ab1d94,112332424,0,0x0,8
tick,0x7ffa19ab1d94,112348171,0,0x0,8
tick,0x7ffa19ab1d94,112363850,0,0x0,8
tick,0x7ffa19ab1d94,112378791,0,0x0,8
tick,0x7ffa19ab1d94,112393689,0,0x0,8
tick,0x7ffa19ab1d94,112409080,0,0x0,8
tick,0x7ffa19ab1d94,112425085,0,0x0,8
tick,0x7ffa19ab1d94,112440681,0,0x0,8
tick,0x7ffa19ab1d94,112456612,0,0x0,8
tick,0x7ffa19ab1d94,112471874,0,0x0,8
tick,0x7ffa19ab1d94,112487023,0,0x0,8
tick,0x7ffa19ab1d94,112503015,0,0x0,8
tick,0x7ffa19ab1d94,112518438,0,0x0,8
tick,0x7ffa19ab1d94,112533808,0,0x0,8
tick,0x7ffa19ab1d94,112549664,0,0x0,8
tick,0x7ffa19ab1d94,112564934,0,0x0,8
tick,0x7ffa19ab1d94,112580410,0,0x0,8
tick,0x7ffa19ab1d94,112595740,0,0x0,8
tick,0x7ffa19ab1d94,112611641,0,0x0,8
tick,0x7ffa19ab1d94,112627532,0,0x0,8
tick,0x7ffa19ab1d94,112643148,0,0x0,8
tick,0x7ffa19ab1d94,112658326,0,0x0,8
tick,0x7ffa19ab1d94,112673664,0,0x0,8
tick,0x7ffa19ab1d94,112689051,0,0x0,8
tick,0x7ffa19ab1d94,112704172,0,0x0,8
tick,0x7ffa19ab1d94,112719155,0,0x0,8
tick,0x7ffa19ab1d94,112734623,0,0x0,8
tick,0x7ffa19ab1d94,112749725,0,0x0,8
tick,0x7ffa19ab1d94,112764731,0,0x0,8
tick,0x7ffa19ab1d94,112780799,0,0x0,8
tick,0x7ffa19ab1d94,112796381,0,0x0,8
tick,0x7ffa19ab1d94,112811421,0,0x0,8
tick,0x7ffa19ab1d94,112827054,0,0x0,8
tick,0x7ffa19ab1d94,112842351,0,0x0,8
tick,0x7ffa19ab1d94,112857469,0,0x0,8
tick,0x7ffa19ab1d94,112872386,0,0x0,8
tick,0x7ffa19ab1d94,112887506,0,0x0,8
tick,0x7ffa19ab1d94,112903150,0,0x0,8
tick,0x7ffa19ab1d94,112918807,0,0x0,8
tick,0x7ffa19ab1d94,112935379,0,0x0,8
tick,0x7ffa19ab1d94,112949972,0,0x0,8
tick,0x7ffa19ab1d94,112966420,0,0x0,8
tick,0x7ffa19ab1d94,112985924,0,0x0,8
tick,0x7ffa19ab1d94,113000052,0,0x0,8
tick,0x7ffa19ab1d94,113015035,0,0x0,8
tick,0x7ffa19ab1d94,113032157,0,0x0,8
tick,0x7ffa19ab1d94,113045138,0,0x0,8
tick,0x7ffa19ab1d94,113060891,0,0x0,8
tick,0x7ffa19ab1d94,113075970,0,0x0,8
tick,0x7ffa19ab1d94,113091487,0,0x0,8
tick,0x7ffa19ab1d94,113106169,0,0x0,8
tick,0x7ffa19ab1d94,113121776,0,0x0,8
tick,0x7ffa19ab1d94,113136934,0,0x0,8
tick,0x7ffa19ab1d94,113153151,0,0x0,8
tick,0x7ffa19ab1d94,113171926,0,0x0,8
tick,0x7ffa19ab1d94,113183713,0,0x0,8
tick,0x7ffa19ab1d94,113199405,0,0x0,8
tick,0x7ffa19ab1d94,113214844,0,0x0,8
tick,0x7ffa19ab1d94,113231549,0,0x0,8
tick,0x7ffa19ab1d94,113247755,0,0x0,8
tick,0x7ffa19ab1d94,113262566,0,0x0,8
tick,0x7ffa19ab1d94,113277874,0,0x0,8
tick,0x7ffa19ab1d94,113293760,0,0x0,8
tick,0x7ffa19ab1d94,113309251,0,0x0,8
tick,0x7ffa19ab1d94,113324116,0,0x0,8
tick,0x7ffa19ab1d94,113339511,0,0x0,8
tick,0x7ffa19ab1d94,113356966,0,0x0,8
tick,0x7ffa19ab1d94,113371663,0,0x0,8
tick,0x7ffa19ab1d94,113385898,0,0x0,8
tick,0x7ffa19ab1d94,113400638,0,0x0,8
tick,0x7ffa19ab1d94,113416054,0,0x0,8
tick,0x7ffa19ab1d94,113433952,0,0x0,8
tick,0x7ffa19ab1d94,113447377,0,0x0,8
tick,0x7ffa19ab1d94,113463069,0,0x0,8
tick,0x7ffa19ab1d94,113478905,0,0x0,8
tick,0x7ffa19ab1d94,113493845,0,0x0,8
tick,0x7ffa19ab1d94,113509400,0,0x0,8
tick,0x7ffa19ab1d94,113525548,0,0x0,8
tick,0x7ffa19ab1d94,113540148,0,0x0,8
tick,0x7ffa19ab1d94,113555997,0,0x0,8
tick,0x7ffa19ab1d94,113570764,0,0x0,8
tick,0x7ffa19ab1d94,113586455,0,0x0,8
tick,0x7ffa19ab1d94,113601659,0,0x0,8
tick,0x7ffa19ab1d94,113617392,0,0x0,8
tick,0x7ffa19ab1d94,113632647,0,0x0,8
tick,0x7ffa19ab1d94,113648672,0,0x0,8
tick,0x7ffa19ab1d94,113664687,0,0x0,8
tick,0x7ffa19ab1d94,113681937,0,0x0,8
tick,0x7ffa19ab1d94,113697553,0,0x0,8
tick,0x7ffa19ab1d94,113710670,0,0x0,8
tick,0x7ffa19ab1d94,113726158,0,0x0,8
tick,0x7ffa19ab1d94,113741560,0,0x0,8
tick,0x7ffa19ab1d94,113757193,0,0x0,8
tick,0x7ffa19ab1d94,113772529,0,0x0,8
tick,0x7ffa19ab1d94,113788413,0,0x0,8
tick,0x7ffa19ab1d94,113804003,0,0x0,8
tick,0x7ffa19ab1d94,113819066,0,0x0,8
tick,0x7ffa19ab1d94,113834588,0,0x0,8
tick,0x7ffa19ab1d94,113850493,0,0x0,8
tick,0x7ffa19ab1d94,113865937,0,0x0,8
tick,0x7ffa19ab1d94,113881393,0,0x0,8
tick,0x7ffa19ab1d94,113897295,0,0x0,8
tick,0x7ffa19ab1d94,113914353,0,0x0,8
tick,0x7ffa19ab1d94,113932083,0,0x0,8
tick,0x7ffa19ab1d94,113943618,0,0x0,8
tick,0x7ffa19ab1d94,113958626,0,0x0,8
tick,0x7ffa19ab1d94,113974600,0,0x0,8
tick,0x7ffa19ab1d94,113990184,0,0x0,8
tick,0x7ffa19ab1d94,114005994,0,0x0,8
tick,0x7ffa19ab1d94,114022103,0,0x0,8
tick,0x7ffa19ab1d94,114037385,0,0x0,8
tick,0x7ffa19ab1d94,114053989,0,0x0,8
tick,0x7ffa19ab1d94,114068414,0,0x0,8
tick,0x7ffa19ab1d94,114084610,0,0x0,8
tick,0x7ffa19ab1d94,114100138,0,0x0,8
tick,0x7ffa19ab1d94,114115275,0,0x0,8
tick,0x7ffa19ab1d94,114131157,0,0x0,8
tick,0x7ffa19ab1d94,114147934,0,0x0,8
tick,0x7ffa19ab1d94,114164822,0,0x0,8
tick,0x7ffa19ab1d94,114180537,0,0x0,8
tick,0x7ffa19ab1d94,114193783,0,0x0,8
tick,0x7ffa19ab1d94,114209840,0,0x0,8
tick,0x7ffa19ab1d94,114225292,0,0x0,8
tick,0x7ffa19ab1d94,114241603,0,0x0,8
tick,0x7ffa19ab1d94,114257479,0,0x0,8
tick,0x7ffa19ab1d94,114272330,0,0x0,8
tick,0x7ffa19ab1d94,114288622,0,0x0,8
tick,0x7ffa19ab1d94,114304269,0,0x0,8
tick,0x7ffa19ab1d94,114320544,0,0x0,8
tick,0x7ffa19ab1d94,114335963,0,0x0,8
tick,0x7ffa19ab1d94,114351854,0,0x0,8
tick,0x7ffa19ab1d94,114368736,0,0x0,8
tick,0x7ffa19ab1d94,114382961,0,0x0,8
tick,0x7ffa19ab1d94,114398530,0,0x0,8
tick,0x7ffa19ab1d94,114414247,0,0x0,8
tick,0x7ffa19ab1d94,114429579,0,0x0,8
tick,0x7ffa19ab1d94,114445646,0,0x0,8
tick,0x7ffa19ab1d94,114461557,0,0x0,8
tick,0x7ffa19ab1d94,114478384,0,0x0,8
tick,0x7ffa19ab1d94,114493449,0,0x0,8
tick,0x7ffa19ab1d94,114508587,0,0x0,8
tick,0x7ffa19ab1d94,114524614,0,0x0,8
tick,0x7ffa19ab1d94,114540585,0,0x0,8
tick,0x7ffa19ab1d94,114556762,0,0x0,8
tick,0x7ffa19ab1d94,114572935,0,0x0,8
tick,0x7ffa19ab1d94,114588443,0,0x0,8
tick,0x7ffa19ab1d94,114604658,0,0x0,8
tick,0x7ffa19ab1d94,114620131,0,0x0,8
tick,0x7ffa19ab1d94,114635579,0,0x0,8
tick,0x7ffa19ab1d94,114650937,0,0x0,8
tick,0x7ffa19ab1d94,114666647,0,0x0,8
tick,0x7ffa19ab1d94,114683256,0,0x0,8
tick,0x7ffa19ab1d94,114697988,0,0x0,8
tick,0x7ffa19ab1d94,114713331,0,0x0,8
tick,0x7ffa19ab1d94,114728954,0,0x0,8
tick,0x7ffa19ab1d94,114745240,0,0x0,8
tick,0x7ffa19ab1d94,114759597,0,0x0,8
tick,0x7ffa19ab1d94,114775419,0,0x0,8
tick,0x7ffa19ab1d94,114791542,0,0x0,8
tick,0x7ffa19ab1d94,114807283,0,0x0,8
tick,0x7ffa19ab1d94,114823195,0,0x0,8
tick,0x7ffa19ab1d94,114838056,0,0x0,8
tick,0x7ffa19ab1d94,114853663,0,0x0,8
tick,0x7ffa19ab1d94,114869891,0,0x0,8
tick,0x7ffa19ab1d94,114885326,0,0x0,8
tick,0x7ffa19ab1d94,114900454,0,0x0,8
tick,0x7ffa19ab1d94,114916622,0,0x0,8
tick,0x7ffa19ab1d94,114931906,0,0x0,8
tick,0x7ffa19ab1d94,114947210,0,0x0,8
tick,0x7ffa19ab1d94,114964329,0,0x0,8
tick,0x7ffa19ab1d94,114978950,0,0x0,8
tick,0x7ffa19ab1d94,114996775,0,0x0,8
tick,0x7ffa19ab1d94,115009554,0,0x0,8
tick,0x7ffa19ab1d94,115028757,0,0x0,8
tick,0x7ffa19ab1d94,115041927,0,0x0,8
tick,0x7ffa19ab1d94,115066880,0,0x0,8
tick,0x7ffa19ab1d94,115074626,0,0x0,8
tick,0x7ffa19ab1d94,115089150,0,0x0,8
tick,0x7ffa19ab1d94,115104427,0,0x0,8
tick,0x7ffa19ab1d94,115119727,0,0x0,8
tick,0x7ffa19ab1d94,115135912,0,0x0,8
tick,0x7ffa19ab1d94,115151750,0,0x0,8
tick,0x7ffa19ab1d94,115167124,0,0x0,8
tick,0x7ffa19ab1d94,115183032,0,0x0,8
tick,0x7ffa19ab1d94,115198560,0,0x0,8
tick,0x7ffa19ab1d94,115213907,0,0x0,8
tick,0x7ffa19ab1d94,115229728,0,0x0,8
tick,0x7ffa19ab1d94,115245875,0,0x0,8
tick,0x7ffa19ab1d94,115261805,0,0x0,8
tick,0x7ffa19ab1d94,115277376,0,0x0,8
tick,0x7ffa19ab1d94,115292558,0,0x0,8
tick,0x7ffa19ab1d94,115308099,0,0x0,8
tick,0x7ffa19ab1d94,115323712,0,0x0,8
tick,0x7ffa19ab1d94,115339087,0,0x0,8
tick,0x7ffa19ab1d94,115354757,0,0x0,8
tick,0x7ffa19ab1d94,115370462,0,0x0,8
tick,0x7ffa19ab1d94,115385396,0,0x0,8
tick,0x7ffa19ab1d94,115400913,0,0x0,8
tick,0x7ffa19ab1d94,115416515,0,0x0,8
tick,0x7ffa19ab1d94,115431904,0,0x0,8
tick,0x7ffa19ab1d94,115452604,0,0x0,8
tick,0x7ffa19ab1d94,115464576,0,0x0,8
tick,0x7ffa19ab1d94,115489559,0,0x0,8
tick,0x7ffa19ab1d94,115504430,0,0x0,8
tick,0x7ffa19ab1d94,115513465,0,0x0,8
tick,0x7ffa19ab1d94,115527751,0,0x0,8
tick,0x7ffa19ab1d94,115544647,0,0x0,8
tick,0x7ffa19ab1d94,115558241,0,0x0,8
tick,0x7ffa19ab1d94,115578661,0,0x0,8
tick,0x7ffa19ab1d94,115600736,0,0x0,8
tick,0x7ffa19ab1d94,115605114,0,0x0,8
tick,0x7ffa19ab1d94,115632197,0,0x0,8
tick,0x7ffa19ab1d94,115636044,0,0x0,8
tick,0x7ffa19ab1d94,115650901,0,0x0,8
tick,0x7ffa19ab1d94,115666665,0,0x0,8
tick,0x7ffa19ab1d94,115682255,0,0x0,8
tick,0x7ffa19ab1d94,115697954,0,0x0,8
tick,0x7ffa19ab1d94,115713056,0,0x0,8
tick,0x7ffa19ab1d94,115733973,0,0x0,8
tick,0x7ffa19ab1d94,115743946,0,0x0,8
tick,0x7ffa19ab1d94,115759956,0,0x0,8
tick,0x7ffa19ab1d94,115776875,0,0x0,8
tick,0x7ffa19ab1d94,115791703,0,0x0,8
tick,0x7ffa19ab1d94,115808918,0,0x0,8
tick,0x7ffa19ab1d94,115824436,0,0x0,8
tick,0x7ffa19ab1d94,115839918,0,0x0,8
tick,0x7ffa19ab1d94,115855752,0,0x0,8
tick,0x7ffa19ab1d94,115869742,0,0x0,8
tick,0x7ffa19ab1d94,115885987,0,0x0,8
tick,0x7ffa19ab1d94,115901125,0,0x0,8
tick,0x7ffa19ab1d94,115916807,0,0x0,8
tick,0x7ffa19ab1d94,115932922,0,0x0,8
tick,0x7ffa19ab1d94,115948382,0,0x0,8
tick,0x7ffa19ab1d94,115963746,0,0x0,8
tick,0x7ffa19ab1d94,115979849,0,0x0,8
tick,0x7ffa19ab1d94,115995739,0,0x0,8
tick,0x7ffa19ab1d94,116011937,0,0x0,8
tick,0x7ffa19ab1d94,116027913,0,0x0,8
tick,0x7ffa19ab1d94,116044529,0,0x0,8
tick,0x7ffa19ab1d94,116058586,0,0x0,8
tick,0x7ffa19ab1d94,116075019,0,0x0,8
tick,0x7ffa19ab1d94,116090189,0,0x0,8
tick,0x7ffa19ab1d94,116105998,0,0x0,8
tick,0x7ffa19ab1d94,116122059,0,0x0,8
tick,0x7ffa19ab1d94,116137616,0,0x0,8
tick,0x7ffa19ab1d94,116153440,0,0x0,8
tick,0x7ffa19ab1d94,116168706,0,0x0,8
tick,0x7ffa19ab1d94,116183954,0,0x0,8
tick,0x7ffa19ab1d94,116200791,0,0x0,8
tick,0x7ffa19ab1d94,116214875,0,0x0,8
tick,0x7ffa19ab1d94,116230941,0,0x0,8
tick,0x7ffa19ab1d94,116254645,0,0x0,8
tick,0x7ffa19ab1d94,116269788,0,0x0,8
tick,0x7ffa19ab1d94,116281990,0,0x0,8
tick,0x7ffa19ab1d94,116295801,0,0x0,8
tick,0x7ffa19ab1d94,116308657,0,0x0,8
tick,0x7ffa19ab1d94,116324479,0,0x0,8
tick,0x7ffa19ab1d94,116340071,0,0x0,8
tick,0x7ffa19ab1d94,116355430,0,0x0,8
tick,0x7ffa19ab1d94,116371494,0,0x0,8
tick,0x7ffa19ab1d94,116388058,0,0x0,8
tick,0x7ffa19ab1d94,116403081,0,0x0,8
tick,0x7ffa19ab1d94,116418953,0,0x0,8
tick,0x7ffa19ab1d94,116434597,0,0x0,8
tick,0x7ffa19ab1d94,116450141,0,0x0,8
tick,0x7ffa19ab1d94,116465664,0,0x0,8
tick,0x7ffa19ab1d94,116481617,0,0x0,8
tick,0x7ffa19ab1d94,116496395,0,0x0,8
tick,0x7ffa19ab1d94,116512640,0,0x0,8
tick,0x7ffa19ab1d94,116529212,0,0x0,8
tick,0x7ffa19ab1d94,116544383,0,0x0,8
tick,0x7ffa19ab1d94,116561792,0,0x0,8
tick,0x7ffa19ab1d94,116574835,0,0x0,8
tick,0x7ffa19ab1d94,116591532,0,0x0,8
tick,0x7ffa19ab1d94,116606663,0,0x0,8
tick,0x7ffa19ab1d94,116622980,0,0x0,8
tick,0x7ffa19ab1d94,116637913,0,0x0,8
tick,0x7ffa19ab1d94,116653845,0,0x0,8
tick,0x7ffa19ab1d94,116669620,0,0x0,8
tick,0x7ffa19ab1d94,116685162,0,0x0,8
tick,0x7ffa19ab1d94,116700655,0,0x0,8
tick,0x7ffa19ab1d94,116716507,0,0x0,8
tick,0x7ffa19ab1d94,116731729,0,0x0,8
tick,0x7ffa19ab1d94,116746846,0,0x0,8
tick,0x7ffa19ab1d94,116763312,0,0x0,8
tick,0x7ffa19ab1d94,116779050,0,0x0,8
tick,0x7ffa19ab1d94,116795301,0,0x0,8
tick,0x7ffa19ab1d94,116811569,0,0x0,8
tick,0x7ffa19ab1d94,116831224,0,0x0,8
tick,0x7ffa19ab1d94,116845819,0,0x0,8
tick,0x7ffa19ab1d94,116857119,0,0x0,8
tick,0x7ffa19ab1d94,116872131,0,0x0,8
tick,0x7ffa19ab1d94,116887707,0,0x0,8
tick,0x7ffa19ab1d94,116902619,0,0x0,8
tick,0x7ffa19ab1d94,116917716,0,0x0,8
tick,0x7ffa19ab1d94,116932824,0,0x0,8
tick,0x7ffa19ab1d94,116948578,0,0x0,8
tick,0x7ffa19ab1d94,116964220,0,0x0,8
tick,0x7ffa19ab1d94,116979949,0,0x0,8
tick,0x7ffa19ab1d94,117001395,0,0x0,8
tick,0x7ffa19ab1d94,117011947,0,0x0,8
tick,0x7ffa19ab1d94,117027955,0,0x0,8
tick,0x7ffa19ab1d94,117049779,0,0x0,8
tick,0x7ffa19ab1d94,117059826,0,0x0,8
tick,0x7ffa19ab1d94,117077327,0,0x0,8
tick,0x7ffa19ab1d94,117093559,0,0x0,8
tick,0x7ffa19ab1d94,117106429,0,0x0,8
tick,0x7ffa19ab1d94,117122008,0,0x0,8
tick,0x7ffa19ab1d94,117138178,0,0x0,8
tick,0x7ffa19ab1d94,117153428,0,0x0,8
tick,0x7ffa19ab1d94,117169135,0,0x0,8
tick,0x7ffa19ab1d94,117184009,0,0x0,8
tick,0x7ffa19ab1d94,117200125,0,0x0,8
tick,0x7ffa19ab1d94,117215711,0,0x0,8
tick,0x7ffa19ab1d94,117233200,0,0x0,8
tick,0x7ffa19ab1d94,117245744,0,0x0,8
tick,0x7ffa19ab1d94,117261974,0,0x0,8
tick,0x7ffa19ab1d94,117277860,0,0x0,8
tick,0x7ffa19ab1d94,117293945,0,0x0,8
tick,0x7ffa19ab1d94,117309578,0,0x0,8
tick,0x7ffa19ab1d94,117325930,0,0x0,8
tick,0x7ffa19ab1d94,117341906,0,0x0,8
tick,0x7ffa19ab1d94,117357281,0,0x0,8
tick,0x7ffa19ab1d94,117372921,0,0x0,8
tick,0x7ffa19ab1d94,117388840,0,0x0,8
tick,0x7ffa19ab1d94,117404861,0,0x0,8
tick,0x7ffa19ab1d94,117421550,0,0x0,8
tick,0x7ffa19ab1d94,117437028,0,0x0,8
tick,0x7ffa19ab1d94,117452902,0,0x0,8
tick,0x7ffa19ab1d94,117468733,0,0x0,8
tick,0x7ffa19ab1d94,117484003,0,0x0,8
tick,0x7ffa19ab1d94,117499579,0,0x0,8
tick,0x7ffa19ab1d94,117515497,0,0x0,8
tick,0x7ffa19ab1d94,117531513,0,0x0,8
tick,0x7ffa19ab1d94,117546929,0,0x0,8
tick,0x7ffa19ab1d94,117562814,0,0x0,8
tick,0x7ffa19ab1d94,117578171,0,0x0,8
tick,0x7ffa19ab1d94,117594329,0,0x0,8
tick,0x7ffa19ab1d94,117609762,0,0x0,8
tick,0x7ffa19ab1d94,117625178,0,0x0,8
tick,0x7ffa19ab1d94,117640490,0,0x0,8
tick,0x7ffa19ab1d94,117655815,0,0x0,8
tick,0x7ffa19ab1d94,117671607,0,0x0,8
tick,0x7ffa19ab1d94,117686858,0,0x0,8
tick,0x7ffa19ab1d94,117702107,0,0x0,8
tick,0x7ffa19ab1d94,117718133,0,0x0,8
tick,0x7ffa19ab1d94,117734235,0,0x0,8
tick,0x7ffa19ab1d94,117749725,0,0x0,8
tick,0x7ffa19ab1d94,117765478,0,0x0,8
tick,0x7ffa19ab1d94,117781844,0,0x0,8
tick,0x7ffa19ab1d94,117797097,0,0x0,8
tick,0x7ffa19ab1d94,117812617,0,0x0,8
tick,0x7ffa19ab1d94,117828315,0,0x0,8
tick,0x7ffa19ab1d94,117843680,0,0x0,8
tick,0x7ffa19ab1d94,117859356,0,0x0,8
tick,0x7ffa19ab1d94,117875525,0,0x0,8
tick,0x7ffa19ab1d94,117890092,0,0x0,8
tick,0x7ffa19ab1d94,117905979,0,0x0,8
tick,0x7ffa19ab1d94,117921602,0,0x0,8
tick,0x7ffa19ab1d94,117936751,0,0x0,8
tick,0x7ffa19ab1d94,117952314,0,0x0,8
tick,0x7ffa19ab1d94,117967746,0,0x0,8
tick,0x7ffa19ab1d94,117983322,0,0x0,8
tick,0x7ffa19ab1d94,117999421,0,0x0,8
tick,0x7ffa19ab1d94,118014828,0,0x0,8
tick,0x7ffa19ab1d94,118033972,0,0x0,8
tick,0x7ffa19ab1d94,118045471,0,0x0,8
tick,0x7ffa19ab1d94,118060911,0,0x0,8
tick,0x7ffa19ab1d94,118075327,0,0x0,8
tick,0x7ffa19ab1d94,118092226,0,0x0,8
tick,0x7ffa19ab1d94,118109615,0,0x0,8
tick,0x7ffa19ab1d94,118123068,0,0x0,8
tick,0x7ffa19ab1d94,118138610,0,0x0,8
tick,0x7ffa19ab1d94,118154715,0,0x0,8
tick,0x7ffa19ab1d94,118170108,0,0x0,8
tick,0x7ffa19ab1d94,118186059,0,0x0,8
tick,0x7ffa19ab1d94,118201546,0,0x0,8
tick,0x7ffa19ab1d94,118217347,0,0x0,8
tick,0x7ffa19ab1d94,118233067,0,0x0,8
tick,0x7ffa19ab1d94,118247934,0,0x0,8
tick,0x7ffa19ab1d94,118263283,0,0x0,8
tick,0x7ffa19ab1d94,118280728,0,0x0,8
tick,0x7ffa19ab1d94,118294944,0,0x0,8
tick,0x7ffa19ab1d94,118309843,0,0x0,8
tick,0x7ffa19ab1d94,118325327,0,0x0,8
tick,0x7ffa19ab1d94,118341886,0,0x0,8
tick,0x7ffa19ab1d94,118358949,0,0x0,8
tick,0x7ffa19ab1d94,118372863,0,0x0,8
tick,0x7ffa19ab1d94,118388756,0,0x0,8
tick,0x7ffa19ab1d94,118404633,0,0x0,8
tick,0x7ffa19ab1d94,118420137,0,0x0,8
tick,0x7ffa19ab1d94,118434742,0,0x0,8
tick,0x7ffa19ab1d94,118452023,0,0x0,8
tick,0x7ffa19ab1d94,118466346,0,0x0,8
tick,0x7ffa19ab1d94,118484759,0,0x0,8
tick,0x7ffa19ab1d94,118496940,0,0x0,8
tick,0x7ffa19ab1d94,118512724,0,0x0,8
tick,0x7ffa19ab1d94,118528386,0,0x0,8
tick,0x7ffa19ab1d94,118543727,0,0x0,8
tick,0x7ffa19ab1d94,118559635,0,0x0,8
tick,0x7ffa19ab1d94,118574813,0,0x0,8
tick,0x7ffa19ab1d94,118590980,0,0x0,8
tick,0x7ffa19ab1d94,118605692,0,0x0,8
tick,0x7ffa19ab1d94,118620993,0,0x0,8
tick,0x7ffa19ab1d94,118636286,0,0x0,8
tick,0x7ffa19ab1d94,118651827,0,0x0,8
tick,0x7ffa19ab1d94,118667662,0,0x0,8
tick,0x7ffa19ab1d94,118682891,0,0x0,8
tick,0x7ffa19ab1d94,118698868,0,0x0,8
tick,0x7ffa19ab1d94,118714815,0,0x0,8
tick,0x7ffa19ab1d94,118729578,0,0x0,8
tick,0x7ffa19ab1d94,118745370,0,0x0,8
tick,0x7ffa19ab1d94,118761083,0,0x0,8
tick,0x7ffa19ab1d94,118776732,0,0x0,8
tick,0x7ffa19ab1d94,118791708,0,0x0,8
tick,0x7ffa19ab1d94,118810008,0,0x0,8
tick,0x7ffa19ab1d94,118822492,0,0x0,8
tick,0x7ffa19ab1d94,118838702,0,0x0,8
tick,0x7ffa19ab1d94,118853696,0,0x0,8
tick,0x7ffa19ab1d94,118868782,0,0x0,8
tick,0x7ffa19ab1d94,118884445,0,0x0,8
tick,0x7ffa19ab1d94,118900289,0,0x0,8
tick,0x7ffa19ab1d94,118915486,0,0x0,8
tick,0x7ffa19ab1d94,118930777,0,0x0,8
tick,0x7ffa19ab1d94,118946365,0,0x0,8
tick,0x7ffa19ab1d94,118961842,0,0x0,8
tick,0x7ffa19ab1d94,118977110,0,0x0,8
tick,0x7ffa19ab1d94,118992665,0,0x0,8
tick,0x7ffa19ab1d94,119011545,0,0x0,8
tick,0x7ffa19ab1d94,119025570,0,0x0,8
tick,0x7ffa19ab1d94,119062351,0,0x0,8
tick,0x7ffa19ab1d94,119078113,0,0x0,8
tick,0x7ffa19ab1d94,119089085,0,0x0,8
tick,0x7ffa19ab1d94,119148406,0,0x0,8
tick,0x7ffa19ab1d94,119170962,0,0x0,8
tick,0x7ffa19ab1d94,119183492,0,0x0,8
tick,0x7ffa19ab1d94,119195290,0,0x0,8
tick,0x7ffa19ab1d94,119216072,0,0x0,8
tick,0x7ffa19ab1d94,119235392,0,0x0,8
tick,0x7ffa19ab1d94,119245429,0,0x0,8
tick,0x7ffa19ab1d94,119259729,0,0x0,8
tick,0x7ffa19ab1d94,119278525,0,0x0,8
tick,0x7ffa19ab1d94,119288069,0,0x0,8
tick,0x7ffa19ab1d94,119303642,0,0x0,8
tick,0x7ffa19ab1d94,119318250,0,0x0,8
tick,0x7ffa19ab1d94,119335436,0,0x0,8
tick,0x7ffa19ab1d94,119355808,0,0x0,8
tick,0x7ffa19ab1d94,119369050,0,0x0,8
tick,0x7ffa19ab1d94,119386342,0,0x0,8
tick,0x7ffa19ab1d94,119397256,0,0x0,8
tick,0x7ffa19ab1d94,119412910,0,0x0,8
tick,0x7ffa19ab1d94,119428592,0,0x0,8
tick,0x7ffa19ab1d94,119444316,0,0x0,8
tick,0x7ffa19ab1d94,119459443,0,0x0,8
tick,0x7ffa19ab1d94,119475295,0,0x0,8
tick,0x7ffa19ab1d94,119490784,0,0x0,8
tick,0x7ffa19ab1d94,119507149,0,0x0,8
tick,0x7ffa19ab1d94,119523103,0,0x0,8
tick,0x7ffa19ab1d94,119539952,0,0x0,8
tick,0x7ffa19ab1d94,119555019,0,0x0,8
tick,0x7ffa19ab1d94,119571629,0,0x0,8
tick,0x7ffa19ab1d94,119587764,0,0x0,8
tick,0x7ffa19ab1d94,119602958,0,0x0,8
tick,0x7ffa19ab1d94,119618228,0,0x0,8
tick,0x7ffa19ab1d94,119634098,0,0x0,8
tick,0x7ffa19ab1d94,119649962,0,0x0,8
tick,0x7ffa19ab1d94,119665759,0,0x0,8
tick,0x7ffa19ab1d94,119681716,0,0x0,8
tick,0x7ffa19ab1d94,119697575,0,0x0,8
tick,0x7ffa19ab1d94,119712847,0,0x0,8
tick,0x7ffa19ab1d94,119728381,0,0x0,8
tick,0x7ffa19ab1d94,119743718,0,0x0,8
tick,0x7ffa19ab1d94,119759207,0,0x0,8
tick,0x7ffa19ab1d94,119774863,0,0x0,8
tick,0x7ffa19ab1d94,119790371,0,0x0,8
tick,0x7ffa19ab1d94,119805651,0,0x0,8
tick,0x7ffa19ab1d94,119823097,0,0x0,8
tick,0x7ffa19ab1d94,119836944,0,0x0,8
tick,0x7ffa19ab1d94,119852994,0,0x0,8
tick,0x7ffa19ab1d94,119868824,0,0x0,8
tick,0x7ffa19ab1d94,119884817,0,0x0,8
tick,0x7ffa19ab1d94,119900267,0,0x0,8
tick,0x7ffa19ab1d94,119915428,0,0x0,8
tick,0x7ffa19ab1d94,119931095,0,0x0,8
tick,0x7ffa19ab1d94,119947016,0,0x0,8
tick,0x7ffa19ab1d94,119962858,0,0x0,8
tick,0x7ffa19ab1d94,119978892,0,0x0,8
tick,0x7ffa19ab1d94,119994779,0,0x0,8
tick,0x7ffa19ab1d94,120011182,0,0x0,8
tick,0x7ffa19ab1d94,120026163,0,0x0,8
tick,0x7ffa19ab1d94,120051495,0,0x0,8
tick,0x7ffa19ab1d94,120074535,0,0x0,8
tick,0x7ffa19ab1d94,120084192,0,0x0,8
tick,0x7ffa19ab1d94,120098805,0,0x0,8
tick,0x7ffa19ab1d94,120104991,0,0x0,8
tick,0x7ffa19ab1d94,120151141,0,0x0,8
tick,0x7ffa19ab1d94,120188127,0,0x0,8
tick,0x7ffa19ab1d94,120203286,0,0x0,8
tick,0x7ffa19ab1d94,120216454,0,0x0,8
tick,0x7ffa19ab1d94,120230590,0,0x0,8
tick,0x7ffa19ab1d94,120247421,0,0x0,8
tick,0x7ffa19ab1d94,120261955,0,0x0,8
tick,0x7ffa19ab1d94,120277278,0,0x0,8
tick,0x7ffa19ab1d94,120294500,0,0x0,8
tick,0x7ffa19ab1d94,120309054,0,0x0,8
tick,0x7ffa19ab1d94,120324075,0,0x0,8
tick,0x7ffa19ab1d94,120340914,0,0x0,8
tick,0x7ffa19ab1d94,120357215,0,0x0,8
tick,0x7ffa19ab1d94,120373744,0,0x0,8
tick,0x7ffa19ab1d94,120387936,0,0x0,8
tick,0x7ffa19ab1d94,120403549,0,0x0,8
tick,0x7ffa19ab1d94,120418352,0,0x0,8
tick,0x7ffa19ab1d94,120434350,0,0x0,8
tick,0x7ffa19ab1d94,120449786,0,0x0,8
tick,0x7ffa19ab1d94,120465659,0,0x0,8
tick,0x7ffa19ab1d94,120480716,0,0x0,8
tick,0x7ffa19ab1d94,120496099,0,0x0,8
tick,0x7ffa19ab1d94,120511655,0,0x0,8
tick,0x7ffa19ab1d94,120527604,0,0x0,8
tick,0x7ffa19ab1d94,120543593,0,0x0,8
tick,0x7ffa19ab1d94,120559574,0,0x0,8
tick,0x7ffa19ab1d94,120574960,0,0x0,8
tick,0x7ffa19ab1d94,120590575,0,0x0,8
tick,0x7ffa19ab1d94,120606479,0,0x0,8
tick,0x7ffa19ab1d94,120622356,0,0x0,8
tick,0x7ffa19ab1d94,120637751,0,0x0,8
tick,0x7ffa19ab1d94,120654034,0,0x0,8
tick,0x7ffa19ab1d94,120669776,0,0x0,8
tick,0x7ffa19ab1d94,120685737,0,0x0,8
tick,0x7ffa19ab1d94,120701460,0,0x0,8
tick,0x7ffa19ab1d94,120717060,0,0x0,8
tick,0x7ffa19ab1d94,120732756,0,0x0,8
tick,0x7ffa19ab1d94,120748056,0,0x0,8
tick,0x7ffa19ab1d94,120763346,0,0x0,8
tick,0x7ffa19ab1d94,120779114,0,0x0,8
tick,0x7ffa19ab1d94,120794684,0,0x0,8
tick,0x7ffa19ab1d94,120810208,0,0x0,8
tick,0x7ffa19ab1d94,120825618,0,0x0,8
tick,0x7ffa19ab1d94,120842013,0,0x0,8
tick,0x7ffa19ab1d94,120858031,0,0x0,8
tick,0x7ffa19ab1d94,120873787,0,0x0,8
tick,0x7ffa19ab1d94,120890063,0,0x0,8
tick,0x7ffa19ab1d94,120906516,0,0x0,8
tick,0x7ffa19ab1d94,120923600,0,0x0,8
tick,0x7ffa19ab1d94,120938220,0,0x0,8
tick,0x7ffa19ab1d94,120953987,0,0x0,8
tick,0x7ffa19ab1d94,120969355,0,0x0,8
tick,0x7ffa19ab1d94,120985047,0,0x0,8
tick,0x7ffa19ab1d94,121000191,0,0x0,8
tick,0x7ffa19ab1d94,121016676,0,0x0,8
tick,0x7ffa19ab1d94,121032930,0,0x0,8
tick,0x7ffa19ab1d94,121049903,0,0x0,8
tick,0x7ffa19ab1d94,121067398,0,0x0,8
tick,0x7ffa19ab1d94,121078776,0,0x0,8
tick,0x7ffa19ab1d94,121094775,0,0x0,8
tick,0x7ffa19ab1d94,121110938,0,0x0,8
tick,0x7ffa19ab1d94,121126284,0,0x0,8
tick,0x7ffa19ab1d94,121143099,0,0x0,8
tick,0x7ffa19ab1d94,121158104,0,0x0,8
tick,0x7ffa19ab1d94,121174559,0,0x0,8
tick,0x7ffa19ab1d94,121191730,0,0x0,8
tick,0x7ffa19ab1d94,121204723,0,0x0,8
tick,0x7ffa19ab1d94,121219751,0,0x0,8
tick,0x7ffa19ab1d94,121235786,0,0x0,8
tick,0x7ffa19ab1d94,121253362,0,0x0,8
tick,0x7ffa19ab1d94,121267777,0,0x0,8
tick,0x7ffa19ab1d94,121283675,0,0x0,8
tick,0x7ffa19ab1d94,121298802,0,0x0,8
tick,0x7ffa19ab1d94,121314881,0,0x0,8
tick,0x7ffa19ab1d94,121330286,0,0x0,8
tick,0x7ffa19ab1d94,121348172,0,0x0,8
tick,0x7ffa19ab1d94,121408204,0,0x0,8
tick,0x7ffa19ab1d94,121410717,0,0x0,8
tick,0x7ffa19ab1d94,121435175,0,0x0,8
tick,0x7ffa19ab1d94,121446132,0,0x0,8
tick,0x7ffa19ab1d94,121461635,0,0x0,8
tick,0x7ffa19ab1d94,121479824,0,0x0,8
tick,0x7ffa19ab1d94,121493155,0,0x0,8
tick,0x7ffa19ab1d94,121503727,0,0x0,8
tick,0x7ffa19ab1d94,121519369,0,0x0,8
tick,0x7ffa19ab1d94,121534855,0,0x0,8
tick,0x7ffa19ab1d94,121550758,0,0x0,8
tick,0x7ffa19ab1d94,121577687,0,0x0,8
tick,0x7ffa19ab1d94,121598362,0,0x0,8
tick,0x7ffa19ab1d94,121613395,0,0x0,8
tick,0x7ffa19ab1d94,121629154,0,0x0,8
tick,0x7ffa19ab1d94,121649119,0,0x0,8
tick,0x7ffa19ab1d94,121660748,0,0x0,8
tick,0x7ffa19ab1d94,121676738,0,0x0,8
tick,0x7ffa19ab1d94,121690274,0,0x0,8
tick,0x7ffa19ab1d94,121706095,0,0x0,8
tick,0x7ffa19ab1d94,121723379,0,0x0,8
tick,0x7ffa19ab1d94,121761086,0,0x0,8
tick,0x7ffa19ab1d94,121769368,0,0x0,8
tick,0x7ffa19ab1d94,121784855,0,0x0,8
tick,0x7ffa19ab1d94,121798958,0,0x0,8
tick,0x7ffa19ab1d94,121814839,0,0x0,8
tick,0x7ffa19ab1d94,121830814,0,0x0,8
tick,0x7ffa19ab1d94,121848067,0,0x0,8
tick,0x7ffa19ab1d94,121862958,0,0x0,8
tick,0x7ffa19ab1d94,121877002,0,0x0,8
tick,0x7ffa19ab1d94,121904321,0,0x0,8
tick,0x7ffa19ab1d94,121909674,0,0x0,8
tick,0x7ffa19ab1d94,121924330,0,0x0,8
tick,0x7ffa19ab1d94,121940950,0,0x0,8
tick,0x7ffa19ab1d94,121955475,0,0x0,8
tick,0x7ffa19ab1d94,121971711,0,0x0,8
tick,0x7ffa19ab1d94,121985595,0,0x0,8
tick,0x7ffa19ab1d94,122001267,0,0x0,8
tick,0x7ffa19ab1d94,122020861,0,0x0,8
tick,0x7ffa19ab1d94,122033767,0,0x0,8
tick,0x7ffa19ab1d94,122048978,0,0x0,8
tick,0x7ffa19ab1d94,122067450,0,0x0,8
tick,0x7ffa19ab1d94,122099292,0,0x0,8
tick,0x7ffa19ab1d94,122114404,0,0x0,8
tick,0x7ffa19ab1d94,122126752,0,0x0,8
tick,0x7ffa19ab1d94,122142066,0,0x0,8
tick,0x7ffa19ab1d94,122157795,0,0x0,8
tick,0x7ffa19ab1d94,122176472,0,0x0,8
tick,0x7ffa19ab1d94,122192391,0,0x0,8
tick,0x7ffa19ab1d94,122209200,0,0x0,8
tick,0x7ffa19ab1d94,122225071,0,0x0,8
tick,0x7ffa19ab1d94,122236018,0,0x0,8
tick,0x7ffa19ab1d94,122252293,0,0x0,8
tick,0x7ffa19ab1d94,122267625,0,0x0,8
tick,0x7ffa19ab1d94,122283467,0,0x0,8
tick,0x7ffa19ab1d94,122299002,0,0x0,8
tick,0x7ffa19ab1d94,122313944,0,0x0,8
tick,0x7ffa19ab1d94,122329659,0,0x0,8
tick,0x7ffa19ab1d94,122345408,0,0x0,8
tick,0x7ffa19ab1d94,122360913,0,0x0,8
tick,0x7ffa19ab1d94,122376848,0,0x0,8
tick,0x7ffa19ab1d94,122393132,0,0x0,8
tick,0x7ffa19ab1d94,122410136,0,0x0,8
tick,0x7ffa19ab1d94,122424974,0,0x0,8
tick,0x7ffa19ab1d94,122440109,0,0x0,8
tick,0x7ffa19ab1d94,122457242,0,0x0,8
tick,0x7ffa19ab1d94,122473917,0,0x0,8
tick,0x7ffa19ab1d94,122485821,0,0x0,8
tick,0x7ffa19ab1d94,122501577,0,0x0,8
tick,0x7ffa19ab1d94,122517267,0,0x0,8
tick,0x7ffa19ab1d94,122533003,0,0x0,8
tick,0x7ffa19ab1d94,122549080,0,0x0,8
tick,0x7ffa19ab1d94,122563346,0,0x0,8
tick,0x7ffa19ab1d94,122579284,0,0x0,8
tick,0x7ffa19ab1d94,122594782,0,0x0,8
tick,0x7ffa19ab1d94,122610077,0,0x0,8
tick,0x7ffa19ab1d94,122625159,0,0x0,8
tick,0x7ffa19ab1d94,122641902,0,0x0,8
tick,0x7ffa19ab1d94,122657483,0,0x0,8
tick,0x7ffa19ab1d94,122673033,0,0x0,8
tick,0x7ffa19ab1d94,122688663,0,0x0,8
tick,0x7ffa19ab1d94,122705628,0,0x0,8
tick,0x7ffa19ab1d94,122721691,0,0x0,8
tick,0x7ffa19ab1d94,122735554,0,0x0,8
tick,0x7ffa19ab1d94,122751860,0,0x0,8
tick,0x7ffa19ab1d94,122767668,0,0x0,8
tick,0x7ffa19ab1d94,122785553,0,0x0,8
tick,0x7ffa19ab1d94,122800958,0,0x0,8
tick,0x7ffa19ab1d94,122815745,0,0x0,8
tick,0x7ffa19ab1d94,122841206,0,0x0,8
tick,0x7ffa19ab1d94,122850459,0,0x0,8
tick,0x7ffa19ab1d94,122866734,0,0x0,8
tick,0x7ffa19ab1d94,122881683,0,0x0,8
tick,0x7ffa19ab1d94,122897637,0,0x0,8
tick,0x7ffa19ab1d94,122912021,0,0x0,8
tick,0x7ffa19ab1d94,122925430,0,0x0,8
tick,0x7ffa19ab1d94,122942927,0,0x0,8
tick,0x7ffa19ab1d94,122960821,0,0x0,8
tick,0x7ffa19ab1d94,122973936,0,0x0,8
tick,0x7ffa19ab1d94,122985297,0,0x0,8
tick,0x7ffa19ab1d94,123000526,0,0x0,8
tick,0x7ffa19ab1d94,123016799,0,0x0,8
tick,0x7ffa19ab1d94,123032288,0,0x0,8
tick,0x7ffa19ab1d94,123047195,0,0x0,8
tick,0x7ffa19ab1d94,123063032,0,0x0,8
tick,0x7ffa19ab1d94,123077541,0,0x0,8
tick,0x7ffa19ab1d94,123092926,0,0x0,8
tick,0x7ffa19ab1d94,123108649,0,0x0,8
tick,0x7ffa19ab1d94,123124465,0,0x0,8
tick,0x7ffa19ab1d94,123140431,0,0x0,8
tick,0x7ffa19ab1d94,123156732,0,0x0,8
tick,0x7ffa19ab1d94,123172625,0,0x0,8
tick,0x7ffa19ab1d94,123188283,0,0x0,8
tick,0x7ffa19ab1d94,123204023,0,0x0,8
tick,0x7ffa19ab1d94,123220797,0,0x0,8
tick,0x7ffa19ab1d94,123235131,0,0x0,8
tick,0x7ffa19ab1d94,123250606,0,0x0,8
tick,0x7ffa19ab1d94,123266812,0,0x0,8
tick,0x7ffa19ab1d94,123283191,0,0x0,8
tick,0x7ffa19ab1d94,123298489,0,0x0,8
tick,0x7ffa19ab1d94,123315029,0,0x0,8
tick,0x7ffa19ab1d94,123328974,0,0x0,8
tick,0x7ffa19ab1d94,123344248,0,0x0,8
tick,0x7ffa19ab1d94,123359864,0,0x0,8
tick,0x7ffa19ab1d94,123375004,0,0x0,8
tick,0x7ffa19ab1d94,123391747,0,0x0,8
tick,0x7ffa19ab1d94,123407239,0,0x0,8
tick,0x7ffa19ab1d94,123427922,0,0x0,8
tick,0x7ffa19ab1d94,123439462,0,0x0,8
tick,0x7ffa19ab1d94,123462434,0,0x0,8
tick,0x7ffa19ab1d94,123471572,0,0x0,8
tick,0x7ffa19ab1d94,123484018,0,0x0,8
tick,0x7ffa19ab1d94,123501421,0,0x0,8
tick,0x7ffa19ab1d94,123515238,0,0x0,8
tick,0x7ffa19ab1d94,123533959,0,0x0,8
tick,0x7ffa19ab1d94,123546385,0,0x0,8
tick,0x7ffa19ab1d94,123561551,0,0x0,8
tick,0x7ffa19ab1d94,123576661,0,0x0,8
tick,0x7ffa19ab1d94,123591716,0,0x0,8
tick,0x7ffa19ab1d94,123607260,0,0x0,8
tick,0x7ffa19ab1d94,123623727,0,0x0,8
tick,0x7ffa19ab1d94,123638860,0,0x0,8
tick,0x7ffa19ab1d94,123654480,0,0x0,8
tick,0x7ffa19ab1d94,123670046,0,0x0,8
tick,0x7ffa19ab1d94,123685380,0,0x0,8
tick,0x7ffa19ab1d94,123700707,0,0x0,8
tick,0x7ffa19ab1d94,123716560,0,0x0,8
tick,0x7ffa19ab1d94,123732341,0,0x0,8
tick,0x7ffa19ab1d94,123747565,0,0x0,8
tick,0x7ffa19ab1d94,123762740,0,0x0,8
tick,0x7ffa19ab1d94,123778847,0,0x0,8
tick,0x7ffa19ab1d94,123794905,0,0x0,8
tick,0x7ffa19ab1d94,123810895,0,0x0,8
tick,0x7ffa19ab1d94,123826349,0,0x0,8
tick,0x7ffa19ab1d94,123842001,0,0x0,8
tick,0x7ffa19ab1d94,123857293,0,0x0,8
tick,0x7ffa19ab1d94,123872861,0,0x0,8
tick,0x7ffa19ab1d94,123888945,0,0x0,8
tick,0x7ffa19ab1d94,123905660,0,0x0,8
tick,0x7ffa19ab1d94,123919961,0,0x0,8
tick,0x7ffa19ab1d94,123935583,0,0x0,8
tick,0x7ffa19ab1d94,123951882,0,0x0,8
tick,0x7ffa19ab1d94,123966671,0,0x0,8
tick,0x7ffa19ab1d94,123982301,0,0x0,8
tick,0x7ffa19ab1d94,123997871,0,0x0,8
tick,0x7ffa19ab1d94,124013229,0,0x0,8
tick,0x7ffa19ab1d94,124029211,0,0x0,8
tick,0x7ffa19ab1d94,124044621,0,0x0,8
tick,0x7ffa19ab1d94,124060129,0,0x0,8
tick,0x7ffa19ab1d94,124075907,0,0x0,8
tick,0x7ffa19ab1d94,124091593,0,0x0,8
tick,0x7ffa19ab1d94,124106705,0,0x0,8
tick,0x7ffa19ab1d94,124121793,0,0x0,8
tick,0x7ffa19ab1d94,124137051,0,0x0,8
tick,0x7ffa19ab1d94,124153656,0,0x0,8
tick,0x7ffa19ab1d94,124171019,0,0x0,8
tick,0x7ffa19ab1d94,124183344,0,0x0,8
tick,0x7ffa19ab1d94,124199025,0,0x0,8
tick,0x7ffa19ab1d94,124213463,0,0x0,8
tick,0x7ffa19ab1d94,124229409,0,0x0,8
tick,0x7ffa19ab1d94,124245162,0,0x0,8
tick,0x7ffa19ab1d94,124260837,0,0x0,8
tick,0x7ffa19ab1d94,124277548,0,0x0,8
tick,0x7ffa19ab1d94,124293490,0,0x0,8
tick,0x7ffa19ab1d94,124308151,0,0x0,8
tick,0x7ffa19ab1d94,124323441,0,0x0,8
tick,0x7ffa19ab1d94,124338676,0,0x0,8
tick,0x7ffa19ab1d94,124354376,0,0x0,8
tick,0x7ffa19ab1d94,124370332,0,0x0,8
tick,0x7ffa19ab1d94,124385639,0,0x0,8
tick,0x7ffa19ab1d94,124402256,0,0x0,8
tick,0x7ffa19ab1d94,124417610,0,0x0,8
tick,0x7ffa19ab1d94,124433279,0,0x0,8
tick,0x7ffa19ab1d94,124448404,0,0x0,8
tick,0x7ffa19ab1d94,124463576,0,0x0,8
tick,0x7ffa19ab1d94,124479208,0,0x0,8
tick,0x7ffa19ab1d94,124494957,0,0x0,8
tick,0x7ffa19ab1d94,124510742,0,0x0,8
tick,0x7ffa19ab1d94,124526142,0,0x0,8
tick,0x7ffa19ab1d94,124541912,0,0x0,8
tick,0x7ffa19ab1d94,124557212,0,0x0,8
tick,0x7ffa19ab1d94,124572676,0,0x0,8
tick,0x7ffa19ab1d94,124588742,0,0x0,8
tick,0x7ffa19ab1d94,124603845,0,0x0,8
tick,0x7ffa19ab1d94,124619820,0,0x0,8
tick,0x7ffa19ab1d94,124636115,0,0x0,8
tick,0x7ffa19ab1d94,124652292,0,0x0,8
tick,0x7ffa19ab1d94,124667322,0,0x0,8
tick,0x7ffa19ab1d94,124682579,0,0x0,8
tick,0x7ffa19ab1d94,124697753,0,0x0,8
tick,0x7ffa19ab1d94,124713722,0,0x0,8
tick,0x7ffa19ab1d94,124729234,0,0x0,8
tick,0x7ffa19ab1d94,124744797,0,0x0,8
tick,0x7ffa19ab1d94,124760758,0,0x0,8
tick,0x7ffa19ab1d94,124776078,0,0x0,8
tick,0x7ffa19ab1d94,124792040,0,0x0,8
tick,0x7ffa19ab1d94,124807242,0,0x0,8
tick,0x7ffa19ab1d94,124823131,0,0x0,8
tick,0x7ffa19ab1d94,124837427,0,0x0,8
tick,0x7ffa19ab1d94,124854164,0,0x0,8
tick,0x7ffa19ab1d94,124869597,0,0x0,8
tick,0x7ffa19ab1d94,124886606,0,0x0,8
tick,0x7ffa19ab1d94,124912354,0,0x0,8
tick,0x7ffa19ab1d94,124915982,0,0x0,8
tick,0x7ffa19ab1d94,124931823,0,0x0,8
tick,0x7ffa19ab1d94,124947147,0,0x0,8
tick,0x7ffa19ab1d94,124963047,0,0x0,8
tick,0x7ffa19ab1d94,124977757,0,0x0,8
tick,0x7ffa19ab1d94,124993049,0,0x0,8
tick,0x7ffa19ab1d94,125008754,0,0x0,8
tick,0x7ffa19ab1d94,125025103,0,0x0,8
tick,0x7ffa19ab1d94,125041317,0,0x0,8
tick,0x7ffa19ab1d94,125057230,0,0x0,8
tick,0x7ffa19ab1d94,125071648,0,0x0,8
tick,0x7ffa19ab1d94,125086297,0,0x0,8
tick,0x7ffa19ab1d94,125102161,0,0x0,8
tick,0x7ffa19ab1d94,125118447,0,0x0,8
tick,0x7ffa19ab1d94,125133452,0,0x0,8
tick,0x7ffa19ab1d94,125149633,0,0x0,8
tick,0x7ffa19ab1d94,125165247,0,0x0,8
tick,0x7ffa19ab1d94,125181002,0,0x0,8
tick,0x7ffa19ab1d94,125196484,0,0x0,8
tick,0x7ffa19ab1d94,125211633,0,0x0,8
tick,0x7ffa19ab1d94,125227221,0,0x0,8
tick,0x7ffa19ab1d94,125243188,0,0x0,8
tick,0x7ffa19ab1d94,125258937,0,0x0,8
tick,0x7ffa19ab1d94,125275927,0,0x0,8
tick,0x7ffa19ab1d94,125289796,0,0x0,8
tick,0x7ffa19ab1d94,125306190,0,0x0,8
tick,0x7ffa19ab1d94,125320617,0,0x0,8
tick,0x7ffa19ab1d94,125337644,0,0x0,8
tick,0x7ffa19ab1d94,125352507,0,0x0,8
tick,0x7ffa19ab1d94,125375780,0,0x0,8
tick,0x7ffa19ab1d94,125383362,0,0x0,8
tick,0x7ffa19ab1d94,125397754,0,0x0,8
tick,0x7ffa19ab1d94,125412906,0,0x0,8
tick,0x7ffa19ab1d94,125428883,0,0x0,8
tick,0x7ffa19ab1d94,125444713,0,0x0,8
tick,0x7ffa19ab1d94,125460274,0,0x0,8
tick,0x7ffa19ab1d94,125476808,0,0x0,8
tick,0x7ffa19ab1d94,125493647,0,0x0,8
tick,0x7ffa19ab1d94,125506569,0,0x0,8
tick,0x7ffa19ab1d94,125522135,0,0x0,8
tick,0x7ffa19ab1d94,125538011,0,0x0,8
tick,0x7ffa19ab1d94,125553888,0,0x0,8
tick,0x7ffa19ab1d94,125569934,0,0x0,8
tick,0x7ffa19ab1d94,125586132,0,0x0,8
tick,0x7ffa19ab1d94,125603437,0,0x0,8
tick,0x7ffa19ab1d94,125616497,0,0x0,8
tick,0x7ffa19ab1d94,125632001,0,0x0,8
tick,0x7ffa19ab1d94,125647258,0,0x0,8
tick,0x7ffa19ab1d94,125663267,0,0x0,8
tick,0x7ffa19ab1d94,125679019,0,0x0,8
tick,0x7ffa19ab1d94,125693966,0,0x0,8
tick,0x7ffa19ab1d94,125709774,0,0x0,8
tick,0x7ffa19ab1d94,125726193,0,0x0,8
tick,0x7ffa19ab1d94,125740888,0,0x0,8
tick,0x7ffa19ab1d94,125756570,0,0x0,8
tick,0x7ffa19ab1d94,125771878,0,0x0,8
tick,0x7ffa19ab1d94,125787622,0,0x0,8
tick,0x7ffa19ab1d94,125802853,0,0x0,8
tick,0x7ffa19ab1d94,125818472,0,0x0,8
tick,0x7ffa19ab1d94,125835554,0,0x0,8
tick,0x7ffa19ab1d94,125848841,0,0x0,8
tick,0x7ffa19ab1d94,125864795,0,0x0,8
tick,0x7ffa19ab1d94,125880025,0,0x0,8
tick,0x7ffa19ab1d94,125895548,0,0x0,8
tick,0x7ffa19ab1d94,125912158,0,0x0,8
tick,0x7ffa19ab1d94,125926734,0,0x0,8
tick,0x7ffa19ab1d94,125943292,0,0x0,8
tick,0x7ffa19ab1d94,125958775,0,0x0,8
tick,0x7ffa19ab1d94,125974220,0,0x0,8
tick,0x7ffa19ab1d94,125990036,0,0x0,8
tick,0x7ffa19ab1d94,126005872,0,0x0,8
tick,0x7ffa19ab1d94,126021819,0,0x0,8
tick,0x7ffa19ab1d94,126040220,0,0x0,8
tick,0x7ffa19ab1d94,126052233,0,0x0,8
tick,0x7ffa19ab1d94,126068630,0,0x0,8
tick,0x7ffa19ab1d94,126083046,0,0x0,8
tick,0x7ffa19ab1d94,126099125,0,0x0,8
tick,0x7ffa19ab1d94,126113575,0,0x0,8
tick,0x7ffa19ab1d94,126129748,0,0x0,8
tick,0x7ffa19ab1d94,126145189,0,0x0,8
tick,0x7ffa19ab1d94,126160697,0,0x0,8
tick,0x7ffa19ab1d94,126176044,0,0x0,8
tick,0x7ffa19ab1d94,126191611,0,0x0,8
tick,0x7ffa19ab1d94,126207724,0,0x0,8
tick,0x7ffa19ab1d94,126223982,0,0x0,8
tick,0x7ffa19ab1d94,126238856,0,0x0,8
tick,0x7ffa19ab1d94,126254213,0,0x0,8
tick,0x7ffa19ab1d94,126269425,0,0x0,8
tick,0x7ffa19ab1d94,126284863,0,0x0,8
tick,0x7ffa19ab1d94,126301870,0,0x0,8
tick,0x7ffa19ab1d94,126317046,0,0x0,8
tick,0x7ffa19ab1d94,126331893,0,0x0,8
tick,0x7ffa19ab1d94,126347114,0,0x0,8
tick,0x7ffa19ab1d94,126363722,0,0x0,8
tick,0x7ffa19ab1d94,126378452,0,0x0,8
tick,0x7ffa19ab1d94,126393660,0,0x0,8
tick,0x7ffa19ab1d94,126410091,0,0x0,8
tick,0x7ffa19ab1d94,126425039,0,0x0,8
tick,0x7ffa19ab1d94,126439913,0,0x0,8
tick,0x7ffa19ab1d94,126457073,0,0x0,8
tick,0x7ffa19ab1d94,126471940,0,0x0,8
tick,0x7ffa19ab1d94,126487206,0,0x0,8
tick,0x7ffa19ab1d94,126503683,0,0x0,8
tick,0x7ffa19ab1d94,126518629,0,0x0,8
tick,0x7ffa19ab1d94,126535055,0,0x0,8
tick,0x7ffa19ab1d94,126548608,0,0x0,8
tick,0x7ffa19ab1d94,126564404,0,0x0,8
tick,0x7ffa19ab1d94,126580491,0,0x0,8
tick,0x7ffa19ab1d94,126595524,0,0x0,8
tick,0x7ffa19ab1d94,126611699,0,0x0,8
tick,0x7ffa19ab1d94,126627407,0,0x0,8
tick,0x7ffa19ab1d94,126644904,0,0x0,8
tick,0x7ffa19ab1d94,126658684,0,0x0,8
tick,0x7ffa19ab1d94,126673813,0,0x0,8
tick,0x7ffa19ab1d94,126689220,0,0x0,8
tick,0x7ffa19ab1d94,126705014,0,0x0,8
tick,0x7ffa19ab1d94,126720546,0,0x0,8
tick,0x7ffa19ab1d94,126735967,0,0x0,8
tick,0x7ffa19ab1d94,126751809,0,0x0,8
tick,0x7ffa19ab1d94,126767928,0,0x0,8
tick,0x7ffa19ab1d94,126783582,0,0x0,8
tick,0x7ffa19ab1d94,126798849,0,0x0,8
tick,0x7ffa19ab1d94,126814609,0,0x0,8
tick,0x7ffa19ab1d94,126830033,0,0x0,8
tick,0x7ffa19ab1d94,126845261,0,0x0,8
tick,0x7ffa19ab1d94,126860744,0,0x0,8
tick,0x7ffa19ab1d94,126876215,0,0x0,8
tick,0x7ffa19ab1d94,126891621,0,0x0,8
tick,0x7ffa19ab1d94,126908726,0,0x0,8
tick,0x7ffa19ab1d94,126923027,0,0x0,8
tick,0x7ffa19ab1d94,126939023,0,0x0,8
tick,0x7ffa19ab1d94,126954521,0,0x0,8
tick,0x7ffa19ab1d94,126970493,0,0x0,8
tick,0x7ffa19ab1d94,126985955,0,0x0,8
tick,0x7ffa19ab1d94,127001901,0,0x0,8
tick,0x7ffa19ab1d94,127017667,0,0x0,8
tick,0x7ffa19ab1d94,127033078,0,0x0,8
tick,0x7ffa19ab1d94,127048627,0,0x0,8
tick,0x7ffa19ab1d94,127063619,0,0x0,8
tick,0x7ffa19ab1d94,127079427,0,0x0,8
tick,0x7ffa19ab1d94,127094352,0,0x0,8
tick,0x7ffa19ab1d94,127110054,0,0x0,8
tick,0x7ffa19ab1d94,127125889,0,0x0,8
tick,0x7ffa19ab1d94,127141905,0,0x0,8
tick,0x7ffa19ab1d94,127157938,0,0x0,8
tick,0x7ffa19ab1d94,127173115,0,0x0,8
tick,0x7ffa19ab1d94,127188755,0,0x0,8
tick,0x7ffa19ab1d94,127204053,0,0x0,8
tick,0x7ffa19ab1d94,127219568,0,0x0,8
tick,0x7ffa19ab1d94,127234899,0,0x0,8
tick,0x7ffa19ab1d94,127250623,0,0x0,8
tick,0x7ffa19ab1d94,127266836,0,0x0,8
tick,0x7ffa19ab1d94,127283567,0,0x0,8
tick,0x7ffa19ab1d94,127297066,0,0x0,8
tick,0x7ffa19ab1d94,127312768,0,0x0,8
tick,0x7ffa19ab1d94,127329149,0,0x0,8
tick,0x7ffa19ab1d94,127344804,0,0x0,8
tick,0x7ffa19ab1d94,127360052,0,0x0,8
tick,0x7ffa19ab1d94,127375598,0,0x0,8
tick,0x7ffa19ab1d94,127391617,0,0x0,8
tick,0x7ffa19ab1d94,127408046,0,0x0,8
tick,0x7ffa19ab1d94,127423714,0,0x0,8
tick,0x7ffa19ab1d94,127439046,0,0x0,8
tick,0x7ffa19ab1d94,127455011,0,0x0,8
tick,0x7ffa19ab1d94,127470210,0,0x0,8
tick,0x7ffa19ab1d94,127485685,0,0x0,8
tick,0x7ffa19ab1d94,127501387,0,0x0,8
tick,0x7ffa19ab1d94,127517049,0,0x0,8
tick,0x7ffa19ab1d94,127532901,0,0x0,8
tick,0x7ffa19ab1d94,127547543,0,0x0,8
tick,0x7ffa19ab1d94,127563087,0,0x0,8
tick,0x7ffa19ab1d94,127578743,0,0x0,8
tick,0x7ffa19ab1d94,127594389,0,0x0,8
tick,0x7ffa19ab1d94,127609818,0,0x0,8
tick,0x7ffa19ab1d94,127625713,0,0x0,8
tick,0x7ffa19ab1d94,127640922,0,0x0,8
tick,0x7ffa19ab1d94,127656584,0,0x0,8
tick,0x7ffa19ab1d94,127672513,0,0x0,8
tick,0x7ffa19ab1d94,127687789,0,0x0,8
tick,0x7ffa19ab1d94,127703288,0,0x0,8
tick,0x7ffa19ab1d94,127719007,0,0x0,8
tick,0x7ffa19ab1d94,127734636,0,0x0,8
tick,0x7ffa19ab1d94,127750290,0,0x0,8
tick,0x7ffa19ab1d94,127765870,0,0x0,8
tick,0x7ffa19ab1d94,127782185,0,0x0,8
tick,0x7ffa19ab1d94,127797420,0,0x0,8
tick,0x7ffa19ab1d94,127812964,0,0x0,8
tick,0x7ffa19ab1d94,127828242,0,0x0,8
tick,0x7ffa19ab1d94,127843956,0,0x0,8
tick,0x7ffa19ab1d94,127858799,0,0x0,8
tick,0x7ffa19ab1d94,127874734,0,0x0,8
tick,0x7ffa19ab1d94,127890885,0,0x0,8
tick,0x7ffa19ab1d94,127906750,0,0x0,8
tick,0x7ffa19ab1d94,127923072,0,0x0,8
tick,0x7ffa19ab1d94,127937992,0,0x0,8
tick,0x7ffa19ab1d94,127953094,0,0x0,8
tick,0x7ffa19ab1d94,127968346,0,0x0,8
tick,0x7ffa19ab1d94,127983831,0,0x0,8
tick,0x7ffa19ab1d94,128000331,0,0x0,8
tick,0x7ffa19ab1d94,128015787,0,0x0,8
tick,0x7ffa19ab1d94,128030666,0,0x0,8
tick,0x7ffa19ab1d94,128046734,0,0x0,8
tick,0x7ffa19ab1d94,128062686,0,0x0,8
tick,0x7ffa19ab1d94,128077615,0,0x0,8
tick,0x7ffa19ab1d94,128092979,0,0x0,8
tick,0x7ffa19ab1d94,128108085,0,0x0,8
tick,0x7ffa19ab1d94,128123358,0,0x0,8
tick,0x7ffa19ab1d94,128138927,0,0x0,8
tick,0x7ffa19ab1d94,128154416,0,0x0,8
tick,0x7ffa19ab1d94,128169877,0,0x0,8
tick,0x7ffa19ab1d94,128184704,0,0x0,8
tick,0x7ffa19ab1d94,128200660,0,0x0,8
tick,0x7ffa19ab1d94,128216900,0,0x0,8
tick,0x7ffa19ab1d94,128232789,0,0x0,8
tick,0x7ffa19ab1d94,128248973,0,0x0,8
tick,0x7ffa19ab1d94,128264755,0,0x0,8
tick,0x7ffa19ab1d94,128280275,0,0x0,8
tick,0x7ffa19ab1d94,128295601,0,0x0,8
tick,0x7ffa19ab1d94,128311651,0,0x0,8
tick,0x7ffa19ab1d94,128326756,0,0x0,8
tick,0x7ffa19ab1d94,128342124,0,0x0,8
tick,0x7ffa19ab1d94,128357776,0,0x0,8
tick,0x7ffa19ab1d94,128373334,0,0x0,8
tick,0x7ffa19ab1d94,128389048,0,0x0,8
tick,0x7ffa19ab1d94,128404408,0,0x0,8
tick,0x7ffa19ab1d94,128419620,0,0x0,8
tick,0x7ffa19ab1d94,128434908,0,0x0,8
tick,0x7ffa19ab1d94,128450800,0,0x0,8
tick,0x7ffa19ab1d94,128466338,0,0x0,8
tick,0x7ffa19ab1d94,128482332,0,0x0,8
tick,0x7ffa19ab1d94,128496590,0,0x0,8
tick,0x7ffa19ab1d94,128512745,0,0x0,8
tick,0x7ffa19ab1d94,128528408,0,0x0,8
tick,0x7ffa19ab1d94,128543573,0,0x0,8
tick,0x7ffa19ab1d94,128558816,0,0x0,8
tick,0x7ffa19ab1d94,128574634,0,0x0,8
tick,0x7ffa19ab1d94,128590931,0,0x0,8
tick,0x7ffa19ab1d94,128606894,0,0x0,8
tick,0x7ffa19ab1d94,128622974,0,0x0,8
tick,0x7ffa19ab1d94,128638210,0,0x0,8
tick,0x7ffa19ab1d94,128653983,0,0x0,8
tick,0x7ffa19ab1d94,128669662,0,0x0,8
tick,0x7ffa19ab1d94,128685662,0,0x0,8
tick,0x7ffa19ab1d94,128701457,0,0x0,8
tick,0x7ffa19ab1d94,128716796,0,0x0,8
tick,0x7ffa19ab1d94,128733014,0,0x0,8
tick,0x7ffa19ab1d94,128748628,0,0x0,8
tick,0x7ffa19ab1d94,128763830,0,0x0,8
tick,0x7ffa19ab1d94,128778830,0,0x0,8
tick,0x7ffa19ab1d94,128794452,0,0x0,8
tick,0x7ffa19ab1d94,128810561,0,0x0,8
tick,0x7ffa19ab1d94,128825895,0,0x0,8
tick,0x7ffa19ab1d94,128841834,0,0x0,8
tick,0x7ffa19ab1d94,128857577,0,0x0,8
tick,0x7ffa19ab1d94,128872805,0,0x0,8
tick,0x7ffa19ab1d94,128888243,0,0x0,8
tick,0x7ffa19ab1d94,128903529,0,0x0,8
tick,0x7ffa19ab1d94,128918815,0,0x0,8
tick,0x7ffa19ab1d94,128934463,0,0x0,8
tick,0x7ffa19ab1d94,128950141,0,0x0,8
tick,0x7ffa19ab1d94,128965627,0,0x0,8
tick,0x7ffa19ab1d94,128981604,0,0x0,8
tick,0x7ffa19ab1d94,128997937,0,0x0,8
tick,0x7ffa19ab1d94,129012680,0,0x0,8
tick,0x7ffa19ab1d94,129028226,0,0x0,8
tick,0x7ffa19ab1d94,129043719,0,0x0,8
tick,0x7ffa19ab1d94,129059413,0,0x0,8
tick,0x7ffa19ab1d94,129075412,0,0x0,8
tick,0x7ffa19ab1d94,129091077,0,0x0,8
tick,0x7ffa19ab1d94,129107394,0,0x0,8
tick,0x7ffa19ab1d94,129121838,0,0x0,8
tick,0x7ffa19ab1d94,129136745,0,0x0,8
tick,0x7ffa19ab1d94,129152871,0,0x0,8
tick,0x7ffa19ab1d94,129168084,0,0x0,8
tick,0x7ffa19ab1d94,129184171,0,0x0,8
tick,0x7ffa19ab1d94,129199925,0,0x0,8
tick,0x7ffa19ab1d94,129215416,0,0x0,8
tick,0x7ffa19ab1d94,129231879,0,0x0,8
tick,0x7ffa19ab1d94,129248101,0,0x0,8
tick,0x7ffa19ab1d94,129269314,0,0x0,8
tick,0x7ffa19ab1d94,129279263,0,0x0,8
tick,0x7ffa19ab1d94,129295595,0,0x0,8
tick,0x7ffa19ab1d94,129309606,0,0x0,8
tick,0x7ffa19ab1d94,129328438,0,0x0,8
tick,0x7ffa19ab1d94,129341996,0,0x0,8
tick,0x7ffa19ab1d94,129360908,0,0x0,8
tick,0x7ffa19ab1d94,129373966,0,0x0,8
tick,0x7ffa19ab1d94,129389425,0,0x0,8
tick,0x7ffa19ab1d94,129410717,0,0x0,8
tick,0x7ffa19ab1d94,129419263,0,0x0,8
tick,0x7ffa19ab1d94,129434702,0,0x0,8
tick,0x7ffa19ab1d94,129456526,0,0x0,8
tick,0x7ffa19ab1d94,129466824,0,0x0,8
tick,0x7ffa19ab1d94,129486471,0,0x0,8
tick,0x7ffa19ab1d94,129498843,0,0x0,8
tick,0x7ffa19ab1d94,129517115,0,0x0,8
tick,0x7ffa19ab1d94,129534309,0,0x0,8
tick,0x7ffa19ab1d94,129544934,0,0x0,8
tick,0x7ffa19ab1d94,129560400,0,0x0,8
tick,0x7ffa19ab1d94,129576291,0,0x0,8
tick,0x7ffa19ab1d94,129591678,0,0x0,8
tick,0x7ffa19ab1d94,129606892,0,0x0,8
tick,0x7ffa19ab1d94,129622579,0,0x0,8
tick,0x7ffa19ab1d94,129638294,0,0x0,8
tick,0x7ffa19ab1d94,129654483,0,0x0,8
tick,0x7ffa19ab1d94,129670193,0,0x0,8
tick,0x7ffa19ab1d94,129686492,0,0x0,8
tick,0x7ffa19ab1d94,129703838,0,0x0,8
tick,0x7ffa19ab1d94,129718148,0,0x0,8
tick,0x7ffa19ab1d94,129734403,0,0x0,8
tick,0x7ffa19ab1d94,129749397,0,0x0,8
tick,0x7ffa19ab1d94,129766530,0,0x0,8
tick,0x7ffa19ab1d94,129782088,0,0x0,8
tick,0x7ffa19ab1d94,129795878,0,0x0,8
tick,0x7ffa19ab1d94,129811354,0,0x0,8
tick,0x7ffa19ab1d94,129827107,0,0x0,8
tick,0x7ffa19ab1d94,129842408,0,0x0,8
tick,0x7ffa19ab1d94,129857882,0,0x0,8
tick,0x7ffa19ab1d94,129873353,0,0x0,8
tick,0x7ffa19ab1d94,129888638,0,0x0,8
tick,0x7ffa19ab1d94,129904782,0,0x0,8
tick,0x7ffa19ab1d94,129921439,0,0x0,8
tick,0x7ffa19ab1d94,129937062,0,0x0,8
tick,0x7ffa19ab1d94,129952126,0,0x0,8
tick,0x7ffa19ab1d94,129967857,0,0x0,8
tick,0x7ffa19ab1d94,129983445,0,0x0,8
tick,0x7ffa19ab1d94,129998887,0,0x0,8
tick,0x7ffa19ab1d94,130015012,0,0x0,8
tick,0x7ffa19ab1d94,130030215,0,0x0,8
tick,0x7ffa19ab1d94,130045325,0,0x0,8
tick,0x7ffa19ab1d94,130060671,0,0x0,8
tick,0x7ffa19ab1d94,130076131,0,0x0,8
tick,0x7ffa19ab1d94,130092052,0,0x0,8
tick,0x7ffa19ab1d94,130107689,0,0x0,8
tick,0x7ffa19ab1d94,130123030,0,0x0,8
tick,0x7ffa19ab1d94,130138479,0,0x0,8
tick,0x7ffa19ab1d94,130154620,0,0x0,8
tick,0x7ffa19ab1d94,130170496,0,0x0,8
tick,0x7ffa19ab1d94,130186447,0,0x0,8
tick,0x7ffa19ab1d94,130201783,0,0x0,8
tick,0x7ffa19ab1d94,130216801,0,0x0,8
tick,0x7ffa19ab1d94,130232936,0,0x0,8
tick,0x7ffa19ab1d94,130248701,0,0x0,8
tick,0x7ffa19ab1d94,130264510,0,0x0,8
tick,0x7ffa19ab1d94,130280159,0,0x0,8
tick,0x7ffa19ab1d94,130296979,0,0x0,8
tick,0x7ffa19ab1d94,130311753,0,0x0,8
tick,0x7ffa19ab1d94,130327346,0,0x0,8
tick,0x7ffa19ab1d94,130342991,0,0x0,8
tick,0x7ffa19ab1d94,130358250,0,0x0,8
tick,0x7ffa19ab1d94,130374548,0,0x0,8
tick,0x7ffa19ab1d94,130389944,0,0x0,8
tick,0x7ffa19ab1d94,130406006,0,0x0,8
tick,0x7ffa19ab1d94,130421385,0,0x0,8
tick,0x7ffa19ab1d94,130437396,0,0x0,8
tick,0x7ffa19ab1d94,130454179,0,0x0,8
tick,0x7ffa19ab1d94,130469448,0,0x0,8
tick,0x7ffa19ab1d94,130484187,0,0x0,8
tick,0x7ffa19ab1d94,130499974,0,0x0,8
tick,0x7ffa19ab1d94,130515706,0,0x0,8
tick,0x7ffa19ab1d94,130531155,0,0x0,8
tick,0x7ffa19ab1d94,130546527,0,0x0,8
tick,0x7ffa19ab1d94,130561994,0,0x0,8
tick,0x7ffa19ab1d94,130577443,0,0x0,8
tick,0x7ffa19ab1d94,130592913,0,0x0,8
tick,0x7ffa19ab1d94,130608425,0,0x0,8
tick,0x7ffa19ab1d94,130624324,0,0x0,8
tick,0x7ffa19ab1d94,130640686,0,0x0,8
tick,0x7ffa19ab1d94,130656101,0,0x0,8
tick,0x7ffa19ab1d94,130670670,0,0x0,8
tick,0x7ffa19ab1d94,130686333,0,0x0,8
tick,0x7ffa19ab1d94,130701738,0,0x0,8
tick,0x7ffa19ab1d94,130716892,0,0x0,8
tick,0x7ffa19ab1d94,130734942,0,0x0,8
tick,0x7ffa19ab1d94,130749343,0,0x0,8
tick,0x7ffa19ab1d94,130765032,0,0x0,8
tick,0x7ffa19ab1d94,130779075,0,0x0,8
tick,0x7ffa19ab1d94,130794936,0,0x0,8
tick,0x7ffa19ab1d94,130811394,0,0x0,8
tick,0x7ffa19ab1d94,130825865,0,0x0,8
tick,0x7ffa19ab1d94,130841445,0,0x0,8
tick,0x7ffa19ab1d94,130856725,0,0x0,8
tick,0x7ffa19ab1d94,130873113,0,0x0,8
tick,0x7ffa19ab1d94,130888181,0,0x0,8
tick,0x7ffa19ab1d94,130903482,0,0x0,8
tick,0x7ffa19ab1d94,130918940,0,0x0,8
tick,0x7ffa19ab1d94,130935161,0,0x0,8
tick,0x7ffa19ab1d94,130950926,0,0x0,8
tick,0x7ffa19ab1d94,130966677,0,0x0,8
tick,0x7ffa19ab1d94,130981761,0,0x0,8
tick,0x7ffa19ab1d94,130998058,0,0x0,8
tick,0x7ffa19ab1d94,131013659,0,0x0,8
tick,0x7ffa19ab1d94,131029639,0,0x0,8
tick,0x7ffa19ab1d94,131046000,0,0x0,8
tick,0x7ffa19ab1d94,131062285,0,0x0,8
tick,0x7ffa19ab1d94,131076965,0,0x0,8
tick,0x7ffa19ab1d94,131091623,0,0x0,8
tick,0x7ffa19ab1d94,131106938,0,0x0,8
tick,0x7ffa19ab1d94,131124004,0,0x0,8
tick,0x7ffa19ab1d94,131138262,0,0x0,8
tick,0x7ffa19ab1d94,131153910,0,0x0,8
tick,0x7ffa19ab1d94,131169625,0,0x0,8
tick,0x7ffa19ab1d94,131184856,0,0x0,8
tick,0x7ffa19ab1d94,131200213,0,0x0,8
tick,0x7ffa19ab1d94,131215745,0,0x0,8
tick,0x7ffa19ab1d94,131231526,0,0x0,8
tick,0x7ffa19ab1d94,131246983,0,0x0,8
tick,0x7ffa19ab1d94,131263082,0,0x0,8
tick,0x7ffa19ab1d94,131277991,0,0x0,8
tick,0x7ffa19ab1d94,131293066,0,0x0,8
tick,0x7ffa19ab1d94,131308806,0,0x0,8
tick,0x7ffa19ab1d94,131324566,0,0x0,8
tick,0x7ffa19ab1d94,131339952,0,0x0,8
tick,0x7ffa19ab1d94,131355192,0,0x0,8
tick,0x7ffa19ab1d94,131370540,0,0x0,8
tick,0x7ffa19ab1d94,131386676,0,0x0,8
tick,0x7ffa19ab1d94,131401759,0,0x0,8
tick,0x7ffa19ab1d94,131417107,0,0x0,8
tick,0x7ffa19ab1d94,131433342,0,0x0,8
tick,0x7ffa19ab1d94,131448507,0,0x0,8
tick,0x7ffa19ab1d94,131464187,0,0x0,8
tick,0x7ffa19ab1d94,131480036,0,0x0,8
tick,0x7ffa19ab1d94,131495055,0,0x0,8
tick,0x7ffa19ab1d94,131510647,0,0x0,8
tick,0x7ffa19ab1d94,131525890,0,0x0,8
tick,0x7ffa19ab1d94,131541594,0,0x0,8
tick,0x7ffa19ab1d94,131557072,0,0x0,8
tick,0x7ffa19ab1d94,131572722,0,0x0,8
tick,0x7ffa19ab1d94,131588137,0,0x0,8
tick,0x7ffa19ab1d94,131603858,0,0x0,8
tick,0x7ffa19ab1d94,131619838,0,0x0,8
tick,0x7ffa19ab1d94,131635355,0,0x0,8
tick,0x7ffa19ab1d94,131650590,0,0x0,8
tick,0x7ffa19ab1d94,131666748,0,0x0,8
tick,0x7ffa19ab1d94,131681833,0,0x0,8
tick,0x7ffa19ab1d94,131697568,0,0x0,8
tick,0x7ffa19ab1d94,131712943,0,0x0,8
tick,0x7ffa19ab1d94,131729062,0,0x0,8
tick,0x7ffa19ab1d94,131745400,0,0x0,8
tick,0x7ffa19ab1d94,131760677,0,0x0,8
tick,0x7ffa19ab1d94,131776458,0,0x0,8
tick,0x7ffa19ab1d94,131791901,0,0x0,8
tick,0x7ffa19ab1d94,131807155,0,0x0,8
tick,0x7ffa19ab1d94,131822674,0,0x0,8
tick,0x7ffa19ab1d94,131838181,0,0x0,8
tick,0x7ffa19ab1d94,131853261,0,0x0,8
tick,0x7ffa19ab1d94,131868839,0,0x0,8
tick,0x7ffa19ab1d94,131884940,0,0x0,8
tick,0x7ffa19ab1d94,131900462,0,0x0,8
tick,0x7ffa19ab1d94,131916587,0,0x0,8
tick,0x7ffa19ab1d94,131931832,0,0x0,8
tick,0x7ffa19ab1d94,131947666,0,0x0,8
tick,0x7ffa19ab1d94,131963126,0,0x0,8
tick,0x7ffa19ab1d94,131979241,0,0x0,8
tick,0x7ffa19ab1d94,131994784,0,0x0,8
tick,0x7ffa19ab1d94,132010649,0,0x0,8
tick,0x7ffa19ab1d94,132026706,0,0x0,8
tick,0x7ffa19ab1d94,132041670,0,0x0,8
tick,0x7ffa19ab1d94,132057067,0,0x0,8
tick,0x7ffa19ab1d94,132072131,0,0x0,8
tick,0x7ffa19ab1d94,132088744,0,0x0,8
tick,0x7ffa19ab1d94,132104161,0,0x0,8
tick,0x7ffa19ab1d94,132120058,0,0x0,8
tick,0x7ffa19ab1d94,132135942,0,0x0,8
tick,0x7ffa19ab1d94,132150869,0,0x0,8
tick,0x7ffa19ab1d94,132167092,0,0x0,8
tick,0x7ffa19ab1d94,132182733,0,0x0,8
tick,0x7ffa19ab1d94,132198018,0,0x0,8
tick,0x7ffa19ab1d94,132213757,0,0x0,8
tick,0x7ffa19ab1d94,132229553,0,0x0,8
tick,0x7ffa19ab1d94,132245224,0,0x0,8
tick,0x7ffa19ab1d94,132260992,0,0x0,8
tick,0x7ffa19ab1d94,132276600,0,0x0,8
tick,0x7ffa19ab1d94,132291766,0,0x0,8
tick,0x7ffa19ab1d94,132307020,0,0x0,8
tick,0x7ffa19ab1d94,132322498,0,0x0,8
tick,0x7ffa19ab1d94,132337653,0,0x0,8
tick,0x7ffa19ab1d94,132353139,0,0x0,8
tick,0x7ffa19ab1d94,132368642,0,0x0,8
tick,0x7ffa19ab1d94,132384068,0,0x0,8
tick,0x7ffa19ab1d94,132399711,0,0x0,8
tick,0x7ffa19ab1d94,132415419,0,0x0,8
tick,0x7ffa19ab1d94,132431596,0,0x0,8
tick,0x7ffa19ab1d94,132446966,0,0x0,8
tick,0x7ffa19ab1d94,132463442,0,0x0,8
tick,0x7ffa19ab1d94,132478942,0,0x0,8
tick,0x7ffa19ab1d94,132496508,0,0x0,8
tick,0x7ffa19ab1d94,132509112,0,0x0,8
tick,0x7ffa19ab1d94,132525323,0,0x0,8
tick,0x7ffa19ab1d94,132541603,0,0x0,8
tick,0x7ffa19ab1d94,132556770,0,0x0,8
tick,0x7ffa19ab1d94,132572816,0,0x0,8
tick,0x7ffa19ab1d94,132588559,0,0x0,8
tick,0x7ffa19ab1d94,132603644,0,0x0,8
tick,0x7ffa19ab1d94,132619292,0,0x0,8
tick,0x7ffa19ab1d94,132635373,0,0x0,8
tick,0x7ffa19ab1d94,132650496,0,0x0,8
tick,0x7ffa19ab1d94,132666101,0,0x0,8
tick,0x7ffa19ab1d94,132681639,0,0x0,8
tick,0x7ffa19ab1d94,132697088,0,0x0,8
tick,0x7ffa19ab1d94,132713172,0,0x0,8
tick,0x7ffa19ab1d94,132728397,0,0x0,8
tick,0x7ffa19ab1d94,132744529,0,0x0,8
tick,0x7ffa19ab1d94,132759646,0,0x0,8
tick,0x7ffa19ab1d94,132775333,0,0x0,8
tick,0x7ffa19ab1d94,132790708,0,0x0,8
tick,0x7ffa19ab1d94,132806414,0,0x0,8
tick,0x7ffa19ab1d94,132821830,0,0x0,8
tick,0x7ffa19ab1d94,132837480,0,0x0,8
tick,0x7ffa19ab1d94,132852982,0,0x0,8
tick,0x7ffa19ab1d94,132868353,0,0x0,8
tick,0x7ffa19ab1d94,132884529,0,0x0,8
tick,0x7ffa19ab1d94,132900007,0,0x0,8
tick,0x7ffa19ab1d94,132915635,0,0x0,8
tick,0x7ffa19ab1d94,132931685,0,0x0,8
tick,0x7ffa19ab1d94,132947741,0,0x0,8
tick,0x7ffa19ab1d94,132963364,0,0x0,8
tick,0x7ffa19ab1d94,132979074,0,0x0,8
tick,0x7ffa19ab1d94,133002381,0,0x0,8
tick,0x7ffa19ab1d94,133009381,0,0x0,8
tick,0x7ffa19ab1d94,133024419,0,0x0,8
tick,0x7ffa19ab1d94,133039768,0,0x0,8
tick,0x7ffa19ab1d94,133055301,0,0x0,8
tick,0x7ffa19ab1d94,133071737,0,0x0,8
tick,0x7ffa19ab1d94,133087309,0,0x0,8
tick,0x7ffa19ab1d94,133102971,0,0x0,8
tick,0x7ffa19ab1d94,133118460,0,0x0,8
tick,0x7ffa19ab1d94,133134344,0,0x0,8
tick,0x7ffa19ab1d94,133150947,0,0x0,8
tick,0x7ffa19ab1d94,133166288,0,0x0,8
tick,0x7ffa19ab1d94,133182056,0,0x0,8
tick,0x7ffa19ab1d94,133197407,0,0x0,8
tick,0x7ffa19ab1d94,133213078,0,0x0,8
tick,0x7ffa19ab1d94,133228376,0,0x0,8
tick,0x7ffa19ab1d94,133244058,0,0x0,8
tick,0x7ffa19ab1d94,133259725,0,0x0,8
tick,0x7ffa19ab1d94,133274971,0,0x0,8
tick,0x7ffa19ab1d94,133291601,0,0x0,8
tick,0x7ffa19ab1d94,133307544,0,0x0,8
tick,0x7ffa19ab1d94,133323747,0,0x0,8
tick,0x7ffa19ab1d94,133339634,0,0x0,8
tick,0x7ffa19ab1d94,133354647,0,0x0,8
tick,0x7ffa19ab1d94,133369892,0,0x0,8
tick,0x7ffa19ab1d94,133385995,0,0x0,8
tick,0x7ffa19ab1d94,133401584,0,0x0,8
tick,0x7ffa19ab1d94,133417075,0,0x0,8
tick,0x7ffa19ab1d94,133432362,0,0x0,8
tick,0x7ffa19ab1d94,133448751,0,0x0,8
tick,0x7ffa19ab1d94,133463865,0,0x0,8
tick,0x7ffa19ab1d94,133479649,0,0x0,8
tick,0x7ffa19ab1d94,133495722,0,0x0,8
tick,0x7ffa19ab1d94,133511848,0,0x0,8
tick,0x7ffa19ab1d94,133528352,0,0x0,8
tick,0x7ffa19ab1d94,133545210,0,0x0,8
tick,0x7ffa19ab1d94,133558405,0,0x0,8
tick,0x7ffa19ab1d94,133574293,0,0x0,8
tick,0x7ffa19ab1d94,133590105,0,0x0,8
tick,0x7ffa19ab1d94,133605682,0,0x0,8
tick,0x7ffa19ab1d94,133620706,0,0x0,8
tick,0x7ffa19ab1d94,133636783,0,0x0,8
tick,0x7ffa19ab1d94,133651947,0,0x0,8
tick,0x7ffa19ab1d94,133668164,0,0x0,8
tick,0x7ffa19ab1d94,133682836,0,0x0,8
tick,0x7ffa19ab1d94,133698687,0,0x0,8
tick,0x7ffa19ab1d94,133713845,0,0x0,8
tick,0x7ffa19ab1d94,133729728,0,0x0,8
tick,0x7ffa19ab1d94,133745095,0,0x0,8
tick,0x7ffa19ab1d94,133760956,0,0x0,8
tick,0x7ffa19ab1d94,133776152,0,0x0,8
tick,0x7ffa19ab1d94,133791690,0,0x0,8
tick,0x7ffa19ab1d94,133807717,0,0x0,8
tick,0x7ffa19ab1d94,133823542,0,0x0,8
tick,0x7ffa19ab1d94,133839312,0,0x0,8
tick,0x7ffa19ab1d94,133855282,0,0x0,8
tick,0x7ffa19ab1d94,133870699,0,0x0,8
tick,0x7ffa19ab1d94,133886371,0,0x0,8
tick,0x7ffa19ab1d94,133901838,0,0x0,8
tick,0x7ffa19ab1d94,133917010,0,0x0,8
tick,0x7ffa19ab1d94,133932769,0,0x0,8
tick,0x7ffa19ab1d94,133948687,0,0x0,8
tick,0x7ffa19ab1d94,133964669,0,0x0,8
tick,0x7ffa19ab1d94,133979883,0,0x0,8
tick,0x7ffa19ab1d94,133995725,0,0x0,8
tick,0x7ffa19ab1d94,134012141,0,0x0,8
tick,0x7ffa19ab1d94,134028198,0,0x0,8
tick,0x7ffa19ab1d94,134043660,0,0x0,8
tick,0x7ffa19ab1d94,134059018,0,0x0,8
tick,0x7ffa19ab1d94,134074128,0,0x0,8
tick,0x7ffa19ab1d94,134089553,0,0x0,8
tick,0x7ffa19ab1d94,134105706,0,0x0,8
tick,0x7ffa19ab1d94,134121936,0,0x0,8
tick,0x7ffa19ab1d94,134137748,0,0x0,8
tick,0x7ffa19ab1d94,134154449,0,0x0,8
tick,0x7ffa19ab1d94,134168924,0,0x0,8
tick,0x7ffa19ab1d94,134185115,0,0x0,8
tick,0x7ffa19ab1d94,134200421,0,0x0,8
tick,0x7ffa19ab1d94,134215919,0,0x0,8
tick,0x7ffa19ab1d94,134231064,0,0x0,8
tick,0x7ffa19ab1d94,134246206,0,0x0,8
tick,0x7ffa19ab1d94,134261642,0,0x0,8
tick,0x7ffa19ab1d94,134276759,0,0x0,8
tick,0x7ffa19ab1d94,134292155,0,0x0,8
tick,0x7ffa19ab1d94,134308341,0,0x0,8
tick,0x7ffa19ab1d94,134324487,0,0x0,8
tick,0x7ffa19ab1d94,134340150,0,0x0,8
tick,0x7ffa19ab1d94,134355733,0,0x0,8
tick,0x7ffa19ab1d94,134371134,0,0x0,8
tick,0x7ffa19ab1d94,134385977,0,0x0,8
tick,0x7ffa19ab1d94,134401436,0,0x0,8
tick,0x7ffa19ab1d94,134416757,0,0x0,8
tick,0x7ffa19ab1d94,134432921,0,0x0,8
tick,0x7ffa19ab1d94,134448326,0,0x0,8
tick,0x7ffa19ab1d94,134463718,0,0x0,8
tick,0x7ffa19ab1d94,134479777,0,0x0,8
tick,0x7ffa19ab1d94,134494901,0,0x0,8
tick,0x7ffa19ab1d94,134511054,0,0x0,8
tick,0x7ffa19ab1d94,134526477,0,0x0,8
tick,0x7ffa19ab1d94,134544506,0,0x0,8
tick,0x7ffa19ab1d94,134557078,0,0x0,8
tick,0x7ffa19ab1d94,134572336,0,0x0,8
tick,0x7ffa19ab1d94,134587707,0,0x0,8
tick,0x7ffa19ab1d94,134602974,0,0x0,8
tick,0x7ffa19ab1d94,134619025,0,0x0,8
tick,0x7ffa19ab1d94,134633788,0,0x0,8
tick,0x7ffa19ab1d94,134650331,0,0x0,8
tick,0x7ffa19ab1d94,134665968,0,0x0,8
tick,0x7ffa19ab1d94,134681566,0,0x0,8
tick,0x7ffa19ab1d94,134696825,0,0x0,8
tick,0x7ffa19ab1d94,134712709,0,0x0,8
tick,0x7ffa19ab1d94,134728595,0,0x0,8
tick,0x7ffa19ab1d94,134743794,0,0x0,8
tick,0x7ffa19ab1d94,134762043,0,0x0,8
tick,0x7ffa19ab1d94,134775781,0,0x0,8
tick,0x7ffa19ab1d94,134789815,0,0x0,8
tick,0x7ffa19ab1d94,134805619,0,0x0,8
tick,0x7ffa19ab1d94,134821797,0,0x0,8
tick,0x7ffa19ab1d94,134836590,0,0x0,8
tick,0x7ffa19ab1d94,134852142,0,0x0,8
tick,0x7ffa19ab1d94,134867696,0,0x0,8
tick,0x7ffa19ab1d94,134883370,0,0x0,8
tick,0x7ffa19ab1d94,134898871,0,0x0,8
tick,0x7ffa19ab1d94,134913995,0,0x0,8
tick,0x7ffa19ab1d94,134929049,0,0x0,8
tick,0x7ffa19ab1d94,134944477,0,0x0,8
tick,0x7ffa19ab1d94,134960470,0,0x0,8
tick,0x7ffa19ab1d94,134975257,0,0x0,8
tick,0x7ffa19ab1d94,134990470,0,0x0,8
tick,0x7ffa19ab1d94,135006505,0,0x0,8
tick,0x7ffa19ab1d94,135021836,0,0x0,8
tick,0x7ffa19ab1d94,135036463,0,0x0,8
tick,0x7ffa19ab1d94,135052668,0,0x0,8
tick,0x7ffa19ab1d94,135068020,0,0x0,8
tick,0x7ffa19ab1d94,135083224,0,0x0,8
tick,0x7ffa19ab1d94,135098873,0,0x0,8
tick,0x7ffa19ab1d94,135115055,0,0x0,8
tick,0x7ffa19ab1d94,135130081,0,0x0,8
tick,0x7ffa19ab1d94,135145891,0,0x0,8
tick,0x7ffa19ab1d94,135165040,0,0x0,8
tick,0x7ffa19ab1d94,135175797,0,0x0,8
tick,0x7ffa19ab1d94,135192032,0,0x0,8
tick,0x7ffa19ab1d94,135206755,0,0x0,8
tick,0x7ffa19ab1d94,135221546,0,0x0,8
tick,0x7ffa19ab1d94,135237274,0,0x0,8
tick,0x7ffa19ab1d94,135252831,0,0x0,8
tick,0x7ffa19ab1d94,135268440,0,0x0,8
tick,0x7ffa19ab1d94,135283616,0,0x0,8
tick,0x7ffa19ab1d94,135299806,0,0x0,8
tick,0x7ffa19ab1d94,135315728,0,0x0,8
tick,0x7ffa19ab1d94,135332855,0,0x0,8
tick,0x7ffa19ab1d94,135347470,0,0x0,8
tick,0x7ffa19ab1d94,135362970,0,0x0,8
tick,0x7ffa19ab1d94,135377693,0,0x0,8
tick,0x7ffa19ab1d94,135393898,0,0x0,8
tick,0x7ffa19ab1d94,135409826,0,0x0,8
tick,0x7ffa19ab1d94,135425624,0,0x0,8
tick,0x7ffa19ab1d94,135443149,0,0x0,8
tick,0x7ffa19ab1d94,135457227,0,0x0,8
tick,0x7ffa19ab1d94,135473056,0,0x0,8
tick,0x7ffa19ab1d94,135487965,0,0x0,8
tick,0x7ffa19ab1d94,135503985,0,0x0,8
tick,0x7ffa19ab1d94,135519637,0,0x0,8
tick,0x7ffa19ab1d94,135536582,0,0x0,8
tick,0x7ffa19ab1d94,135550641,0,0x0,8
tick,0x7ffa19ab1d94,135565760,0,0x0,8
tick,0x7ffa19ab1d94,135581371,0,0x0,8
tick,0x7ffa19ab1d94,135597519,0,0x0,8
tick,0x7ffa19ab1d94,135613483,0,0x0,8
tick,0x7ffa19ab1d94,135629236,0,0x0,8
tick,0x7ffa19ab1d94,135644729,0,0x0,8
tick,0x7ffa19ab1d94,135660274,0,0x0,8
tick,0x7ffa19ab1d94,135675811,0,0x0,8
tick,0x7ffa19ab1d94,135691598,0,0x0,8
tick,0x7ffa19ab1d94,135706868,0,0x0,8
tick,0x7ffa19ab1d94,135722802,0,0x0,8
tick,0x7ffa19ab1d94,135738125,0,0x0,8
tick,0x7ffa19ab1d94,135752970,0,0x0,8
tick,0x7ffa19ab1d94,135769029,0,0x0,8
tick,0x7ffa19ab1d94,135784861,0,0x0,8
tick,0x7ffa19ab1d94,135800270,0,0x0,8
tick,0x7ffa19ab1d94,135815748,0,0x0,8
tick,0x7ffa19ab1d94,135832009,0,0x0,8
tick,0x7ffa19ab1d94,135847246,0,0x0,8
tick,0x7ffa19ab1d94,135862761,0,0x0,8
tick,0x7ffa19ab1d94,135878297,0,0x0,8
tick,0x7ffa19ab1d94,135894140,0,0x0,8
tick,0x7ffa19ab1d94,135910048,0,0x0,8
tick,0x7ffa19ab1d94,135925207,0,0x0,8
tick,0x7ffa19ab1d94,135940389,0,0x0,8
tick,0x7ffa19ab1d94,135955891,0,0x0,8
tick,0x7ffa19ab1d94,135971493,0,0x0,8
tick,0x7ffa19ab1d94,135986993,0,0x0,8
tick,0x7ffa19ab1d94,136002316,0,0x0,8
tick,0x7ffa19ab1d94,136018107,0,0x0,8
tick,0x7ffa19ab1d94,136034064,0,0x0,8
tick,0x7ffa19ab1d94,136049618,0,0x0,8
tick,0x7ffa19ab1d94,136065031,0,0x0,8
tick,0x7ffa19ab1d94,136080567,0,0x0,8
tick,0x7ffa19ab1d94,136096874,0,0x0,8
tick,0x7ffa19ab1d94,136112986,0,0x0,8
tick,0x7ffa19ab1d94,136127913,0,0x0,8
tick,0x7ffa19ab1d94,136143376,0,0x0,8
tick,0x7ffa19ab1d94,136160169,0,0x0,8
tick,0x7ffa19ab1d94,136176839,0,0x0,8
tick,0x7ffa19ab1d94,136190408,0,0x0,8
tick,0x7ffa19ab1d94,136205737,0,0x0,8
tick,0x7ffa19ab1d94,136220881,0,0x0,8
tick,0x7ffa19ab1d94,136236505,0,0x0,8
tick,0x7ffa19ab1d94,136251885,0,0x0,8
tick,0x7ffa19ab1d94,136267032,0,0x0,8
tick,0x7ffa19ab1d94,136282476,0,0x0,8
tick,0x7ffa19ab1d94,136298196,0,0x0,8
tick,0x7ffa19ab1d94,136313694,0,0x0,8
tick,0x7ffa19ab1d94,136329630,0,0x0,8
tick,0x7ffa19ab1d94,136344824,0,0x0,8
tick,0x7ffa19ab1d94,136359795,0,0x0,8
tick,0x7ffa19ab1d94,136375834,0,0x0,8
tick,0x7ffa19ab1d94,136391163,0,0x0,8
tick,0x7ffa19ab1d94,136406648,0,0x0,8
tick,0x7ffa19ab1d94,136422429,0,0x0,8
tick,0x7ffa19ab1d94,136441082,0,0x0,8
tick,0x7ffa19ab1d94,136454514,0,0x0,8
tick,0x7ffa19ab1d94,136469112,0,0x0,8
tick,0x7ffa19ab1d94,136484654,0,0x0,8
tick,0x7ffa19ab1d94,136500519,0,0x0,8
tick,0x7ffa19ab1d94,136515659,0,0x0,8
tick,0x7ffa19ab1d94,136531796,0,0x0,8
tick,0x7ffa19ab1d94,136547668,0,0x0,8
tick,0x7ffa19ab1d94,136564248,0,0x0,8
tick,0x7ffa19ab1d94,136579263,0,0x0,8
tick,0x7ffa19ab1d94,136594856,0,0x0,8
tick,0x7ffa19ab1d94,136610816,0,0x0,8
tick,0x7ffa19ab1d94,136627276,0,0x0,8
tick,0x7ffa19ab1d94,136643406,0,0x0,8
tick,0x7ffa19ab1d94,136659234,0,0x0,8
tick,0x7ffa19ab1d94,136675392,0,0x0,8
tick,0x7ffa19ab1d94,136692106,0,0x0,8
tick,0x7ffa19ab1d94,136706033,0,0x0,8
tick,0x7ffa19ab1d94,136721964,0,0x0,8
tick,0x7ffa19ab1d94,136737085,0,0x0,8
tick,0x7ffa19ab1d94,136752165,0,0x0,8
tick,0x7ffa19ab1d94,136768282,0,0x0,8
tick,0x7ffa19ab1d94,136783511,0,0x0,8
tick,0x7ffa19ab1d94,136799441,0,0x0,8
tick,0x7ffa19ab1d94,136814677,0,0x0,8
tick,0x7ffa19ab1d94,136830274,0,0x0,8
tick,0x7ffa19ab1d94,136846357,0,0x0,8
tick,0x7ffa19ab1d94,136862017,0,0x0,8
tick,0x7ffa19ab1d94,136876899,0,0x0,8
tick,0x7ffa19ab1d94,136892975,0,0x0,8
tick,0x7ffa19ab1d94,136908872,0,0x0,8
tick,0x7ffa19ab1d94,136924510,0,0x0,8
tick,0x7ffa19ab1d94,136940141,0,0x0,8
tick,0x7ffa19ab1d94,136956152,0,0x0,8
tick,0x7ffa19ab1d94,136971815,0,0x0,8
tick,0x7ffa19ab1d94,136987909,0,0x0,8
tick,0x7ffa19ab1d94,137004195,0,0x0,8
tick,0x7ffa19ab1d94,137020000,0,0x0,8
tick,0x7ffa19ab1d94,137035480,0,0x0,8
tick,0x7ffa19ab1d94,137050930,0,0x0,8
tick,0x7ffa19ab1d94,137066894,0,0x0,8
tick,0x7ffa19ab1d94,137083194,0,0x0,8
tick,0x7ffa19ab1d94,137097891,0,0x0,8
tick,0x7ffa19ab1d94,137113060,0,0x0,8
tick,0x7ffa19ab1d94,137128316,0,0x0,8
tick,0x7ffa19ab1d94,137144089,0,0x0,8
tick,0x7ffa19ab1d94,137159273,0,0x0,8
tick,0x7ffa19ab1d94,137175063,0,0x0,8
tick,0x7ffa19ab1d94,137190603,0,0x0,8
tick,0x7ffa19ab1d94,137206002,0,0x0,8
tick,0x7ffa19ab1d94,137221657,0,0x0,8
tick,0x7ffa19ab1d94,137237610,0,0x0,8
tick,0x7ffa19ab1d94,137253037,0,0x0,8
tick,0x7ffa19ab1d94,137268416,0,0x0,8
tick,0x7ffa19ab1d94,137283817,0,0x0,8
tick,0x7ffa19ab1d94,137299658,0,0x0,8
tick,0x7ffa19ab1d94,137314799,0,0x0,8
tick,0x7ffa19ab1d94,137330909,0,0x0,8
tick,0x7ffa19ab1d94,137347278,0,0x0,8
tick,0x7ffa19ab1d94,137363333,0,0x0,8
tick,0x7ffa19ab1d94,137378353,0,0x0,8
tick,0x7ffa19ab1d94,137393751,0,0x0,8
tick,0x7ffa19ab1d94,137408995,0,0x0,8
tick,0x7ffa19ab1d94,137424225,0,0x0,8
tick,0x7ffa19ab1d94,137439329,0,0x0,8
tick,0x7ffa19ab1d94,137455139,0,0x0,8
tick,0x7ffa19ab1d94,137470794,0,0x0,8
tick,0x7ffa19ab1d94,137486445,0,0x0,8
tick,0x7ffa19ab1d94,137501646,0,0x0,8
tick,0x7ffa19ab1d94,137517251,0,0x0,8
tick,0x7ffa19ab1d94,137532648,0,0x0,8
tick,0x7ffa19ab1d94,137548741,0,0x0,8
tick,0x7ffa19ab1d94,137563795,0,0x0,8
tick,0x7ffa19ab1d94,137579604,0,0x0,8
tick,0x7ffa19ab1d94,137596404,0,0x0,8
tick,0x7ffa19ab1d94,137611446,0,0x0,8
tick,0x7ffa19ab1d94,137627889,0,0x0,8
tick,0x7ffa19ab1d94,137642893,0,0x0,8
tick,0x7ffa19ab1d94,137658064,0,0x0,8
tick,0x7ffa19ab1d94,137675225,0,0x0,8
tick,0x7ffa19ab1d94,137690160,0,0x0,8
tick,0x7ffa19ab1d94,137707720,0,0x0,8
tick,0x7ffa19ab1d94,137724452,0,0x0,8
tick,0x7ffa19ab1d94,137737978,0,0x0,8
tick,0x7ffa19ab1d94,137753043,0,0x0,8
tick,0x7ffa19ab1d94,137768848,0,0x0,8
tick,0x7ffa19ab1d94,137784759,0,0x0,8
tick,0x7ffa19ab1d94,137800771,0,0x0,8
tick,0x7ffa19ab1d94,137816485,0,0x0,8
tick,0x7ffa19ab1d94,137831827,0,0x0,8
tick,0x7ffa19ab1d94,137847076,0,0x0,8
tick,0x7ffa19ab1d94,137862941,0,0x0,8
tick,0x7ffa19ab1d94,137878883,0,0x0,8
tick,0x7ffa19ab1d94,137894832,0,0x0,8
tick,0x7ffa19ab1d94,137910453,0,0x0,8
tick,0x7ffa19ab1d94,137926110,0,0x0,8
tick,0x7ffa19ab1d94,137941982,0,0x0,8
tick,0x7ffa19ab1d94,137957599,0,0x0,8
tick,0x7ffa19ab1d94,137974086,0,0x0,8
tick,0x7ffa19ab1d94,137991889,0,0x0,8
tick,0x7ffa19ab1d94,138004481,0,0x0,8
tick,0x7ffa19ab1d94,138020421,0,0x0,8
tick,0x7ffa19ab1d94,138035730,0,0x0,8
tick,0x7ffa19ab1d94,138051703,0,0x0,8
tick,0x7ffa19ab1d94,138067764,0,0x0,8
tick,0x7ffa19ab1d94,138083320,0,0x0,8
tick,0x7ffa19ab1d94,138099007,0,0x0,8
tick,0x7ffa19ab1d94,138114763,0,0x0,8
tick,0x7ffa19ab1d94,138130138,0,0x0,8
tick,0x7ffa19ab1d94,138146024,0,0x0,8
tick,0x7ffa19ab1d94,138161503,0,0x0,8
tick,0x7ffa19ab1d94,138176841,0,0x0,8
tick,0x7ffa19ab1d94,138192068,0,0x0,8
tick,0x7ffa19ab1d94,138207692,0,0x0,8
tick,0x7ffa19ab1d94,138223253,0,0x0,8
tick,0x7ffa19ab1d94,138239500,0,0x0,8
tick,0x7ffa19ab1d94,138255116,0,0x0,8
tick,0x7ffa19ab1d94,138270150,0,0x0,8
tick,0x7ffa19ab1d94,138285525,0,0x0,8
tick,0x7ffa19ab1d94,138301815,0,0x0,8
tick,0x7ffa19ab1d94,138317801,0,0x0,8
tick,0x7ffa19ab1d94,138333053,0,0x0,8
tick,0x7ffa19ab1d94,138349142,0,0x0,8
tick,0x7ffa19ab1d94,138364516,0,0x0,8
tick,0x7ffa19ab1d94,138380236,0,0x0,8
tick,0x7ffa19ab1d94,138395669,0,0x0,8
tick,0x7ffa19ab1d94,138411827,0,0x0,8
tick,0x7ffa19ab1d94,138427364,0,0x0,8
tick,0x7ffa19ab1d94,138443226,0,0x0,8
tick,0x7ffa19ab1d94,138458411,0,0x0,8
tick,0x7ffa19ab1d94,138474059,0,0x0,8
tick,0x7ffa19ab1d94,138489603,0,0x0,8
tick,0x7ffa19ab1d94,138504796,0,0x0,8
tick,0x7ffa19ab1d94,138520542,0,0x0,8
tick,0x7ffa19ab1d94,138536060,0,0x0,8
tick,0x7ffa19ab1d94,138551990,0,0x0,8
tick,0x7ffa19ab1d94,138567707,0,0x0,8
tick,0x7ffa19ab1d94,138583969,0,0x0,8
tick,0x7ffa19ab1d94,138599869,0,0x0,8
tick,0x7ffa19ab1d94,138615131,0,0x0,8
tick,0x7ffa19ab1d94,138631170,0,0x0,8
tick,0x7ffa19ab1d94,138646875,0,0x0,8
tick,0x7ffa19ab1d94,138662787,0,0x0,8
tick,0x7ffa19ab1d94,138678339,0,0x0,8
tick,0x7ffa19ab1d94,138693743,0,0x0,8
tick,0x7ffa19ab1d94,138709650,0,0x0,8
tick,0x7ffa19ab1d94,138724809,0,0x0,8
tick,0x7ffa19ab1d94,138740737,0,0x0,8
tick,0x7ffa19ab1d94,138756744,0,0x0,8
tick,0x7ffa19ab1d94,138771916,0,0x0,8
tick,0x7ffa19ab1d94,138787231,0,0x0,8
tick,0x7ffa19ab1d94,138802815,0,0x0,8
tick,0x7ffa19ab1d94,138818704,0,0x0,8
tick,0x7ffa19ab1d94,138833956,0,0x0,8
tick,0x7ffa19ab1d94,138850080,0,0x0,8
tick,0x7ffa19ab1d94,138865916,0,0x0,8
tick,0x7ffa19ab1d94,138881776,0,0x0,8
tick,0x7ffa19ab1d94,138897730,0,0x0,8
tick,0x7ffa19ab1d94,138913003,0,0x0,8
tick,0x7ffa19ab1d94,138928338,0,0x0,8
tick,0x7ffa19ab1d94,138943946,0,0x0,8
tick,0x7ffa19ab1d94,138959500,0,0x0,8
tick,0x7ffa19ab1d94,138974745,0,0x0,8
tick,0x7ffa19ab1d94,138990865,0,0x0,8
tick,0x7ffa19ab1d94,139006919,0,0x0,8
tick,0x7ffa19ab1d94,139023288,0,0x0,8
tick,0x7ffa19ab1d94,139038305,0,0x0,8
tick,0x7ffa19ab1d94,139053528,0,0x0,8
tick,0x7ffa19ab1d94,139069202,0,0x0,8
tick,0x7ffa19ab1d94,139085629,0,0x0,8
tick,0x7ffa19ab1d94,139102216,0,0x0,8
tick,0x7ffa19ab1d94,139117658,0,0x0,8
tick,0x7ffa19ab1d94,139132321,0,0x0,8
tick,0x7ffa19ab1d94,139147669,0,0x0,8
tick,0x7ffa19ab1d94,139163173,0,0x0,8
tick,0x7ffa19ab1d94,139178169,0,0x0,8
tick,0x7ffa19ab1d94,139193889,0,0x0,8
tick,0x7ffa19ab1d94,139209700,0,0x0,8
tick,0x7ffa19ab1d94,139224982,0,0x0,8
tick,0x7ffa19ab1d94,139240715,0,0x0,8
tick,0x7ffa19ab1d94,139256584,0,0x0,8
tick,0x7ffa19ab1d94,139271868,0,0x0,8
tick,0x7ffa19ab1d94,139287441,0,0x0,8
tick,0x7ffa19ab1d94,139302654,0,0x0,8
tick,0x7ffa19ab1d94,139318532,0,0x0,8
tick,0x7ffa19ab1d94,139333543,0,0x0,8
tick,0x7ffa19ab1d94,139348627,0,0x0,8
tick,0x7ffa19ab1d94,139364412,0,0x0,8
tick,0x7ffa19ab1d94,139379935,0,0x0,8
tick,0x7ffa19ab1d94,139395565,0,0x0,8
tick,0x7ffa19ab1d94,139410873,0,0x0,8
tick,0x7ffa19ab1d94,139426893,0,0x0,8
tick,0x7ffa19ab1d94,139442338,0,0x0,8
tick,0x7ffa19ab1d94,139457849,0,0x0,8
tick,0x7ffa19ab1d94,139473294,0,0x0,8
tick,0x7ffa19ab1d94,139489330,0,0x0,8
tick,0x7ffa19ab1d94,139504626,0,0x0,8
tick,0x7ffa19ab1d94,139520579,0,0x0,8
tick,0x7ffa19ab1d94,139535642,0,0x0,8
tick,0x7ffa19ab1d94,139551394,0,0x0,8
tick,0x7ffa19ab1d94,139567361,0,0x0,8
tick,0x7ffa19ab1d94,139582831,0,0x0,8
tick,0x7ffa19ab1d94,139598568,0,0x0,8
tick,0x7ffa19ab1d94,139613830,0,0x0,8
tick,0x7ffa19ab1d94,139629255,0,0x0,8
tick,0x7ffa19ab1d94,139645135,0,0x0,8
tick,0x7ffa19ab1d94,139661653,0,0x0,8
tick,0x7ffa19ab1d94,139677120,0,0x0,8
tick,0x7ffa19ab1d94,139692761,0,0x0,8
tick,0x7ffa19ab1d94,139708633,0,0x0,8
tick,0x7ffa19ab1d94,139724146,0,0x0,8
tick,0x7ffa19ab1d94,139739416,0,0x0,8
tick,0x7ffa19ab1d94,139755007,0,0x0,8
tick,0x7ffa19ab1d94,139771035,0,0x0,8
tick,0x7ffa19ab1d94,139785857,0,0x0,8
tick,0x7ffa19ab1d94,139801570,0,0x0,8
tick,0x7ffa19ab1d94,139816863,0,0x0,8
tick,0x7ffa19ab1d94,139831963,0,0x0,8
tick,0x7ffa19ab1d94,139846878,0,0x0,8
tick,0x7ffa19ab1d94,139862188,0,0x0,8
tick,0x7ffa19ab1d94,139877492,0,0x0,8
tick,0x7ffa19ab1d94,139893494,0,0x0,8
tick,0x7ffa19ab1d94,139909170,0,0x0,8
tick,0x7ffa19ab1d94,139925227,0,0x0,8
tick,0x7ffa19ab1d94,139941578,0,0x0,8
tick,0x7ffa19ab1d94,139957207,0,0x0,8
tick,0x7ffa19ab1d94,139973018,0,0x0,8
tick,0x7ffa19ab1d94,139988632,0,0x0,8
tick,0x7ffa19ab1d94,140004237,0,0x0,8
tick,0x7ffa19ab1d94,140019283,0,0x0,8
tick,0x7ffa19ab1d94,140035404,0,0x0,8
tick,0x7ffa19ab1d94,140050891,0,0x0,8
tick,0x7ffa19ab1d94,140066883,0,0x0,8
tick,0x7ffa19ab1d94,140082572,0,0x0,8
tick,0x7ffa19ab1d94,140097628,0,0x0,8
tick,0x7ffa19ab1d94,140113524,0,0x0,8
tick,0x7ffa19ab1d94,140129053,0,0x0,8
tick,0x7ffa19ab1d94,140144323,0,0x0,8
tick,0x7ffa19ab1d94,140159983,0,0x0,8
tick,0x7ffa19ab1d94,140175677,0,0x0,8
tick,0x7ffa19ab1d94,140191887,0,0x0,8
tick,0x7ffa19ab1d94,140207870,0,0x0,8
tick,0x7ffa19ab1d94,140223973,0,0x0,8
tick,0x7ffa19ab1d94,140239100,0,0x0,8
tick,0x7ffa19ab1d94,140255158,0,0x0,8
tick,0x7ffa19ab1d94,140272858,0,0x0,8
tick,0x7ffa19ab1d94,140286766,0,0x0,8
tick,0x7ffa19ab1d94,140302336,0,0x0,8
tick,0x7ffa19ab1d94,140318031,0,0x0,8
tick,0x7ffa19ab1d94,140334498,0,0x0,8
tick,0x7ffa19ab1d94,140349894,0,0x0,8
tick,0x7ffa19ab1d94,140365179,0,0x0,8
tick,0x7ffa19ab1d94,140380661,0,0x0,8
tick,0x7ffa19ab1d94,140396000,0,0x0,8
tick,0x7ffa19ab1d94,140410820,0,0x0,8
tick,0x7ffa19ab1d94,140425891,0,0x0,8
tick,0x7ffa19ab1d94,140441847,0,0x0,8
tick,0x7ffa19ab1d94,140457172,0,0x0,8
tick,0x7ffa19ab1d94,140472845,0,0x0,8
tick,0x7ffa19ab1d94,140488378,0,0x0,8
tick,0x7ffa19ab1d94,140503992,0,0x0,8
tick,0x7ffa19ab1d94,140519735,0,0x0,8
tick,0x7ffa19ab1d94,140535626,0,0x0,8
tick,0x7ffa19ab1d94,140551802,0,0x0,8
tick,0x7ffa19ab1d94,140567814,0,0x0,8
tick,0x7ffa19ab1d94,140583350,0,0x0,8
tick,0x7ffa19ab1d94,140599160,0,0x0,8
tick,0x7ffa19ab1d94,140614504,0,0x0,8
tick,0x7ffa19ab1d94,140629965,0,0x0,8
tick,0x7ffa19ab1d94,140645504,0,0x0,8
tick,0x7ffa19ab1d94,140660714,0,0x0,8
tick,0x7ffa19ab1d94,140676035,0,0x0,8
tick,0x7ffa19ab1d94,140691424,0,0x0,8
tick,0x7ffa19ab1d94,140706754,0,0x0,8
tick,0x7ffa19ab1d94,140723083,0,0x0,8
tick,0x7ffa19ab1d94,140738394,0,0x0,8
tick,0x7ffa19ab1d94,140754762,0,0x0,8
tick,0x7ffa19ab1d94,140770254,0,0x0,8
tick,0x7ffa19ab1d94,140786843,0,0x0,8
tick,0x7ffa19ab1d94,140802206,0,0x0,8
tick,0x7ffa19ab1d94,140818050,0,0x0,8
tick,0x7ffa19ab1d94,140833730,0,0x0,8
tick,0x7ffa19ab1d94,140848980,0,0x0,8
tick,0x7ffa19ab1d94,140864762,0,0x0,8
tick,0x7ffa19ab1d94,140880245,0,0x0,8
tick,0x7ffa19ab1d94,140895315,0,0x0,8
tick,0x7ffa19ab1d94,140910857,0,0x0,8
tick,0x7ffa19ab1d94,140926673,0,0x0,8
tick,0x7ffa19ab1d94,140941967,0,0x0,8
tick,0x7ffa19ab1d94,140957612,0,0x0,8
tick,0x7ffa19ab1d94,140973242,0,0x0,8
tick,0x7ffa19ab1d94,140988992,0,0x0,8
tick,0x7ffa19ab1d94,141004880,0,0x0,8
tick,0x7ffa19ab1d94,141019944,0,0x0,8
tick,0x7ffa19ab1d94,141035009,0,0x0,8
tick,0x7ffa19ab1d94,141050212,0,0x0,8
tick,0x7ffa19ab1d94,141066341,0,0x0,8
tick,0x7ffa19ab1d94,141081650,0,0x0,8
tick,0x7ffa19ab1d94,141097346,0,0x0,8
tick,0x7ffa19ab1d94,141112899,0,0x0,8
tick,0x7ffa19ab1d94,141128157,0,0x0,8
tick,0x7ffa19ab1d94,141143549,0,0x0,8
tick,0x7ffa19ab1d94,141159554,0,0x0,8
tick,0x7ffa19ab1d94,141175326,0,0x0,8
tick,0x7ffa19ab1d94,141191798,0,0x0,8
tick,0x7ffa19ab1d94,141207542,0,0x0,8
tick,0x7ffa19ab1d94,141223141,0,0x0,8
tick,0x7ffa19ab1d94,141238729,0,0x0,8
tick,0x7ffa19ab1d94,141254187,0,0x0,8
tick,0x7ffa19ab1d94,141270048,0,0x0,8
tick,0x7ffa19ab1d94,141285772,0,0x0,8
tick,0x7ffa19ab1d94,141301713,0,0x0,8
tick,0x7ffa19ab1d94,141317129,0,0x0,8
tick,0x7ffa19ab1d94,141332837,0,0x0,8
tick,0x7ffa19ab1d94,141347848,0,0x0,8
tick,0x7ffa19ab1d94,141363161,0,0x0,8
tick,0x7ffa19ab1d94,141378930,0,0x0,8
tick,0x7ffa19ab1d94,141394143,0,0x0,8
tick,0x7ffa19ab1d94,141410283,0,0x0,8
tick,0x7ffa19ab1d94,141425471,0,0x0,8
tick,0x7ffa19ab1d94,141442098,0,0x0,8
tick,0x7ffa19ab1d94,141457372,0,0x0,8
tick,0x7ffa19ab1d94,141472937,0,0x0,8
tick,0x7ffa19ab1d94,141488608,0,0x0,8
tick,0x7ffa19ab1d94,141504792,0,0x0,8
tick,0x7ffa19ab1d94,141520312,0,0x0,8
tick,0x7ffa19ab1d94,141535566,0,0x0,8
tick,0x7ffa19ab1d94,141551531,0,0x0,8
tick,0x7ffa19ab1d94,141567120,0,0x0,8
tick,0x7ffa19ab1d94,141583021,0,0x0,8
tick,0x7ffa19ab1d94,141598569,0,0x0,8
tick,0x7ffa19ab1d94,141613959,0,0x0,8
tick,0x7ffa19ab1d94,141630600,0,0x0,8
tick,0x7ffa19ab1d94,141646098,0,0x0,8
tick,0x7ffa19ab1d94,141661684,0,0x0,8
tick,0x7ffa19ab1d94,141677653,0,0x0,8
tick,0x7ffa19ab1d94,141692914,0,0x0,8
tick,0x7ffa19ab1d94,141707998,0,0x0,8
tick,0x7ffa19ab1d94,141723182,0,0x0,8
tick,0x7ffa19ab1d94,141739299,0,0x0,8
tick,0x7ffa19ab1d94,141755331,0,0x0,8
tick,0x7ffa19ab1d94,141770607,0,0x0,8
tick,0x7ffa19ab1d94,141786275,0,0x0,8
tick,0x7ffa19ab1d94,141803389,0,0x0,8
tick,0x7ffa19ab1d94,141817420,0,0x0,8
tick,0x7ffa19ab1d94,141833098,0,0x0,8
tick,0x7ffa19ab1d94,141848465,0,0x0,8
tick,0x7ffa19ab1d94,141863508,0,0x0,8
tick,0x7ffa19ab1d94,141878707,0,0x0,8
tick,0x7ffa19ab1d94,141894977,0,0x0,8
tick,0x7ffa19ab1d94,141909730,0,0x0,8
tick,0x7ffa19ab1d94,141925774,0,0x0,8
tick,0x7ffa19ab1d94,141940924,0,0x0,8
tick,0x7ffa19ab1d94,141956040,0,0x0,8
tick,0x7ffa19ab1d94,141972047,0,0x0,8
tick,0x7ffa19ab1d94,141986724,0,0x0,8
tick,0x7ffa19ab1d94,142002070,0,0x0,8
tick,0x7ffa19ab1d94,142017362,0,0x0,8
tick,0x7ffa19ab1d94,142032971,0,0x0,8
tick,0x7ffa19ab1d94,142048060,0,0x0,8
tick,0x7ffa19ab1d94,142065204,0,0x0,8
tick,0x7ffa19ab1d94,142079438,0,0x0,8
tick,0x7ffa19ab1d94,142094700,0,0x0,8
tick,0x7ffa19ab1d94,142109951,0,0x0,8
tick,0x7ffa19ab1d94,142125393,0,0x0,8
tick,0x7ffa19ab1d94,142140731,0,0x0,8
tick,0x7ffa19ab1d94,142156406,0,0x0,8
tick,0x7ffa19ab1d94,142171715,0,0x0,8
tick,0x7ffa19ab1d94,142188135,0,0x0,8
tick,0x7ffa19ab1d94,142204060,0,0x0,8
tick,0x7ffa19ab1d94,142219111,0,0x0,8
tick,0x7ffa19ab1d94,142233976,0,0x0,8
tick,0x7ffa19ab1d94,142249406,0,0x0,8
tick,0x7ffa19ab1d94,142264641,0,0x0,8
tick,0x7ffa19ab1d94,142281150,0,0x0,8
tick,0x7ffa19ab1d94,142296427,0,0x0,8
tick,0x7ffa19ab1d94,142311518,0,0x0,8
tick,0x7ffa19ab1d94,142327192,0,0x0,8
tick,0x7ffa19ab1d94,142342209,0,0x0,8
tick,0x7ffa19ab1d94,142357790,0,0x0,8
tick,0x7ffa19ab1d94,142372979,0,0x0,8
tick,0x7ffa19ab1d94,142388927,0,0x0,8
tick,0x7ffa19ab1d94,142403743,0,0x0,8
tick,0x7ffa19ab1d94,142419248,0,0x0,8
tick,0x7ffa19ab1d94,142435709,0,0x0,8
tick,0x7ffa19ab1d94,142450024,0,0x0,8
tick,0x7ffa19ab1d94,142465789,0,0x0,8
tick,0x7ffa19ab1d94,142481678,0,0x0,8
tick,0x7ffa19ab1d94,142496853,0,0x0,8
tick,0x7ffa19ab1d94,142512371,0,0x0,8
tick,0x7ffa19ab1d94,142528371,0,0x0,8
tick,0x7ffa19ab1d94,142543882,0,0x0,8
tick,0x7ffa19ab1d94,142559730,0,0x0,8
tick,0x7ffa19ab1d94,142575937,0,0x0,8
tick,0x7ffa19ab1d94,142591805,0,0x0,8
tick,0x7ffa19ab1d94,142607462,0,0x0,8
tick,0x7ffa19ab1d94,142622904,0,0x0,8
tick,0x7ffa19ab1d94,142638478,0,0x0,8
tick,0x7ffa19ab1d94,142654057,0,0x0,8
tick,0x7ffa19ab1d94,142669869,0,0x0,8
tick,0x7ffa19ab1d94,142685646,0,0x0,8
tick,0x7ffa19ab1d94,142700746,0,0x0,8
tick,0x7ffa19ab1d94,142716300,0,0x0,8
tick,0x7ffa19ab1d94,142731152,0,0x0,8
tick,0x7ffa19ab1d94,142746236,0,0x0,8
tick,0x7ffa19ab1d94,142761698,0,0x0,8
tick,0x7ffa19ab1d94,142777395,0,0x0,8
tick,0x7ffa19ab1d94,142793538,0,0x0,8
tick,0x7ffa19ab1d94,142809529,0,0x0,8
tick,0x7ffa19ab1d94,142825128,0,0x0,8
tick,0x7ffa19ab1d94,142840395,0,0x0,8
tick,0x7ffa19ab1d94,142855393,0,0x0,8
tick,0x7ffa19ab1d94,142871570,0,0x0,8
tick,0x7ffa19ab1d94,142887556,0,0x0,8
tick,0x7ffa19ab1d94,142902817,0,0x0,8
tick,0x7ffa19ab1d94,142919130,0,0x0,8
tick,0x7ffa19ab1d94,142934487,0,0x0,8
tick,0x7ffa19ab1d94,142949430,0,0x0,8
tick,0x7ffa19ab1d94,142965112,0,0x0,8
tick,0x7ffa19ab1d94,142980384,0,0x0,8
tick,0x7ffa19ab1d94,142997195,0,0x0,8
tick,0x7ffa19ab1d94,143011929,0,0x0,8
tick,0x7ffa19ab1d94,143028015,0,0x0,8
tick,0x7ffa19ab1d94,143043931,0,0x0,8
tick,0x7ffa19ab1d94,143059291,0,0x0,8
tick,0x7ffa19ab1d94,143075281,0,0x0,8
tick,0x7ffa19ab1d94,143090704,0,0x0,8
tick,0x7ffa19ab1d94,143106928,0,0x0,8
tick,0x7ffa19ab1d94,143123305,0,0x0,8
tick,0x7ffa19ab1d94,143138143,0,0x0,8
tick,0x7ffa19ab1d94,143154065,0,0x0,8
tick,0x7ffa19ab1d94,143170083,0,0x0,8
tick,0x7ffa19ab1d94,143186367,0,0x0,8
tick,0x7ffa19ab1d94,143201738,0,0x0,8
tick,0x7ffa19ab1d94,143217042,0,0x0,8
tick,0x7ffa19ab1d94,143232429,0,0x0,8
tick,0x7ffa19ab1d94,143247657,0,0x0,8
tick,0x7ffa19ab1d94,143263390,0,0x0,8
tick,0x7ffa19ab1d94,143278885,0,0x0,8
tick,0x7ffa19ab1d94,143294262,0,0x0,8
tick,0x7ffa19ab1d94,143309678,0,0x0,8
tick,0x7ffa19ab1d94,143325275,0,0x0,8
tick,0x7ffa19ab1d94,143340913,0,0x0,8
tick,0x7ffa19ab1d94,143356968,0,0x0,8
tick,0x7ffa19ab1d94,143372985,0,0x0,8
tick,0x7ffa19ab1d94,143389158,0,0x0,8
tick,0x7ffa19ab1d94,143404042,0,0x0,8
tick,0x7ffa19ab1d94,143419642,0,0x0,8
tick,0x7ffa19ab1d94,143435757,0,0x0,8
tick,0x7ffa19ab1d94,143451103,0,0x0,8
tick,0x7ffa19ab1d94,143466788,0,0x0,8
tick,0x7ffa19ab1d94,143482329,0,0x0,8
tick,0x7ffa19ab1d94,143498087,0,0x0,8
tick,0x7ffa19ab1d94,143513685,0,0x0,8
tick,0x7ffa19ab1d94,143529134,0,0x0,8
tick,0x7ffa19ab1d94,143544589,0,0x0,8
tick,0x7ffa19ab1d94,143560494,0,0x0,8
tick,0x7ffa19ab1d94,143575902,0,0x0,8
tick,0x7ffa19ab1d94,143591761,0,0x0,8
tick,0x7ffa19ab1d94,143607190,0,0x0,8
tick,0x7ffa19ab1d94,143622235,0,0x0,8
tick,0x7ffa19ab1d94,143637587,0,0x0,8
tick,0x7ffa19ab1d94,143652655,0,0x0,8
tick,0x7ffa19ab1d94,143668144,0,0x0,8
tick,0x7ffa19ab1d94,143683531,0,0x0,8
tick,0x7ffa19ab1d94,143699427,0,0x0,8
tick,0x7ffa19ab1d94,143714582,0,0x0,8
tick,0x7ffa19ab1d94,143730717,0,0x0,8
tick,0x7ffa19ab1d94,143745732,0,0x0,8
tick,0x7ffa19ab1d94,143761023,0,0x0,8
tick,0x7ffa19ab1d94,143776627,0,0x0,8
tick,0x7ffa19ab1d94,143791691,0,0x0,8
tick,0x7ffa19ab1d94,143807622,0,0x0,8
tick,0x7ffa19ab1d94,143822958,0,0x0,8
tick,0x7ffa19ab1d94,143838533,0,0x0,8
tick,0x7ffa19ab1d94,143854192,0,0x0,8
tick,0x7ffa19ab1d94,143870258,0,0x0,8
tick,0x7ffa19ab1d94,143886000,0,0x0,8
tick,0x7ffa19ab1d94,143903870,0,0x0,8
tick,0x7ffa19ab1d94,143917926,0,0x0,8
tick,0x7ffa19ab1d94,143933991,0,0x0,8
tick,0x7ffa19ab1d94,143948940,0,0x0,8
tick,0x7ffa19ab1d94,143964095,0,0x0,8
tick,0x7ffa19ab1d94,143979554,0,0x0,8
tick,0x7ffa19ab1d94,143994652,0,0x0,8
tick,0x7ffa19ab1d94,144010536,0,0x0,8
tick,0x7ffa19ab1d94,144026105,0,0x0,8
tick,0x7ffa19ab1d94,144043309,0,0x0,8
tick,0x7ffa19ab1d94,144057745,0,0x0,8
tick,0x7ffa19ab1d94,144073706,0,0x0,8
tick,0x7ffa19ab1d94,144088983,0,0x0,8
tick,0x7ffa19ab1d94,144108253,0,0x0,8
tick,0x7ffa19ab1d94,144119874,0,0x0,8
tick,0x7ffa19ab1d94,144135465,0,0x0,8
tick,0x7ffa19ab1d94,144151990,0,0x0,8
tick,0x7ffa19ab1d94,144166946,0,0x0,8
tick,0x7ffa19ab1d94,144184015,0,0x0,8
tick,0x7ffa19ab1d94,144198663,0,0x0,8
tick,0x7ffa19ab1d94,144214790,0,0x0,8
tick,0x7ffa19ab1d94,144230878,0,0x0,8
tick,0x7ffa19ab1d94,144247024,0,0x0,8
tick,0x7ffa19ab1d94,144261117,0,0x0,8
tick,0x7ffa19ab1d94,144276513,0,0x0,8
tick,0x7ffa19ab1d94,144292806,0,0x0,8
tick,0x7ffa19ab1d94,144308793,0,0x0,8
tick,0x7ffa19ab1d94,144324549,0,0x0,8
tick,0x7ffa19ab1d94,144341242,0,0x0,8
tick,0x7ffa19ab1d94,144358852,0,0x0,8
tick,0x7ffa19ab1d94,144373300,0,0x0,8
tick,0x7ffa19ab1d94,144388427,0,0x0,8
tick,0x7ffa19ab1d94,144404130,0,0x0,8
tick,0x7ffa19ab1d94,144419064,0,0x0,8
tick,0x7ffa19ab1d94,144434668,0,0x0,8
tick,0x7ffa19ab1d94,144450741,0,0x0,8
tick,0x7ffa19ab1d94,144467574,0,0x0,8
tick,0x7ffa19ab1d94,144482195,0,0x0,8
tick,0x7ffa19ab1d94,144497656,0,0x0,8
tick,0x7ffa19ab1d94,144512688,0,0x0,8
tick,0x7ffa19ab1d94,144527947,0,0x0,8
tick,0x7ffa19ab1d94,144543777,0,0x0,8
tick,0x7ffa19ab1d94,144560501,0,0x0,8
tick,0x7ffa19ab1d94,144574892,0,0x0,8
tick,0x7ffa19ab1d94,144590508,0,0x0,8
tick,0x7ffa19ab1d94,144606575,0,0x0,8
tick,0x7ffa19ab1d94,144624797,0,0x0,8
tick,0x7ffa19ab1d94,144637870,0,0x0,8
tick,0x7ffa19ab1d94,144653813,0,0x0,8
tick,0x7ffa19ab1d94,144669272,0,0x0,8
tick,0x7ffa19ab1d94,144684350,0,0x0,8
tick,0x7ffa19ab1d94,144700646,0,0x0,8
tick,0x7ffa19ab1d94,144716496,0,0x0,8
tick,0x7ffa19ab1d94,144732567,0,0x0,8
tick,0x7ffa19ab1d94,144748687,0,0x0,8
tick,0x7ffa19ab1d94,144764341,0,0x0,8
tick,0x7ffa19ab1d94,144779383,0,0x0,8
tick,0x7ffa19ab1d94,144796640,0,0x0,8
tick,0x7ffa19ab1d94,144813772,0,0x0,8
tick,0x7ffa19ab1d94,144826869,0,0x0,8
tick,0x7ffa19ab1d94,144843594,0,0x0,8
tick,0x7ffa19ab1d94,144859215,0,0x0,8
tick,0x7ffa19ab1d94,144877808,0,0x0,8
tick,0x7ffa19ab1d94,144890446,0,0x0,8
tick,0x7ffa19ab1d94,144904734,0,0x0,8
tick,0x7ffa19ab1d94,144921751,0,0x0,8
tick,0x7ffa19ab1d94,144939334,0,0x0,8
tick,0x7ffa19ab1d94,144953829,0,0x0,8
tick,0x7ffa19ab1d94,144967086,0,0x0,8
tick,0x7ffa19ab1d94,144987993,0,0x0,8
tick,0x7ffa19ab1d94,144997294,0,0x0,8
tick,0x7ffa19ab1d94,145013332,0,0x0,8
tick,0x7ffa19ab1d94,145028709,0,0x0,8
tick,0x7ffa19ab1d94,145045197,0,0x0,8
tick,0x7ffa19ab1d94,145059764,0,0x0,8
tick,0x7ffa19ab1d94,145076189,0,0x0,8
tick,0x7ffa19ab1d94,145093326,0,0x0,8
tick,0x7ffa19ab1d94,145108506,0,0x0,8
tick,0x7ffa19ab1d94,145129446,0,0x0,8
tick,0x7ffa19ab1d94,145141937,0,0x0,8
tick,0x7ffa19ab1d94,145156043,0,0x0,8
tick,0x7ffa19ab1d94,145175836,0,0x0,8
tick,0x7ffa19ab1d94,145187606,0,0x0,8
tick,0x7ffa19ab1d94,145210379,0,0x0,8
tick,0x7ffa19ab1d94,145217231,0,0x0,8
tick,0x7ffa19ab1d94,145234836,0,0x0,8
tick,0x7ffa19ab1d94,145253464,0,0x0,8
tick,0x7ffa19ab1d94,145273061,0,0x0,8
tick,0x7ffa19ab1d94,145282321,0,0x0,8
tick,0x7ffa19ab1d94,145303616,0,0x0,8
tick,0x7ffa19ab1d94,145312903,0,0x0,8
tick,0x7ffa19ab1d94,145326472,0,0x0,8
tick,0x7ffa19ab1d94,145342209,0,0x0,8
tick,0x7ffa19ab1d94,145360817,0,0x0,8
tick,0x7ffa19ab1d94,145375180,0,0x0,8
tick,0x7ffa19ab1d94,145389651,0,0x0,8
tick,0x7ffa19ab1d94,145406526,0,0x0,8
tick,0x7ffa19ab1d94,145418408,0,0x0,8
tick,0x7ffa19ab1d94,145434795,0,0x0,8
tick,0x7ffa19ab1d94,145453277,0,0x0,8
tick,0x7ffa19ab1d94,145468180,0,0x0,8
tick,0x7ffa19ab1d94,145480104,0,0x0,8
tick,0x7ffa19ab1d94,145495694,0,0x0,8
tick,0x7ffa19ab1d94,145525794,0,0x0,8
tick,0x7ffa19ab1d94,145543704,0,0x0,8
tick,0x7ffa19ab1d94,145557833,0,0x0,8
tick,0x7ffa19ab1d94,145573200,0,0x0,8
tick,0x7ffa19ab1d94,145588970,0,0x0,8
tick,0x7ffa19ab1d94,145604771,0,0x0,8
tick,0x7ffa19ab1d94,145620910,0,0x0,8
tick,0x7ffa19ab1d94,145636680,0,0x0,8
tick,0x7ffa19ab1d94,145653210,0,0x0,8
tick,0x7ffa19ab1d94,145668398,0,0x0,8
tick,0x7ffa19ab1d94,145684523,0,0x0,8
tick,0x7ffa19ab1d94,145699479,0,0x0,8
tick,0x7ffa19ab1d94,145719498,0,0x0,8
tick,0x7ffa19ab1d94,145730972,0,0x0,8
tick,0x7ffa19ab1d94,145746432,0,0x0,8
tick,0x7ffa19ab1d94,145762881,0,0x0,8
tick,0x7ffa19ab1d94,145777255,0,0x0,8
tick,0x7ffa19ab1d94,145793449,0,0x0,8
tick,0x7ffa19ab1d94,145808283,0,0x0,8
tick,0x7ffa19ab1d94,145823762,0,0x0,8
tick,0x7ffa19ab1d94,145843171,0,0x0,8
tick,0x7ffa19ab1d94,145854904,0,0x0,8
tick,0x7ffa19ab1d94,145875578,0,0x0,8
tick,0x7ffa19ab1d94,145888209,0,0x0,8
tick,0x7ffa19ab1d94,145904313,0,0x0,8
tick,0x7ffa19ab1d94,145919720,0,0x0,8
tick,0x7ffa19ab1d94,145936908,0,0x0,8
tick,0x7ffa19ab1d94,145951364,0,0x0,8
tick,0x7ffa19ab1d94,145967360,0,0x0,8
tick,0x7ffa19ab1d94,145997672,0,0x0,8
tick,0x7ffa19ab1d94,146018795,0,0x0,8
tick,0x7ffa19ab1d94,146028571,0,0x0,8
tick,0x7ffa19ab1d94,146049707,0,0x0,8
tick,0x7ffa19ab1d94,146059494,0,0x0,8
tick,0x7ffa19ab1d94,146076045,0,0x0,8
tick,0x7ffa19ab1d94,146092302,0,0x0,8
tick,0x7ffa19ab1d94,146108003,0,0x0,8
tick,0x7ffa19ab1d94,146123608,0,0x0,8
tick,0x7ffa19ab1d94,146138700,0,0x0,8
tick,0x7ffa19ab1d94,146154693,0,0x0,8
tick,0x7ffa19ab1d94,146170287,0,0x0,8
tick,0x7ffa19ab1d94,146186506,0,0x0,8
tick,0x7ffa19ab1d94,146200720,0,0x0,8
tick,0x7ffa19ab1d94,146217089,0,0x0,8
tick,0x7ffa19ab1d94,146232557,0,0x0,8
tick,0x7ffa19ab1d94,146247103,0,0x0,8
tick,0x7ffa19ab1d94,146264205,0,0x0,8
tick,0x7ffa19ab1d94,146278901,0,0x0,8
tick,0x7ffa19ab1d94,146294035,0,0x0,8
tick,0x7ffa19ab1d94,146309628,0,0x0,8
tick,0x7ffa19ab1d94,146325157,0,0x0,8
tick,0x7ffa19ab1d94,146340910,0,0x0,8
tick,0x7ffa19ab1d94,146356467,0,0x0,8
tick,0x7ffa19ab1d94,146372062,0,0x0,8
tick,0x7ffa19ab1d94,146387077,0,0x0,8
tick,0x7ffa19ab1d94,146403360,0,0x0,8
tick,0x7ffa19ab1d94,146418311,0,0x0,8
tick,0x7ffa19ab1d94,146433416,0,0x0,8
tick,0x7ffa19ab1d94,146449386,0,0x0,8
tick,0x7ffa19ab1d94,146464373,0,0x0,8
tick,0x7ffa19ab1d94,146483863,0,0x0,8
tick,0x7ffa19ab1d94,146495663,0,0x0,8
tick,0x7ffa19ab1d94,146511548,0,0x0,8
tick,0x7ffa19ab1d94,146526559,0,0x0,8
tick,0x7ffa19ab1d94,146541687,0,0x0,8
tick,0x7ffa19ab1d94,146556937,0,0x0,8
tick,0x7ffa19ab1d94,146572642,0,0x0,8
tick,0x7ffa19ab1d94,146587861,0,0x0,8
tick,0x7ffa19ab1d94,146603474,0,0x0,8
tick,0x7ffa19ab1d94,146618695,0,0x0,8
tick,0x7ffa19ab1d94,146633843,0,0x0,8
tick,0x7ffa19ab1d94,146649946,0,0x0,8
tick,0x7ffa19ab1d94,146665554,0,0x0,8
tick,0x7ffa19ab1d94,146682712,0,0x0,8
tick,0x7ffa19ab1d94,146698265,0,0x0,8
tick,0x7ffa19ab1d94,146711773,0,0x0,8
tick,0x7ffa19ab1d94,146730181,0,0x0,8
tick,0x7ffa19ab1d94,146744008,0,0x0,8
tick,0x7ffa19ab1d94,146758704,0,0x0,8
tick,0x7ffa19ab1d94,146774731,0,0x0,8
tick,0x7ffa19ab1d94,146790111,0,0x0,8
tick,0x7ffa19ab1d94,146805318,0,0x0,8
tick,0x7ffa19ab1d94,146821855,0,0x0,8
tick,0x7ffa19ab1d94,146837970,0,0x0,8
tick,0x7ffa19ab1d94,146853558,0,0x0,8
tick,0x7ffa19ab1d94,146869963,0,0x0,8
tick,0x7ffa19ab1d94,146885770,0,0x0,8
tick,0x7ffa19ab1d94,146900595,0,0x0,8
tick,0x7ffa19ab1d94,146916516,0,0x0,8
tick,0x7ffa19ab1d94,146935708,0,0x0,8
tick,0x7ffa19ab1d94,146949091,0,0x0,8
tick,0x7ffa19ab1d94,146966033,0,0x0,8
tick,0x7ffa19ab1d94,146983347,0,0x0,8
tick,0x7ffa19ab1d94,146994220,0,0x0,8
tick,0x7ffa19ab1d94,147009941,0,0x0,8
tick,0x7ffa19ab1d94,147025006,0,0x0,8
tick,0x7ffa19ab1d94,147041603,0,0x0,8
tick,0x7ffa19ab1d94,147056810,0,0x0,8
tick,0x7ffa19ab1d94,147073993,0,0x0,8
tick,0x7ffa19ab1d94,147093416,0,0x0,8
tick,0x7ffa19ab1d94,147104880,0,0x0,8
tick,0x7ffa19ab1d94,147120688,0,0x0,8
tick,0x7ffa19ab1d94,147136842,0,0x0,8
tick,0x7ffa19ab1d94,147152887,0,0x0,8
tick,0x7ffa19ab1d94,147167229,0,0x0,8
tick,0x7ffa19ab1d94,147183562,0,0x0,8
tick,0x7ffa19ab1d94,147201278,0,0x0,8
tick,0x7ffa19ab1d94,147217132,0,0x0,8
tick,0x7ffa19ab1d94,147235238,0,0x0,8
tick,0x7ffa19ab1d94,147245925,0,0x0,8
tick,0x7ffa19ab1d94,147268546,0,0x0,8
tick,0x7ffa19ab1d94,147277486,0,0x0,8
tick,0x7ffa19ab1d94,147292993,0,0x0,8
tick,0x7ffa19ab1d94,147307423,0,0x0,8
tick,0x7ffa19ab1d94,147324636,0,0x0,8
tick,0x7ffa19ab1d94,147338478,0,0x0,8
tick,0x7ffa19ab1d94,147354762,0,0x0,8
tick,0x7ffa19ab1d94,147369755,0,0x0,8
tick,0x7ffa19ab1d94,147385869,0,0x0,8
tick,0x7ffa19ab1d94,147400369,0,0x0,8
tick,0x7ffa19ab1d94,147416186,0,0x0,8
tick,0x7ffa19ab1d94,147433961,0,0x0,8
tick,0x7ffa19ab1d94,147448431,0,0x0,8
tick,0x7ffa19ab1d94,147464188,0,0x0,8
tick,0x7ffa19ab1d94,147480720,0,0x0,8
tick,0x7ffa19ab1d94,147495651,0,0x0,8
tick,0x7ffa19ab1d94,147510619,0,0x0,8
tick,0x7ffa19ab1d94,147526744,0,0x0,8
tick,0x7ffa19ab1d94,147543259,0,0x0,8
tick,0x7ffa19ab1d94,147558230,0,0x0,8
tick,0x7ffa19ab1d94,147575482,0,0x0,8
tick,0x7ffa19ab1d94,147589797,0,0x0,8
tick,0x7ffa19ab1d94,147605856,0,0x0,8
tick,0x7ffa19ab1d94,147621847,0,0x0,8
tick,0x7ffa19ab1d94,147636954,0,0x0,8
tick,0x7ffa19ab1d94,147652992,0,0x0,8
tick,0x7ffa19ab1d94,147668184,0,0x0,8
tick,0x7ffa19ab1d94,147688430,0,0x0,8
tick,0x7ffa19ab1d94,147708774,0,0x0,8
tick,0x7ffa19ab1d94,147723613,0,0x0,8
tick,0x7ffa19ab1d94,147740685,0,0x0,8
tick,0x7ffa19ab1d94,147749182,0,0x0,8
tick,0x7ffa19ab1d94,147771793,0,0x0,8
tick,0x7ffa19ab1d94,147780633,0,0x0,8
tick,0x7ffa19ab1d94,147797832,0,0x0,8
tick,0x7ffa19ab1d94,147816443,0,0x0,8
tick,0x7ffa19ab1d94,147856443,0,0x0,8
tick,0x7ffa19ab1d94,147872910,0,0x0,8
tick,0x7ffa19ab1d94,147917201,0,0x0,8
tick,0x7ffa19ab1d94,147969602,0,0x0,8
tick,0x7ffa19ab1d94,148004957,0,0x0,8
tick,0x7ffa19ab1d94,148016194,0,0x0,8
tick,0x7ffa19ab1d94,148059739,0,0x0,8
tick,0x7ffa19ab1d94,148085991,0,0x0,8
tick,0x7ffa19ab1d94,148094041,0,0x0,8
tick,0x7ffa19ab1d94,148123577,0,0x0,8
tick,0x7ffa19ab1d94,148155884,0,0x0,8
tick,0x7ffa19ab1d94,148188263,0,0x0,8
tick,0x7ffa19ab1d94,148200576,0,0x0,8
tick,0x7ffa19ab1d94,148219030,0,0x0,8
tick,0x7ffa19ab1d94,148233861,0,0x0,8
tick,0x7ffa19ab1d94,148249022,0,0x0,8
tick,0x7ffa19ab1d94,148267968,0,0x0,8
tick,0x7ffa19ab1d94,148278742,0,0x0,8
tick,0x7ffa19ab1d94,148294746,0,0x0,8
tick,0x7ffa19ab1d94,148319788,0,0x0,8
tick,0x7ffa19ab1d94,148332964,0,0x0,8
tick,0x7ffa19ab1d94,148339783,0,0x0,8
tick,0x7ffa19ab1d94,148356776,0,0x0,8
tick,0x7ffa19ab1d94,148377204,0,0x0,8
tick,0x7ffa19ab1d94,148387835,0,0x0,8
tick,0x7ffa19ab1d94,148403180,0,0x0,8
tick,0x7ffa19ab1d94,148418296,0,0x0,8
tick,0x7ffa19ab1d94,148434543,0,0x0,8
tick,0x7ffa19ab1d94,148454449,0,0x0,8
tick,0x7ffa19ab1d94,148465320,0,0x0,8
tick,0x7ffa19ab1d94,148483057,0,0x0,8
tick,0x7ffa19ab1d94,148498110,0,0x0,8
tick,0x7ffa19ab1d94,148513374,0,0x0,8
tick,0x7ffa19ab1d94,148528839,0,0x0,8
tick,0x7ffa19ab1d94,148545113,0,0x0,8
tick,0x7ffa19ab1d94,148560048,0,0x0,8
tick,0x7ffa19ab1d94,148577668,0,0x0,8
tick,0x7ffa19ab1d94,148599886,0,0x0,8
tick,0x7ffa19ab1d94,148607655,0,0x0,8
tick,0x7ffa19ab1d94,148623223,0,0x0,8
tick,0x7ffa19ab1d94,148638774,0,0x0,8
tick,0x7ffa19ab1d94,148653881,0,0x0,8
tick,0x7ffa19ab1d94,148669920,0,0x0,8
tick,0x7ffa19ab1d94,148686889,0,0x0,8
tick,0x7ffa19ab1d94,148701784,0,0x0,8
tick,0x7ffa19ab1d94,148719133,0,0x0,8
tick,0x7ffa19ab1d94,148732349,0,0x0,8
tick,0x7ffa19ab1d94,148748484,0,0x0,8
tick,0x7ffa19ab1d94,148764318,0,0x0,8
tick,0x7ffa19ab1d94,148780298,0,0x0,8
tick,0x7ffa19ab1d94,148799742,0,0x0,8
tick,0x7ffa19ab1d94,148813093,0,0x0,8
tick,0x7ffa19ab1d94,148829731,0,0x0,8
tick,0x7ffa19ab1d94,148843059,0,0x0,8
tick,0x7ffa19ab1d94,148858308,0,0x0,8
tick,0x7ffa19ab1d94,148874599,0,0x0,8
tick,0x7ffa19ab1d94,148889327,0,0x0,8
tick,0x7ffa19ab1d94,148904845,0,0x0,8
tick,0x7ffa19ab1d94,148920047,0,0x0,8
tick,0x7ffa19ab1d94,148936302,0,0x0,8
tick,0x7ffa19ab1d94,148955508,0,0x0,8
tick,0x7ffa19ab1d94,148967896,0,0x0,8
tick,0x7ffa19ab1d94,148984466,0,0x0,8
tick,0x7ffa19ab1d94,148997802,0,0x0,8
tick,0x7ffa19ab1d94,149014675,0,0x0,8
tick,0x7ffa19ab1d94,149039387,0,0x0,8
tick,0x7ffa19ab1d94,149046323,0,0x0,8
tick,0x7ffa19ab1d94,149060473,0,0x0,8
tick,0x7ffa19ab1d94,149084441,0,0x0,8
tick,0x7ffa19ab1d94,149098243,0,0x0,8
tick,0x7ffa19ab1d94,149108876,0,0x0,8
tick,0x7ffa19ab1d94,149149994,0,0x0,8
tick,0x7ffa19ab1d94,149172188,0,0x0,8
tick,0x7ffa19ab1d94,149218789,0,0x0,8
tick,0x7ffa19ab1d94,149242456,0,0x0,8
tick,0x7ffa19ab1d94,149249141,0,0x0,8
tick,0x7ffa19ab1d94,149265411,0,0x0,8
tick,0x7ffa19ab1d94,149288548,0,0x0,8
tick,0x7ffa19ab1d94,149294113,0,0x0,8
tick,0x7ffa19ab1d94,149309202,0,0x0,8
tick,0x7ffa19ab1d94,149324827,0,0x0,8
tick,0x7ffa19ab1d94,149340878,0,0x0,8
tick,0x7ffa19ab1d94,149355914,0,0x0,8
tick,0x7ffa19ab1d94,149372747,0,0x0,8
tick,0x7ffa19ab1d94,149391557,0,0x0,8
tick,0x7ffa19ab1d94,149403629,0,0x0,8
tick,0x7ffa19ab1d94,149419965,0,0x0,8
tick,0x7ffa19ab1d94,149434717,0,0x0,8
tick,0x7ffa19ab1d94,149449543,0,0x0,8
tick,0x7ffa19ab1d94,149467471,0,0x0,8
tick,0x7ffa19ab1d94,149482050,0,0x0,8
tick,0x7ffa19ab1d94,149497161,0,0x0,8
tick,0x7ffa19ab1d94,149513061,0,0x0,8
tick,0x7ffa19ab1d94,149528864,0,0x0,8
tick,0x7ffa19ab1d94,149543068,0,0x0,8
tick,0x7ffa19ab1d94,149559396,0,0x0,8
tick,0x7ffa19ab1d94,149575732,0,0x0,8
tick,0x7ffa19ab1d94,149590266,0,0x0,8
tick,0x7ffa19ab1d94,149606475,0,0x0,8
tick,0x7ffa19ab1d94,149621631,0,0x0,8
tick,0x7ffa19ab1d94,149638284,0,0x0,8
tick,0x7ffa19ab1d94,149654439,0,0x0,8
tick,0x7ffa19ab1d94,149671783,0,0x0,8
tick,0x7ffa19ab1d94,149687258,0,0x0,8
tick,0x7ffa19ab1d94,149702508,0,0x0,8
tick,0x7ffa19ab1d94,149717017,0,0x0,8
tick,0x7ffa19ab1d94,149732959,0,0x0,8
tick,0x7ffa19ab1d94,149747981,0,0x0,8
tick,0x7ffa19ab1d94,149766534,0,0x0,8
tick,0x7ffa19ab1d94,149780074,0,0x0,8
tick,0x7ffa19ab1d94,149798186,0,0x0,8
tick,0x7ffa19ab1d94,149824738,0,0x0,8
tick,0x7ffa19ab1d94,149839638,0,0x0,8
tick,0x7ffa19ab1d94,149850990,0,0x0,8
tick,0x7ffa19ab1d94,149860594,0,0x0,8
tick,0x7ffa19ab1d94,149879835,0,0x0,8
tick,0x7ffa19ab1d94,149890784,0,0x0,8
tick,0x7ffa19ab1d94,149908904,0,0x0,8
tick,0x7ffa19ab1d94,149931162,0,0x0,8
tick,0x7ffa19ab1d94,149958941,0,0x0,8
tick,0x7ffa19ab1d94,150001310,0,0x0,8
tick,0x7ffa19ab1d94,150075452,0,0x0,8
tick,0x7ffa19ab1d94,150106771,0,0x0,8
tick,0x7ffa19ab1d94,150126078,0,0x0,8
tick,0x7ffa19ab1d94,150157408,0,0x0,8
tick,0x7ffa19ab1d94,150276050,0,0x0,8
tick,0x7ffa19ab1d94,150285282,0,0x0,8
tick,0x7ffa19ab1d94,150300321,0,0x0,8
tick,0x7ffa19ab1d94,150315645,0,0x0,8
tick,0x7ffa19ab1d94,150333658,0,0x0,8
tick,0x7ffa19ab1d94,150345534,0,0x0,8
tick,0x7ffa19ab1d94,150359207,0,0x0,8
tick,0x7ffa19ab1d94,150390057,0,0x0,8
tick,0x7ffa19ab1d94,150406741,0,0x0,8
tick,0x7ffa19ab1d94,150420803,0,0x0,8
tick,0x7ffa19ab1d94,150436582,0,0x0,8
tick,0x7ffa19ab1d94,150453345,0,0x0,8
tick,0x7ffa19ab1d94,150468101,0,0x0,8
tick,0x7ffa19ab1d94,150487549,0,0x0,8
tick,0x7ffa19ab1d94,150500075,0,0x0,8
tick,0x7ffa19ab1d94,150514759,0,0x0,8
tick,0x7ffa19ab1d94,150530652,0,0x0,8
tick,0x7ffa19ab1d94,150546085,0,0x0,8
tick,0x7ffa19ab1d94,150582494,0,0x0,8
tick,0x7ffa19ab1d94,150596583,0,0x0,8
tick,0x7ffa19ab1d94,150619524,0,0x0,8
tick,0x7ffa19ab1d94,150623659,0,0x0,8
tick,0x7ffa19ab1d94,150639231,0,0x0,8
tick,0x7ffa19ab1d94,150663293,0,0x0,8
tick,0x7ffa19ab1d94,150673115,0,0x0,8
tick,0x7ffa19ab1d94,150686135,0,0x0,8
tick,0x7ffa19ab1d94,150702406,0,0x0,8
tick,0x7ffa19ab1d94,150718005,0,0x0,8
tick,0x7ffa19ab1d94,150734679,0,0x0,8
tick,0x7ffa19ab1d94,150747367,0,0x0,8
tick,0x7ffa19ab1d94,150763170,0,0x0,8
tick,0x7ffa19ab1d94,150779481,0,0x0,8
tick,0x7ffa19ab1d94,150794834,0,0x0,8
tick,0x7ffa19ab1d94,150809479,0,0x0,8
tick,0x7ffa19ab1d94,150859377,0,0x0,8
tick,0x7ffa19ab1d94,150871805,0,0x0,8
tick,0x7ffa19ab1d94,150903201,0,0x0,8
tick,0x7ffa19ab1d94,150925715,0,0x0,8
tick,0x7ffa19ab1d94,150934212,0,0x0,8
tick,0x7ffa19ab1d94,150950666,0,0x0,8
tick,0x7ffa19ab1d94,150968452,0,0x0,8
tick,0x7ffa19ab1d94,150981365,0,0x0,8
tick,0x7ffa19ab1d94,150996581,0,0x0,8
tick,0x7ffa19ab1d94,151023361,0,0x0,8
tick,0x7ffa19ab1d94,151039353,0,0x0,8
tick,0x7ffa19ab1d94,151053144,0,0x0,8
tick,0x7ffa19ab1d94,151066444,0,0x0,8
tick,0x7ffa19ab1d94,151098718,0,0x0,8
tick,0x7ffa19ab1d94,151106259,0,0x0,8
tick,0x7ffa19ab1d94,151121112,0,0x0,8
tick,0x7ffa19ab1d94,151138783,0,0x0,8
tick,0x7ffa19ab1d94,151154224,0,0x0,8
tick,0x7ffa19ab1d94,151167505,0,0x0,8
tick,0x7ffa19ab1d94,151183207,0,0x0,8
tick,0x7ffa19ab1d94,151198266,0,0x0,8
tick,0x7ffa19ab1d94,151213402,0,0x0,8
tick,0x7ffa19ab1d94,151229096,0,0x0,8
tick,0x7ffa19ab1d94,151250062,0,0x0,8
tick,0x7ffa19ab1d94,151261594,0,0x0,8
tick,0x7ffa19ab1d94,151278096,0,0x0,8
tick,0x7ffa19ab1d94,151299774,0,0x0,8
tick,0x7ffa19ab1d94,151307238,0,0x0,8
tick,0x7ffa19ab1d94,151323318,0,0x0,8
tick,0x7ffa19ab1d94,151339015,0,0x0,8
tick,0x7ffa19ab1d94,151354575,0,0x0,8
tick,0x7ffa19ab1d94,151369994,0,0x0,8
tick,0x7ffa19ab1d94,151395386,0,0x0,8
tick,0x7ffa19ab1d94,151402035,0,0x0,8
tick,0x7ffa19ab1d94,151417031,0,0x0,8
tick,0x7ffa19ab1d94,151434063,0,0x0,8
tick,0x7ffa19ab1d94,151448862,0,0x0,8
tick,0x7ffa19ab1d94,151463939,0,0x0,8
tick,0x7ffa19ab1d94,151478833,0,0x0,8
tick,0x7ffa19ab1d94,151494258,0,0x0,8
tick,0x7ffa19ab1d94,151511066,0,0x0,8
tick,0x7ffa19ab1d94,151525517,0,0x0,8
tick,0x7ffa19ab1d94,151540841,0,0x0,8
tick,0x7ffa19ab1d94,151556182,0,0x0,8
tick,0x7ffa19ab1d94,151570484,0,0x0,8
tick,0x7ffa19ab1d94,151585953,0,0x0,8
tick,0x7ffa19ab1d94,151601876,0,0x0,8
tick,0x7ffa19ab1d94,151617570,0,0x0,8
tick,0x7ffa19ab1d94,151632915,0,0x0,8
tick,0x7ffa19ab1d94,151648630,0,0x0,8
tick,0x7ffa19ab1d94,151664791,0,0x0,8
tick,0x7ffa19ab1d94,151680586,0,0x0,8
tick,0x7ffa19ab1d94,151696708,0,0x0,8
tick,0x7ffa19ab1d94,151711879,0,0x0,8
tick,0x7ffa19ab1d94,151728149,0,0x0,8
tick,0x7ffa19ab1d94,151747172,0,0x0,8
tick,0x7ffa19ab1d94,151758702,0,0x0,8
tick,0x7ffa19ab1d94,151773717,0,0x0,8
tick,0x7ffa19ab1d94,151790840,0,0x0,8
tick,0x7ffa19ab1d94,151805256,0,0x0,8
tick,0x7ffa19ab1d94,151824444,0,0x0,8
tick,0x7ffa19ab1d94,151837902,0,0x0,8
tick,0x7ffa19ab1d94,151862206,0,0x0,8
tick,0x7ffa19ab1d94,151873029,0,0x0,8
tick,0x7ffa19ab1d94,151895862,0,0x0,8
tick,0x7ffa19ab1d94,151898114,0,0x0,8
tick,0x7ffa19ab1d94,151913766,0,0x0,8
tick,0x7ffa19ab1d94,151929773,0,0x0,8
tick,0x7ffa19ab1d94,151946271,0,0x0,8
tick,0x7ffa19ab1d94,151960569,0,0x0,8
tick,0x7ffa19ab1d94,151976508,0,0x0,8
tick,0x7ffa19ab1d94,152001179,0,0x0,8
tick,0x7ffa19ab1d94,152007893,0,0x0,8
tick,0x7ffa19ab1d94,152023453,0,0x0,8
tick,0x7ffa19ab1d94,152039030,0,0x0,8
tick,0x7ffa19ab1d94,152057655,0,0x0,8
tick,0x7ffa19ab1d94,152074399,0,0x0,8
tick,0x7ffa19ab1d94,152097572,0,0x0,8
tick,0x7ffa19ab1d94,152105121,0,0x0,8
tick,0x7ffa19ab1d94,152116656,0,0x0,8
tick,0x7ffa19ab1d94,152133789,0,0x0,8
tick,0x7ffa19ab1d94,152147872,0,0x0,8
tick,0x7ffa19ab1d94,152163481,0,0x0,8
tick,0x7ffa19ab1d94,152178202,0,0x0,8
tick,0x7ffa19ab1d94,152198154,0,0x0,8
tick,0x7ffa19ab1d94,152213407,0,0x0,8
tick,0x7ffa19ab1d94,152226687,0,0x0,8
tick,0x7ffa19ab1d94,152241545,0,0x0,8
tick,0x7ffa19ab1d94,152257140,0,0x0,8
tick,0x7ffa19ab1d94,152273361,0,0x0,8
tick,0x7ffa19ab1d94,152289032,0,0x0,8
tick,0x7ffa19ab1d94,152303746,0,0x0,8
tick,0x7ffa19ab1d94,152319225,0,0x0,8
tick,0x7ffa19ab1d94,152335077,0,0x0,8
tick,0x7ffa19ab1d94,152350315,0,0x0,8
tick,0x7ffa19ab1d94,152366435,0,0x0,8
tick,0x7ffa19ab1d94,152381604,0,0x0,8
tick,0x7ffa19ab1d94,152398376,0,0x0,8
tick,0x7ffa19ab1d94,152414342,0,0x0,8
tick,0x7ffa19ab1d94,152430450,0,0x0,8
tick,0x7ffa19ab1d94,152444667,0,0x0,8
tick,0x7ffa19ab1d94,152462166,0,0x0,8
tick,0x7ffa19ab1d94,152477017,0,0x0,8
tick,0x7ffa19ab1d94,152492015,0,0x0,8
tick,0x7ffa19ab1d94,152507504,0,0x0,8
tick,0x7ffa19ab1d94,152523508,0,0x0,8
tick,0x7ffa19ab1d94,152540961,0,0x0,8
tick,0x7ffa19ab1d94,152555589,0,0x0,8
tick,0x7ffa19ab1d94,152570970,0,0x0,8
tick,0x7ffa19ab1d94,152585714,0,0x0,8
tick,0x7ffa19ab1d94,152601583,0,0x0,8
tick,0x7ffa19ab1d94,152617394,0,0x0,8
tick,0x7ffa19ab1d94,152634430,0,0x0,8
tick,0x7ffa19ab1d94,152649170,0,0x0,8
tick,0x7ffa19ab1d94,152670873,0,0x0,8
tick,0x7ffa19ab1d94,152680960,0,0x0,8
tick,0x7ffa19ab1d94,152696511,0,0x0,8
tick,0x7ffa19ab1d94,152712080,0,0x0,8
tick,0x7ffa19ab1d94,152727516,0,0x0,8
tick,0x7ffa19ab1d94,152743112,0,0x0,8
tick,0x7ffa19ab1d94,152759280,0,0x0,8
tick,0x7ffa19ab1d94,152776756,0,0x0,8
tick,0x7ffa19ab1d94,152790703,0,0x0,8
tick,0x7ffa19ab1d94,152807925,0,0x0,8
tick,0x7ffa19ab1d94,152823198,0,0x0,8
tick,0x7ffa19ab1d94,152841026,0,0x0,8
tick,0x7ffa19ab1d94,152854143,0,0x0,8
tick,0x7ffa19ab1d94,152869641,0,0x0,8
tick,0x7ffa19ab1d94,152888114,0,0x0,8
tick,0x7ffa19ab1d94,152900867,0,0x0,8
tick,0x7ffa19ab1d94,152921442,0,0x0,8
tick,0x7ffa19ab1d94,152932616,0,0x0,8
tick,0x7ffa19ab1d94,152948125,0,0x0,8
tick,0x7ffa19ab1d94,152964475,0,0x0,8
tick,0x7ffa19ab1d94,152979303,0,0x0,8
tick,0x7ffa19ab1d94,152994080,0,0x0,8
tick,0x7ffa19ab1d94,153009737,0,0x0,8
tick,0x7ffa19ab1d94,153026266,0,0x0,8
tick,0x7ffa19ab1d94,153043288,0,0x0,8
tick,0x7ffa19ab1d94,153056828,0,0x0,8
tick,0x7ffa19ab1d94,153073240,0,0x0,8
tick,0x7ffa19ab1d94,153089072,0,0x0,8
tick,0x7ffa19ab1d94,153104603,0,0x0,8
tick,0x7ffa19ab1d94,153121895,0,0x0,8
tick,0x7ffa19ab1d94,153136818,0,0x0,8
tick,0x7ffa19ab1d94,153154616,0,0x0,8
tick,0x7ffa19ab1d94,153167263,0,0x0,8
tick,0x7ffa19ab1d94,153184667,0,0x0,8
tick,0x7ffa19ab1d94,153198600,0,0x0,8
tick,0x7ffa19ab1d94,153213975,0,0x0,8
tick,0x7ffa19ab1d94,153229597,0,0x0,8
tick,0x7ffa19ab1d94,153245997,0,0x0,8
tick,0x7ffa19ab1d94,153263043,0,0x0,8
tick,0x7ffa19ab1d94,153279073,0,0x0,8
tick,0x7ffa19ab1d94,153300835,0,0x0,8
tick,0x7ffa19ab1d94,153309287,0,0x0,8
tick,0x7ffa19ab1d94,153324862,0,0x0,8
tick,0x7ffa19ab1d94,153340117,0,0x0,8
tick,0x7ffa19ab1d94,153356941,0,0x0,8
tick,0x7ffa19ab1d94,153371471,0,0x0,8
tick,0x7ffa19ab1d94,153387423,0,0x0,8
tick,0x7ffa19ab1d94,153404255,0,0x0,8
tick,0x7ffa19ab1d94,153418369,0,0x0,8
tick,0x7ffa19ab1d94,153434182,0,0x0,8
tick,0x7ffa19ab1d94,153449170,0,0x0,8
tick,0x7ffa19ab1d94,153464980,0,0x0,8
tick,0x7ffa19ab1d94,153480272,0,0x0,8
tick,0x7ffa19ab1d94,153496211,0,0x0,8
tick,0x7ffa19ab1d94,153511797,0,0x0,8
tick,0x7ffa19ab1d94,153527065,0,0x0,8
tick,0x7ffa19ab1d94,153543052,0,0x0,8
tick,0x7ffa19ab1d94,153558956,0,0x0,8
tick,0x7ffa19ab1d94,153574893,0,0x0,8
tick,0x7ffa19ab1d94,153590513,0,0x0,8
tick,0x7ffa19ab1d94,153606046,0,0x0,8
tick,0x7ffa19ab1d94,153621757,0,0x0,8
tick,0x7ffa19ab1d94,153637232,0,0x0,8
tick,0x7ffa19ab1d94,153652998,0,0x0,8
tick,0x7ffa19ab1d94,153668468,0,0x0,8
tick,0x7ffa19ab1d94,153684292,0,0x0,8
tick,0x7ffa19ab1d94,153699660,0,0x0,8
tick,0x7ffa19ab1d94,153714662,0,0x0,8
tick,0x7ffa19ab1d94,153730709,0,0x0,8
tick,0x7ffa19ab1d94,153745821,0,0x0,8
tick,0x7ffa19ab1d94,153761083,0,0x0,8
tick,0x7ffa19ab1d94,153776862,0,0x0,8
tick,0x7ffa19ab1d94,153792018,0,0x0,8
tick,0x7ffa19ab1d94,153807714,0,0x0,8
tick,0x7ffa19ab1d94,153822656,0,0x0,8
tick,0x7ffa19ab1d94,153838389,0,0x0,8
tick,0x7ffa19ab1d94,153853707,0,0x0,8
tick,0x7ffa19ab1d94,153868928,0,0x0,8
tick,0x7ffa19ab1d94,153884536,0,0x0,8
tick,0x7ffa19ab1d94,153900409,0,0x0,8
tick,0x7ffa19ab1d94,153916221,0,0x0,8
tick,0x7ffa19ab1d94,153931889,0,0x0,8
tick,0x7ffa19ab1d94,153947609,0,0x0,8
tick,0x7ffa19ab1d94,153963091,0,0x0,8
tick,0x7ffa19ab1d94,153978412,0,0x0,8
tick,0x7ffa19ab1d94,153993620,0,0x0,8
tick,0x7ffa19ab1d94,154010084,0,0x0,8
tick,0x7ffa19ab1d94,154024389,0,0x0,8
tick,0x7ffa19ab1d94,154040132,0,0x0,8
tick,0x7ffa19ab1d94,154056183,0,0x0,8
tick,0x7ffa19ab1d94,154071726,0,0x0,8
tick,0x7ffa19ab1d94,154087506,0,0x0,8
tick,0x7ffa19ab1d94,154103669,0,0x0,8
tick,0x7ffa19ab1d94,154121187,0,0x0,8
tick,0x7ffa19ab1d94,154136668,0,0x0,8
tick,0x7ffa19ab1d94,154150446,0,0x0,8
tick,0x7ffa19ab1d94,154166774,0,0x0,8
tick,0x7ffa19ab1d94,154181978,0,0x0,8
tick,0x7ffa19ab1d94,154197637,0,0x0,8
tick,0x7ffa19ab1d94,154212837,0,0x0,8
tick,0x7ffa19ab1d94,154228363,0,0x0,8
tick,0x7ffa19ab1d94,154244136,0,0x0,8
tick,0x7ffa19ab1d94,154260516,0,0x0,8
tick,0x7ffa19ab1d94,154275331,0,0x0,8
tick,0x7ffa19ab1d94,154290924,0,0x0,8
tick,0x7ffa19ab1d94,154307271,0,0x0,8
tick,0x7ffa19ab1d94,154322066,0,0x0,8
tick,0x7ffa19ab1d94,154337718,0,0x0,8
tick,0x7ffa19ab1d94,154353622,0,0x0,8
tick,0x7ffa19ab1d94,154369219,0,0x0,8
tick,0x7ffa19ab1d94,154384946,0,0x0,8
tick,0x7ffa19ab1d94,154399911,0,0x0,8
tick,0x7ffa19ab1d94,154415421,0,0x0,8
tick,0x7ffa19ab1d94,154431612,0,0x0,8
tick,0x7ffa19ab1d94,154447090,0,0x0,8
tick,0x7ffa19ab1d94,154462806,0,0x0,8
tick,0x7ffa19ab1d94,154478190,0,0x0,8
tick,0x7ffa19ab1d94,154493004,0,0x0,8
tick,0x7ffa19ab1d94,154509014,0,0x0,8
tick,0x7ffa19ab1d94,154524741,0,0x0,8
tick,0x7ffa19ab1d94,154541103,0,0x0,8
tick,0x7ffa19ab1d94,154555774,0,0x0,8
tick,0x7ffa19ab1d94,154571818,0,0x0,8
tick,0x7ffa19ab1d94,154587336,0,0x0,8
tick,0x7ffa19ab1d94,154603438,0,0x0,8
tick,0x7ffa19ab1d94,154618722,0,0x0,8
tick,0x7ffa19ab1d94,154634132,0,0x0,8
tick,0x7ffa19ab1d94,154649542,0,0x0,8
tick,0x7ffa19ab1d94,154664572,0,0x0,8
tick,0x7ffa19ab1d94,154680030,0,0x0,8
tick,0x7ffa19ab1d94,154695797,0,0x0,8
tick,0x7ffa19ab1d94,154711873,0,0x0,8
tick,0x7ffa19ab1d94,154727055,0,0x0,8
tick,0x7ffa19ab1d94,154742356,0,0x0,8
tick,0x7ffa19ab1d94,154757414,0,0x0,8
tick,0x7ffa19ab1d94,154772657,0,0x0,8
tick,0x7ffa19ab1d94,154788446,0,0x0,8
tick,0x7ffa19ab1d94,154803647,0,0x0,8
tick,0x7ffa19ab1d94,154819075,0,0x0,8
tick,0x7ffa19ab1d94,154835117,0,0x0,8
tick,0x7ffa19ab1d94,154850414,0,0x0,8
tick,0x7ffa19ab1d94,154866166,0,0x0,8
tick,0x7ffa19ab1d94,154882023,0,0x0,8
tick,0x7ffa19ab1d94,154897221,0,0x0,8
tick,0x7ffa19ab1d94,154913100,0,0x0,8
tick,0x7ffa19ab1d94,154928597,0,0x0,8
tick,0x7ffa19ab1d94,154944611,0,0x0,8
tick,0x7ffa19ab1d94,154961478,0,0x0,8
tick,0x7ffa19ab1d94,154976585,0,0x0,8
tick,0x7ffa19ab1d94,154991583,0,0x0,8
tick,0x7ffa19ab1d94,155007506,0,0x0,8
tick,0x7ffa19ab1d94,155024286,0,0x0,8
tick,0x7ffa19ab1d94,155038144,0,0x0,8
tick,0x7ffa19ab1d94,155053931,0,0x0,8
tick,0x7ffa19ab1d94,155070050,0,0x0,8
tick,0x7ffa19ab1d94,155085261,0,0x0,8
tick,0x7ffa19ab1d94,155100688,0,0x0,8
tick,0x7ffa19ab1d94,155116014,0,0x0,8
tick,0x7ffa19ab1d94,155131918,0,0x0,8
tick,0x7ffa19ab1d94,155147445,0,0x0,8
tick,0x7ffa19ab1d94,155162845,0,0x0,8
tick,0x7ffa19ab1d94,155179142,0,0x0,8
tick,0x7ffa19ab1d94,155194804,0,0x0,8
tick,0x7ffa19ab1d94,155210070,0,0x0,8
tick,0x7ffa19ab1d94,155225565,0,0x0,8
tick,0x7ffa19ab1d94,155241608,0,0x0,8
tick,0x7ffa19ab1d94,155258205,0,0x0,8
tick,0x7ffa19ab1d94,155272359,0,0x0,8
tick,0x7ffa19ab1d94,155287730,0,0x0,8
tick,0x7ffa19ab1d94,155303686,0,0x0,8
tick,0x7ffa19ab1d94,155318964,0,0x0,8
tick,0x7ffa19ab1d94,155334270,0,0x0,8
tick,0x7ffa19ab1d94,155350896,0,0x0,8
tick,0x7ffa19ab1d94,155368082,0,0x0,8
tick,0x7ffa19ab1d94,155382882,0,0x0,8
tick,0x7ffa19ab1d94,155398513,0,0x0,8
tick,0x7ffa19ab1d94,155414615,0,0x0,8
tick,0x7ffa19ab1d94,155430387,0,0x0,8
tick,0x7ffa19ab1d94,155445765,0,0x0,8
tick,0x7ffa19ab1d94,155461711,0,0x0,8
tick,0x7ffa19ab1d94,155477058,0,0x0,8
tick,0x7ffa19ab1d94,155492991,0,0x0,8
tick,0x7ffa19ab1d94,155508252,0,0x0,8
tick,0x7ffa19ab1d94,155524146,0,0x0,8
tick,0x7ffa19ab1d94,155540119,0,0x0,8
tick,0x7ffa19ab1d94,155556035,0,0x0,8
tick,0x7ffa19ab1d94,155571791,0,0x0,8
tick,0x7ffa19ab1d94,155587785,0,0x0,8
tick,0x7ffa19ab1d94,155603547,0,0x0,8
tick,0x7ffa19ab1d94,155619507,0,0x0,8
tick,0x7ffa19ab1d94,155635585,0,0x0,8
tick,0x7ffa19ab1d94,155651232,0,0x0,8
tick,0x7ffa19ab1d94,155666847,0,0x0,8
tick,0x7ffa19ab1d94,155682951,0,0x0,8
tick,0x7ffa19ab1d94,155698071,0,0x0,8
tick,0x7ffa19ab1d94,155713731,0,0x0,8
tick,0x7ffa19ab1d94,155729126,0,0x0,8
tick,0x7ffa19ab1d94,155745060,0,0x0,8
tick,0x7ffa19ab1d94,155761650,0,0x0,8
tick,0x7ffa19ab1d94,155776810,0,0x0,8
tick,0x7ffa19ab1d94,155793001,0,0x0,8
tick,0x7ffa19ab1d94,155809229,0,0x0,8
tick,0x7ffa19ab1d94,155824008,0,0x0,8
tick,0x7ffa19ab1d94,155839917,0,0x0,8
tick,0x7ffa19ab1d94,155855454,0,0x0,8
tick,0x7ffa19ab1d94,155871765,0,0x0,8
tick,0x7ffa19ab1d94,155887751,0,0x0,8
tick,0x7ffa19ab1d94,155903569,0,0x0,8
tick,0x7ffa19ab1d94,155918784,0,0x0,8
tick,0x7ffa19ab1d94,155934851,0,0x0,8
tick,0x7ffa19ab1d94,155951022,0,0x0,8
tick,0x7ffa19ab1d94,155966431,0,0x0,8
tick,0x7ffa19ab1d94,155981675,0,0x0,8
tick,0x7ffa19ab1d94,155997259,0,0x0,8
tick,0x7ffa19ab1d94,156012622,0,0x0,8
tick,0x7ffa19ab1d94,156028200,0,0x0,8
tick,0x7ffa19ab1d94,156044197,0,0x0,8
tick,0x7ffa19ab1d94,156059700,0,0x0,8
tick,0x7ffa19ab1d94,156076383,0,0x0,8
tick,0x7ffa19ab1d94,156093239,0,0x0,8
tick,0x7ffa19ab1d94,156107798,0,0x0,8
tick,0x7ffa19ab1d94,156123871,0,0x0,8
tick,0x7ffa19ab1d94,156139572,0,0x0,8
tick,0x7ffa19ab1d94,156155057,0,0x0,8
tick,0x7ffa19ab1d94,156170634,0,0x0,8
tick,0x7ffa19ab1d94,156185945,0,0x0,8
tick,0x7ffa19ab1d94,156201896,0,0x0,8
tick,0x7ffa19ab1d94,156217128,0,0x0,8
tick,0x7ffa19ab1d94,156232879,0,0x0,8
tick,0x7ffa19ab1d94,156248241,0,0x0,8
tick,0x7ffa19ab1d94,156263656,0,0x0,8
tick,0x7ffa19ab1d94,156279572,0,0x0,8
tick,0x7ffa19ab1d94,156295486,0,0x0,8
tick,0x7ffa19ab1d94,156311567,0,0x0,8
tick,0x7ffa19ab1d94,156326974,0,0x0,8
tick,0x7ffa19ab1d94,156342772,0,0x0,8
tick,0x7ffa19ab1d94,156358783,0,0x0,8
tick,0x7ffa19ab1d94,156375695,0,0x0,8
tick,0x7ffa19ab1d94,156390307,0,0x0,8
tick,0x7ffa19ab1d94,156405785,0,0x0,8
tick,0x7ffa19ab1d94,156421668,0,0x0,8
tick,0x7ffa19ab1d94,156437539,0,0x0,8
tick,0x7ffa19ab1d94,156453757,0,0x0,8
tick,0x7ffa19ab1d94,156469144,0,0x0,8
tick,0x7ffa19ab1d94,156484372,0,0x0,8
tick,0x7ffa19ab1d94,156500182,0,0x0,8
tick,0x7ffa19ab1d94,156515788,0,0x0,8
tick,0x7ffa19ab1d94,156531994,0,0x0,8
tick,0x7ffa19ab1d94,156547496,0,0x0,8
tick,0x7ffa19ab1d94,156562798,0,0x0,8
tick,0x7ffa19ab1d94,156578117,0,0x0,8
tick,0x7ffa19ab1d94,156593415,0,0x0,8
tick,0x7ffa19ab1d94,156609133,0,0x0,8
tick,0x7ffa19ab1d94,156624916,0,0x0,8
tick,0x7ffa19ab1d94,156640522,0,0x0,8
tick,0x7ffa19ab1d94,156656392,0,0x0,8
tick,0x7ffa19ab1d94,156671951,0,0x0,8
tick,0x7ffa19ab1d94,156687442,0,0x0,8
tick,0x7ffa19ab1d94,156703277,0,0x0,8
tick,0x7ffa19ab1d94,156719608,0,0x0,8
tick,0x7ffa19ab1d94,156735935,0,0x0,8
tick,0x7ffa19ab1d94,156751346,0,0x0,8
tick,0x7ffa19ab1d94,156767076,0,0x0,8
tick,0x7ffa19ab1d94,156782950,0,0x0,8
tick,0x7ffa19ab1d94,156798377,0,0x0,8
tick,0x7ffa19ab1d94,156814308,0,0x0,8
tick,0x7ffa19ab1d94,156829581,0,0x0,8
tick,0x7ffa19ab1d94,156844765,0,0x0,8
tick,0x7ffa19ab1d94,156860560,0,0x0,8
tick,0x7ffa19ab1d94,156875959,0,0x0,8
tick,0x7ffa19ab1d94,156891229,0,0x0,8
tick,0x7ffa19ab1d94,156906549,0,0x0,8
tick,0x7ffa19ab1d94,156922661,0,0x0,8
tick,0x7ffa19ab1d94,156938349,0,0x0,8
tick,0x7ffa19ab1d94,156953668,0,0x0,8
tick,0x7ffa19ab1d94,156968680,0,0x0,8
tick,0x7ffa19ab1d94,156984349,0,0x0,8
tick,0x7ffa19ab1d94,157000449,0,0x0,8
tick,0x7ffa19ab1d94,157016417,0,0x0,8
tick,0x7ffa19ab1d94,157031785,0,0x0,8
tick,0x7ffa19ab1d94,157047728,0,0x0,8
tick,0x7ffa19ab1d94,157063826,0,0x0,8
tick,0x7ffa19ab1d94,157079486,0,0x0,8
tick,0x7ffa19ab1d94,157094442,0,0x0,8
tick,0x7ffa19ab1d94,157110270,0,0x0,8
tick,0x7ffa19ab1d94,157126230,0,0x0,8
tick,0x7ffa19ab1d94,157141725,0,0x0,8
tick,0x7ffa19ab1d94,157157211,0,0x0,8
tick,0x7ffa19ab1d94,157172875,0,0x0,8
tick,0x7ffa19ab1d94,157189432,0,0x0,8
tick,0x7ffa19ab1d94,157205013,0,0x0,8
tick,0x7ffa19ab1d94,157221271,0,0x0,8
tick,0x7ffa19ab1d94,157235900,0,0x0,8
tick,0x7ffa19ab1d94,157251773,0,0x0,8
tick,0x7ffa19ab1d94,157266968,0,0x0,8
tick,0x7ffa19ab1d94,157283085,0,0x0,8
tick,0x7ffa19ab1d94,157298553,0,0x0,8
tick,0x7ffa19ab1d94,157313690,0,0x0,8
tick,0x7ffa19ab1d94,157329650,0,0x0,8
tick,0x7ffa19ab1d94,157345037,0,0x0,8
tick,0x7ffa19ab1d94,157360278,0,0x0,8
tick,0x7ffa19ab1d94,157375949,0,0x0,8
tick,0x7ffa19ab1d94,157392845,0,0x0,8
tick,0x7ffa19ab1d94,157407227,0,0x0,8
tick,0x7ffa19ab1d94,157422703,0,0x0,8
tick,0x7ffa19ab1d94,157438854,0,0x0,8
tick,0x7ffa19ab1d94,157453986,0,0x0,8
tick,0x7ffa19ab1d94,157469202,0,0x0,8
tick,0x7ffa19ab1d94,157484421,0,0x0,8
tick,0x7ffa19ab1d94,157499772,0,0x0,8
tick,0x7ffa19ab1d94,157514376,0,0x0,8
tick,0x7ffa19ab1d94,157529649,0,0x0,8
tick,0x7ffa19ab1d94,157545604,0,0x0,8
tick,0x7ffa19ab1d94,157560869,0,0x0,8
tick,0x7ffa19ab1d94,157576419,0,0x0,8
tick,0x7ffa19ab1d94,157592547,0,0x0,8
tick,0x7ffa19ab1d94,157607399,0,0x0,8
tick,0x7ffa19ab1d94,157622830,0,0x0,8
tick,0x7ffa19ab1d94,157637821,0,0x0,8
tick,0x7ffa19ab1d94,157653449,0,0x0,8
tick,0x7ffa19ab1d94,157668598,0,0x0,8
tick,0x7ffa19ab1d94,157684143,0,0x0,8
tick,0x7ffa19ab1d94,157699378,0,0x0,8
tick,0x7ffa19ab1d94,157715108,0,0x0,8
tick,0x7ffa19ab1d94,157730662,0,0x0,8
tick,0x7ffa19ab1d94,157745899,0,0x0,8
tick,0x7ffa19ab1d94,157761855,0,0x0,8
tick,0x7ffa19ab1d94,157777819,0,0x0,8
tick,0x7ffa19ab1d94,157794140,0,0x0,8
tick,0x7ffa19ab1d94,157809672,0,0x0,8
tick,0x7ffa19ab1d94,157825586,0,0x0,8
tick,0x7ffa19ab1d94,157841463,0,0x0,8
tick,0x7ffa19ab1d94,157857041,0,0x0,8
tick,0x7ffa19ab1d94,157872861,0,0x0,8
tick,0x7ffa19ab1d94,157887779,0,0x0,8
tick,0x7ffa19ab1d94,157905798,0,0x0,8
tick,0x7ffa19ab1d94,157920450,0,0x0,8
tick,0x7ffa19ab1d94,157936097,0,0x0,8
tick,0x7ffa19ab1d94,157951989,0,0x0,8
tick,0x7ffa19ab1d94,157967412,0,0x0,8
tick,0x7ffa19ab1d94,157983405,0,0x0,8
tick,0x7ffa19ab1d94,157999925,0,0x0,8
tick,0x7ffa19ab1d94,158014918,0,0x0,8
tick,0x7ffa19ab1d94,158030737,0,0x0,8
tick,0x7ffa19ab1d94,158046766,0,0x0,8
tick,0x7ffa19ab1d94,158062954,0,0x0,8
tick,0x7ffa19ab1d94,158079681,0,0x0,8
tick,0x7ffa19ab1d94,158095002,0,0x0,8
tick,0x7ffa19ab1d94,158109469,0,0x0,8
tick,0x7ffa19ab1d94,158124688,0,0x0,8
tick,0x7ffa19ab1d94,158140977,0,0x0,8
tick,0x7ffa19ab1d94,158157190,0,0x0,8
tick,0x7ffa19ab1d94,158173462,0,0x0,8
tick,0x7ffa19ab1d94,158187624,0,0x0,8
tick,0x7ffa19ab1d94,158203967,0,0x0,8
tick,0x7ffa19ab1d94,158219376,0,0x0,8
tick,0x7ffa19ab1d94,158235328,0,0x0,8
tick,0x7ffa19ab1d94,158251616,0,0x0,8
tick,0x7ffa19ab1d94,158266591,0,0x0,8
tick,0x7ffa19ab1d94,158282605,0,0x0,8
tick,0x7ffa19ab1d94,158298078,0,0x0,8
tick,0x7ffa19ab1d94,158313828,0,0x0,8
tick,0x7ffa19ab1d94,158328904,0,0x0,8
tick,0x7ffa19ab1d94,158345152,0,0x0,8
tick,0x7ffa19ab1d94,158359499,0,0x0,8
tick,0x7ffa19ab1d94,158374936,0,0x0,8
tick,0x7ffa19ab1d94,158390613,0,0x0,8
tick,0x7ffa19ab1d94,158406312,0,0x0,8
tick,0x7ffa19ab1d94,158421753,0,0x0,8
tick,0x7ffa19ab1d94,158437479,0,0x0,8
tick,0x7ffa19ab1d94,158453040,0,0x0,8
tick,0x7ffa19ab1d94,158467827,0,0x0,8
tick,0x7ffa19ab1d94,158483091,0,0x0,8
tick,0x7ffa19ab1d94,158498636,0,0x0,8
tick,0x7ffa19ab1d94,158513899,0,0x0,8
tick,0x7ffa19ab1d94,158530009,0,0x0,8
tick,0x7ffa19ab1d94,158544969,0,0x0,8
tick,0x7ffa19ab1d94,158560363,0,0x0,8
tick,0x7ffa19ab1d94,158576647,0,0x0,8
tick,0x7ffa19ab1d94,158591601,0,0x0,8
tick,0x7ffa19ab1d94,158607286,0,0x0,8
tick,0x7ffa19ab1d94,158622754,0,0x0,8
tick,0x7ffa19ab1d94,158637917,0,0x0,8
tick,0x7ffa19ab1d94,158653681,0,0x0,8
tick,0x7ffa19ab1d94,158670335,0,0x0,8
tick,0x7ffa19ab1d94,158685077,0,0x0,8
tick,0x7ffa19ab1d94,158700560,0,0x0,8
tick,0x7ffa19ab1d94,158716113,0,0x0,8
tick,0x7ffa19ab1d94,158731709,0,0x0,8
tick,0x7ffa19ab1d94,158747462,0,0x0,8
tick,0x7ffa19ab1d94,158763583,0,0x0,8
tick,0x7ffa19ab1d94,158778554,0,0x0,8
tick,0x7ffa19ab1d94,158793762,0,0x0,8
tick,0x7ffa19ab1d94,158809693,0,0x0,8
tick,0x7ffa19ab1d94,158824908,0,0x0,8
tick,0x7ffa19ab1d94,158840069,0,0x0,8
tick,0x7ffa19ab1d94,158855500,0,0x0,8
tick,0x7ffa19ab1d94,158871370,0,0x0,8
tick,0x7ffa19ab1d94,158887221,0,0x0,8
tick,0x7ffa19ab1d94,158901823,0,0x0,8
tick,0x7ffa19ab1d94,158917844,0,0x0,8
tick,0x7ffa19ab1d94,158933690,0,0x0,8
tick,0x7ffa19ab1d94,158949868,0,0x0,8
tick,0x7ffa19ab1d94,158965392,0,0x0,8
tick,0x7ffa19ab1d94,158981446,0,0x0,8
tick,0x7ffa19ab1d94,158998023,0,0x0,8
tick,0x7ffa19ab1d94,159023044,0,0x0,8
tick,0x7ffa19ab1d94,159034469,0,0x0,8
tick,0x7ffa19ab1d94,159047735,0,0x0,8
tick,0x7ffa19ab1d94,159066104,0,0x0,8
tick,0x7ffa19ab1d94,159078380,0,0x0,8
tick,0x7ffa19ab1d94,159092989,0,0x0,8
tick,0x7ffa19ab1d94,159108601,0,0x0,8
tick,0x7ffa19ab1d94,159129507,0,0x0,8
tick,0x7ffa19ab1d94,159139393,0,0x0,8
tick,0x7ffa19ab1d94,159161894,0,0x0,8
tick,0x7ffa19ab1d94,159173127,0,0x0,8
tick,0x7ffa19ab1d94,159187676,0,0x0,8
tick,0x7ffa19ab1d94,159198023,0,0x0,8
tick,0x7ffa19ab1d94,159214943,0,0x0,8
tick,0x7ffa19ab1d94,159229543,0,0x0,8
tick,0x7ffa19ab1d94,159244951,0,0x0,8
tick,0x7ffa19ab1d94,159261644,0,0x0,8
tick,0x7ffa19ab1d94,159277604,0,0x0,8
tick,0x7ffa19ab1d94,159292708,0,0x0,8
tick,0x7ffa19ab1d94,159308953,0,0x0,8
tick,0x7ffa19ab1d94,159323918,0,0x0,8
tick,0x7ffa19ab1d94,159339461,0,0x0,8
tick,0x7ffa19ab1d94,159354864,0,0x0,8
tick,0x7ffa19ab1d94,159370062,0,0x0,8
tick,0x7ffa19ab1d94,159387330,0,0x0,8
tick,0x7ffa19ab1d94,159401023,0,0x0,8
tick,0x7ffa19ab1d94,159416949,0,0x0,8
tick,0x7ffa19ab1d94,159432544,0,0x0,8
tick,0x7ffa19ab1d94,159447197,0,0x0,8
tick,0x7ffa19ab1d94,159463855,0,0x0,8
tick,0x7ffa19ab1d94,159479019,0,0x0,8
tick,0x7ffa19ab1d94,159494929,0,0x0,8
tick,0x7ffa19ab1d94,159511490,0,0x0,8
tick,0x7ffa19ab1d94,159527137,0,0x0,8
tick,0x7ffa19ab1d94,159543103,0,0x0,8
tick,0x7ffa19ab1d94,159558577,0,0x0,8
tick,0x7ffa19ab1d94,159574089,0,0x0,8
tick,0x7ffa19ab1d94,159590335,0,0x0,8
tick,0x7ffa19ab1d94,159605366,0,0x0,8
tick,0x7ffa19ab1d94,159621448,0,0x0,8
tick,0x7ffa19ab1d94,159636708,0,0x0,8
tick,0x7ffa19ab1d94,159653881,0,0x0,8
tick,0x7ffa19ab1d94,159668835,0,0x0,8
tick,0x7ffa19ab1d94,159683685,0,0x0,8
tick,0x7ffa19ab1d94,159699537,0,0x0,8
tick,0x7ffa19ab1d94,159715537,0,0x0,8
tick,0x7ffa19ab1d94,159731754,0,0x0,8
tick,0x7ffa19ab1d94,159747763,0,0x0,8
tick,0x7ffa19ab1d94,159763531,0,0x0,8
tick,0x7ffa19ab1d94,159778782,0,0x0,8
tick,0x7ffa19ab1d94,159793753,0,0x0,8
tick,0x7ffa19ab1d94,159809746,0,0x0,8
tick,0x7ffa19ab1d94,159825083,0,0x0,8
tick,0x7ffa19ab1d94,159841062,0,0x0,8
tick,0x7ffa19ab1d94,159856224,0,0x0,8
tick,0x7ffa19ab1d94,159871994,0,0x0,8
tick,0x7ffa19ab1d94,159887772,0,0x0,8
tick,0x7ffa19ab1d94,159903726,0,0x0,8
tick,0x7ffa19ab1d94,159920920,0,0x0,8
tick,0x7ffa19ab1d94,159935230,0,0x0,8
tick,0x7ffa19ab1d94,159950013,0,0x0,8
tick,0x7ffa19ab1d94,159965282,0,0x0,8
tick,0x7ffa19ab1d94,159982008,0,0x0,8
tick,0x7ffa19ab1d94,159999853,0,0x0,8
tick,0x7ffa19ab1d94,160013029,0,0x0,8
tick,0x7ffa19ab1d94,160028080,0,0x0,8
tick,0x7ffa19ab1d94,160044193,0,0x0,8
tick,0x7ffa19ab1d94,160060207,0,0x0,8
tick,0x7ffa19ab1d94,160075750,0,0x0,8
tick,0x7ffa19ab1d94,160091025,0,0x0,8
tick,0x7ffa19ab1d94,160106664,0,0x0,8
tick,0x7ffa19ab1d94,160122800,0,0x0,8
tick,0x7ffa19ab1d94,160138354,0,0x0,8
tick,0x7ffa19ab1d94,160153789,0,0x0,8
tick,0x7ffa19ab1d94,160173719,0,0x0,8
tick,0x7ffa19ab1d94,160184779,0,0x0,8
tick,0x7ffa19ab1d94,160199446,0,0x0,8
tick,0x7ffa19ab1d94,160215354,0,0x0,8
tick,0x7ffa19ab1d94,160231927,0,0x0,8
tick,0x7ffa19ab1d94,160247389,0,0x0,8
tick,0x7ffa19ab1d94,160262783,0,0x0,8
tick,0x7ffa19ab1d94,160278901,0,0x0,8
tick,0x7ffa19ab1d94,160294080,0,0x0,8
tick,0x7ffa19ab1d94,160309179,0,0x0,8
tick,0x7ffa19ab1d94,160324562,0,0x0,8
tick,0x7ffa19ab1d94,160340129,0,0x0,8
tick,0x7ffa19ab1d94,160356504,0,0x0,8
tick,0x7ffa19ab1d94,160371814,0,0x0,8
tick,0x7ffa19ab1d94,160397695,0,0x0,8
tick,0x7ffa19ab1d94,160402871,0,0x0,8
tick,0x7ffa19ab1d94,160418869,0,0x0,8
tick,0x7ffa19ab1d94,160435982,0,0x0,8
tick,0x7ffa19ab1d94,160450401,0,0x0,8
tick,0x7ffa19ab1d94,160465691,0,0x0,8
tick,0x7ffa19ab1d94,160483500,0,0x0,8
tick,0x7ffa19ab1d94,160497720,0,0x0,8
tick,0x7ffa19ab1d94,160513515,0,0x0,8
tick,0x7ffa19ab1d94,160528096,0,0x0,8
tick,0x7ffa19ab1d94,160544907,0,0x0,8
tick,0x7ffa19ab1d94,160571346,0,0x0,8
tick,0x7ffa19ab1d94,160575024,0,0x0,8
tick,0x7ffa19ab1d94,160597478,0,0x0,8
tick,0x7ffa19ab1d94,160608466,0,0x0,8
tick,0x7ffa19ab1d94,160626267,0,0x0,8
tick,0x7ffa19ab1d94,160641966,0,0x0,8
tick,0x7ffa19ab1d94,160657061,0,0x0,8
tick,0x7ffa19ab1d94,160674567,0,0x0,8
tick,0x7ffa19ab1d94,160688326,0,0x0,8
tick,0x7ffa19ab1d94,160700354,0,0x0,8
tick,0x7ffa19ab1d94,160728175,0,0x0,8
tick,0x7ffa19ab1d94,160739766,0,0x0,8
tick,0x7ffa19ab1d94,160746327,0,0x0,8
tick,0x7ffa19ab1d94,160765602,0,0x0,8
tick,0x7ffa19ab1d94,160781306,0,0x0,8
tick,0x7ffa19ab1d94,160793667,0,0x0,8
tick,0x7ffa19ab1d94,160809116,0,0x0,8
tick,0x7ffa19ab1d94,160825821,0,0x0,8
tick,0x7ffa19ab1d94,160843035,0,0x0,8
tick,0x7ffa19ab1d94,160858910,0,0x0,8
tick,0x7ffa19ab1d94,160874094,0,0x0,8
tick,0x7ffa19ab1d94,160890106,0,0x0,8
tick,0x7ffa19ab1d94,160906993,0,0x0,8
tick,0x7ffa19ab1d94,160926042,0,0x0,8
tick,0x7ffa19ab1d94,160942638,0,0x0,8
tick,0x7ffa19ab1d94,160950175,0,0x0,8
tick,0x7ffa19ab1d94,160965818,0,0x0,8
tick,0x7ffa19ab1d94,160981394,0,0x0,8
tick,0x7ffa19ab1d94,160996985,0,0x0,8
tick,0x7ffa19ab1d94,161013200,0,0x0,8
tick,0x7ffa19ab1d94,161031568,0,0x0,8
tick,0x7ffa19ab1d94,161043129,0,0x0,8
tick,0x7ffa19ab1d94,161058915,0,0x0,8
tick,0x7ffa19ab1d94,161074253,0,0x0,8
tick,0x7ffa19ab1d94,161089637,0,0x0,8
tick,0x7ffa19ab1d94,161105169,0,0x0,8
tick,0x7ffa19ab1d94,161120875,0,0x0,8
tick,0x7ffa19ab1d94,161136735,0,0x0,8
tick,0x7ffa19ab1d94,161153250,0,0x0,8
tick,0x7ffa19ab1d94,161170579,0,0x0,8
tick,0x7ffa19ab1d94,161186092,0,0x0,8
tick,0x7ffa19ab1d94,161203549,0,0x0,8
tick,0x7ffa19ab1d94,161220050,0,0x0,8
tick,0x7ffa19ab1d94,161233442,0,0x0,8
tick,0x7ffa19ab1d94,161248832,0,0x0,8
tick,0x7ffa19ab1d94,161264959,0,0x0,8
tick,0x7ffa19ab1d94,161281557,0,0x0,8
tick,0x7ffa19ab1d94,161297237,0,0x0,8
tick,0x7ffa19ab1d94,161312725,0,0x0,8
tick,0x7ffa19ab1d94,161328572,0,0x0,8
tick,0x7ffa19ab1d94,161343851,0,0x0,8
tick,0x7ffa19ab1d94,161359691,0,0x0,8
tick,0x7ffa19ab1d94,161374942,0,0x0,8
tick,0x7ffa19ab1d94,161390479,0,0x0,8
tick,0x7ffa19ab1d94,161405586,0,0x0,8
tick,0x7ffa19ab1d94,161423271,0,0x0,8
tick,0x7ffa19ab1d94,161437941,0,0x0,8
tick,0x7ffa19ab1d94,161463156,0,0x0,8
tick,0x7ffa19ab1d94,161468582,0,0x0,8
tick,0x7ffa19ab1d94,161484545,0,0x0,8
tick,0x7ffa19ab1d94,161502127,0,0x0,8
tick,0x7ffa19ab1d94,161515685,0,0x0,8
tick,0x7ffa19ab1d94,161531851,0,0x0,8
tick,0x7ffa19ab1d94,161547663,0,0x0,8
tick,0x7ffa19ab1d94,161563363,0,0x0,8
tick,0x7ffa19ab1d94,161578912,0,0x0,8
tick,0x7ffa19ab1d94,161594399,0,0x0,8
tick,0x7ffa19ab1d94,161619255,0,0x0,8
tick,0x7ffa19ab1d94,161625876,0,0x0,8
tick,0x7ffa19ab1d94,161640610,0,0x0,8
tick,0x7ffa19ab1d94,161656019,0,0x0,8
tick,0x7ffa19ab1d94,161671822,0,0x0,8
tick,0x7ffa19ab1d94,161687928,0,0x0,8
tick,0x7ffa19ab1d94,161703514,0,0x0,8
tick,0x7ffa19ab1d94,161718708,0,0x0,8
tick,0x7ffa19ab1d94,161734891,0,0x0,8
tick,0x7ffa19ab1d94,161752348,0,0x0,8
tick,0x7ffa19ab1d94,161765780,0,0x0,8
tick,0x7ffa19ab1d94,161781874,0,0x0,8
tick,0x7ffa19ab1d94,161797753,0,0x0,8
tick,0x7ffa19ab1d94,161813277,0,0x0,8
tick,0x7ffa19ab1d94,161828680,0,0x0,8
tick,0x7ffa19ab1d94,161844297,0,0x0,8
tick,0x7ffa19ab1d94,161860213,0,0x0,8
tick,0x7ffa19ab1d94,161875121,0,0x0,8
tick,0x7ffa19ab1d94,161890447,0,0x0,8
tick,0x7ffa19ab1d94,161905976,0,0x0,8
tick,0x7ffa19ab1d94,161921572,0,0x0,8
tick,0x7ffa19ab1d94,161937030,0,0x0,8
tick,0x7ffa19ab1d94,161953027,0,0x0,8
tick,0x7ffa19ab1d94,161968435,0,0x0,8
tick,0x7ffa19ab1d94,161985128,0,0x0,8
tick,0x7ffa19ab1d94,161998601,0,0x0,8
tick,0x7ffa19ab1d94,162014323,0,0x0,8
tick,0x7ffa19ab1d94,162029483,0,0x0,8
tick,0x7ffa19ab1d94,162044811,0,0x0,8
tick,0x7ffa19ab1d94,162059569,0,0x0,8
tick,0x7ffa19ab1d94,162075356,0,0x0,8
tick,0x7ffa19ab1d94,162091587,0,0x0,8
tick,0x7ffa19ab1d94,162107369,0,0x0,8
tick,0x7ffa19ab1d94,162122475,0,0x0,8
tick,0x7ffa19ab1d94,162137533,0,0x0,8
tick,0x7ffa19ab1d94,162152337,0,0x0,8
tick,0x7ffa19ab1d94,162168176,0,0x0,8
tick,0x7ffa19ab1d94,162183788,0,0x0,8
tick,0x7ffa19ab1d94,162198339,0,0x0,8
tick,0x7ffa19ab1d94,162213661,0,0x0,8
tick,0x7ffa19ab1d94,162229291,0,0x0,8
tick,0x7ffa19ab1d94,162244723,0,0x0,8
tick,0x7ffa19ab1d94,162260321,0,0x0,8
tick,0x7ffa19ab1d94,162275774,0,0x0,8
tick,0x7ffa19ab1d94,162291991,0,0x0,8
tick,0x7ffa19ab1d94,162308061,0,0x0,8
tick,0x7ffa19ab1d94,162323542,0,0x0,8
tick,0x7ffa19ab1d94,162338640,0,0x0,8
tick,0x7ffa19ab1d94,162353964,0,0x0,8
tick,0x7ffa19ab1d94,162369683,0,0x0,8
tick,0x7ffa19ab1d94,162385965,0,0x0,8
tick,0x7ffa19ab1d94,162401908,0,0x0,8
tick,0x7ffa19ab1d94,162418620,0,0x0,8
tick,0x7ffa19ab1d94,162433838,0,0x0,8
tick,0x7ffa19ab1d94,162448706,0,0x0,8
tick,0x7ffa19ab1d94,162465393,0,0x0,8
tick,0x7ffa19ab1d94,162480431,0,0x0,8
tick,0x7ffa19ab1d94,162498391,0,0x0,8
tick,0x7ffa19ab1d94,162511885,0,0x0,8
tick,0x7ffa19ab1d94,162526841,0,0x0,8
tick,0x7ffa19ab1d94,162569538,0,0x0,8
tick,0x7ffa19ab1d94,162578836,0,0x0,8
tick,0x7ffa19ab1d94,162589889,0,0x0,8
tick,0x7ffa19ab1d94,162605267,0,0x0,8
tick,0x7ffa19ab1d94,162623174,0,0x0,8
tick,0x7ffa19ab1d94,162638734,0,0x0,8
tick,0x7ffa19ab1d94,162652653,0,0x0,8
tick,0x7ffa19ab1d94,162666709,0,0x0,8
tick,0x7ffa19ab1d94,162683559,0,0x0,8
tick,0x7ffa19ab1d94,162698290,0,0x0,8
tick,0x7ffa19ab1d94,162714364,0,0x0,8
tick,0x7ffa19ab1d94,162735161,0,0x0,8
tick,0x7ffa19ab1d94,162746498,0,0x0,8
tick,0x7ffa19ab1d94,162762143,0,0x0,8
tick,0x7ffa19ab1d94,162778898,0,0x0,8
tick,0x7ffa19ab1d94,162795931,0,0x0,8
tick,0x7ffa19ab1d94,162808252,0,0x0,8
tick,0x7ffa19ab1d94,162825954,0,0x0,8
tick,0x7ffa19ab1d94,162839997,0,0x0,8
tick,0x7ffa19ab1d94,162855430,0,0x0,8
tick,0x7ffa19ab1d94,162870807,0,0x0,8
tick,0x7ffa19ab1d94,162887311,0,0x0,8
tick,0x7ffa19ab1d94,162906534,0,0x0,8
tick,0x7ffa19ab1d94,162924745,0,0x0,8
tick,0x7ffa19ab1d94,162937956,0,0x0,8
tick,0x7ffa19ab1d94,162949674,0,0x0,8
tick,0x7ffa19ab1d94,162968948,0,0x0,8
tick,0x7ffa19ab1d94,162981407,0,0x0,8
tick,0x7ffa19ab1d94,163001602,0,0x0,8
tick,0x7ffa19ab1d94,163014553,0,0x0,8
tick,0x7ffa19ab1d94,163027300,0,0x0,8
tick,0x7ffa19ab1d94,163049350,0,0x0,8
tick,0x7ffa19ab1d94,163060154,0,0x0,8
tick,0x7ffa19ab1d94,163074593,0,0x0,8
tick,0x7ffa19ab1d94,163088998,0,0x0,8
tick,0x7ffa19ab1d94,163104379,0,0x0,8
tick,0x7ffa19ab1d94,163119514,0,0x0,8
tick,0x7ffa19ab1d94,163134691,0,0x0,8
tick,0x7ffa19ab1d94,163150472,0,0x0,8
tick,0x7ffa19ab1d94,163165751,0,0x0,8
tick,0x7ffa19ab1d94,163181663,0,0x0,8
tick,0x7ffa19ab1d94,163196949,0,0x0,8
tick,0x7ffa19ab1d94,163213467,0,0x0,8
tick,0x7ffa19ab1d94,163229206,0,0x0,8
tick,0x7ffa19ab1d94,163244567,0,0x0,8
tick,0x7ffa19ab1d94,163259677,0,0x0,8
tick,0x7ffa19ab1d94,163280648,0,0x0,8
tick,0x7ffa19ab1d94,163293788,0,0x0,8
tick,0x7ffa19ab1d94,163313536,0,0x0,8
tick,0x7ffa19ab1d94,163329646,0,0x0,8
tick,0x7ffa19ab1d94,163338872,0,0x0,8
tick,0x7ffa19ab1d94,163354119,0,0x0,8
tick,0x7ffa19ab1d94,163388225,0,0x0,8
tick,0x7ffa19ab1d94,163401159,0,0x0,8
tick,0x7ffa19ab1d94,163418991,0,0x0,8
tick,0x7ffa19ab1d94,163430822,0,0x0,8
tick,0x7ffa19ab1d94,163446256,0,0x0,8
tick,0x7ffa19ab1d94,163461896,0,0x0,8
tick,0x7ffa19ab1d94,163478962,0,0x0,8
tick,0x7ffa19ab1d94,163494954,0,0x0,8
tick,0x7ffa19ab1d94,163509122,0,0x0,8
tick,0x7ffa19ab1d94,163526039,0,0x0,8
tick,0x7ffa19ab1d94,163540522,0,0x0,8
tick,0x7ffa19ab1d94,163559190,0,0x0,8
tick,0x7ffa19ab1d94,163571310,0,0x0,8
tick,0x7ffa19ab1d94,163589012,0,0x0,8
tick,0x7ffa19ab1d94,163603921,0,0x0,8
tick,0x7ffa19ab1d94,163619532,0,0x0,8
tick,0x7ffa19ab1d94,163635184,0,0x0,8
tick,0x7ffa19ab1d94,163651178,0,0x0,8
tick,0x7ffa19ab1d94,163667203,0,0x0,8
tick,0x7ffa19ab1d94,163685242,0,0x0,8
tick,0x7ffa19ab1d94,163700189,0,0x0,8
tick,0x7ffa19ab1d94,163718679,0,0x0,8
tick,0x7ffa19ab1d94,163737355,0,0x0,8
tick,0x7ffa19ab1d94,163750928,0,0x0,8
tick,0x7ffa19ab1d94,163760963,0,0x0,8
tick,0x7ffa19ab1d94,163783757,0,0x0,8
tick,0x7ffa19ab1d94,163796865,0,0x0,8
tick,0x7ffa19ab1d94,163816138,0,0x0,8
tick,0x7ffa19ab1d94,163825637,0,0x0,8
tick,0x7ffa19ab1d94,163843468,0,0x0,8
tick,0x7ffa19ab1d94,163857413,0,0x0,8
tick,0x7ffa19ab1d94,163872288,0,0x0,8
tick,0x7ffa19ab1d94,163888160,0,0x0,8
tick,0x7ffa19ab1d94,163900579,0,0x0,8
tick,0x7ffa19ab1d94,163916638,0,0x0,8
tick,0x7ffa19ab1d94,163930491,0,0x0,8
tick,0x7ffa19ab1d94,163946470,0,0x0,8
tick,0x7ffa19ab1d94,163961575,0,0x0,8
tick,0x7ffa19ab1d94,163978714,0,0x0,8
tick,0x7ffa19ab1d94,163991583,0,0x0,8
tick,0x7ffa19ab1d94,164007111,0,0x0,8
tick,0x7ffa19ab1d94,164022201,0,0x0,8
tick,0x7ffa19ab1d94,164043328,0,0x0,8
tick,0x7ffa19ab1d94,164054177,0,0x0,8
tick,0x7ffa19ab1d94,164069740,0,0x0,8
tick,0x7ffa19ab1d94,164090111,0,0x0,8
tick,0x7ffa19ab1d94,164102055,0,0x0,8
tick,0x7ffa19ab1d94,164118653,0,0x0,8
tick,0x7ffa19ab1d94,164133209,0,0x0,8
tick,0x7ffa19ab1d94,164149218,0,0x0,8
tick,0x7ffa19ab1d94,164166630,0,0x0,8
tick,0x7ffa19ab1d94,164181996,0,0x0,8
tick,0x7ffa19ab1d94,164199444,0,0x0,8
tick,0x7ffa19ab1d94,164212177,0,0x0,8
tick,0x7ffa19ab1d94,164228529,0,0x0,8
tick,0x7ffa19ab1d94,164246595,0,0x0,8
tick,0x7ffa19ab1d94,164272972,0,0x0,8
tick,0x7ffa19ab1d94,164293056,0,0x0,8
tick,0x7ffa19ab1d94,164307792,0,0x0,8
tick,0x7ffa19ab1d94,164323647,0,0x0,8
tick,0x7ffa19ab1d94,164340965,0,0x0,8
tick,0x7ffa19ab1d94,164355804,0,0x0,8
tick,0x7ffa19ab1d94,164370288,0,0x0,8
tick,0x7ffa19ab1d94,164388561,0,0x0,8
tick,0x7ffa19ab1d94,164401124,0,0x0,8
tick,0x7ffa19ab1d94,164417458,0,0x0,8
tick,0x7ffa19ab1d94,164434849,0,0x0,8
tick,0x7ffa19ab1d94,164452985,0,0x0,8
tick,0x7ffa19ab1d94,164465975,0,0x0,8
tick,0x7ffa19ab1d94,164483722,0,0x0,8
tick,0x7ffa19ab1d94,164498955,0,0x0,8
tick,0x7ffa19ab1d94,164520268,0,0x0,8
tick,0x7ffa19ab1d94,164530145,0,0x0,8
tick,0x7ffa19ab1d94,164544825,0,0x0,8
tick,0x7ffa19ab1d94,164560686,0,0x0,8
tick,0x7ffa19ab1d94,164574184,0,0x0,8
tick,0x7ffa19ab1d94,164590243,0,0x0,8
tick,0x7ffa19ab1d94,164604109,0,0x0,8
tick,0x7ffa19ab1d94,164620744,0,0x0,8
tick,0x7ffa19ab1d94,164636248,0,0x0,8
tick,0x7ffa19ab1d94,164650305,0,0x0,8
tick,0x7ffa19ab1d94,164668716,0,0x0,8
tick,0x7ffa19ab1d94,164684180,0,0x0,8
tick,0x7ffa19ab1d94,164698136,0,0x0,8
tick,0x7ffa19ab1d94,164716262,0,0x0,8
tick,0x7ffa19ab1d94,164729402,0,0x0,8
tick,0x7ffa19ab1d94,164749289,0,0x0,8
tick,0x7ffa19ab1d94,164761002,0,0x0,8
tick,0x7ffa19ab1d94,164776996,0,0x0,8
tick,0x7ffa19ab1d94,164803264,0,0x0,8
tick,0x7ffa19ab1d94,164807394,0,0x0,8
tick,0x7ffa19ab1d94,164824392,0,0x0,8
tick,0x7ffa19ab1d94,164839599,0,0x0,8
tick,0x7ffa19ab1d94,164858047,0,0x0,8
tick,0x7ffa19ab1d94,164871421,0,0x0,8
tick,0x7ffa19ab1d94,164886546,0,0x0,8
tick,0x7ffa19ab1d94,164904850,0,0x0,8
tick,0x7ffa19ab1d94,164919857,0,0x0,8
tick,0x7ffa19ab1d94,164933814,0,0x0,8
tick,0x7ffa19ab1d94,164949138,0,0x0,8
tick,0x7ffa19ab1d94,164965872,0,0x0,8
tick,0x7ffa19ab1d94,164984187,0,0x0,8
tick,0x7ffa19ab1d94,164995132,0,0x0,8
tick,0x7ffa19ab1d94,165008994,0,0x0,8
tick,0x7ffa19ab1d94,165025075,0,0x0,8
tick,0x7ffa19ab1d94,165043739,0,0x0,8
tick,0x7ffa19ab1d94,165056781,0,0x0,8
tick,0x7ffa19ab1d94,165075783,0,0x0,8
tick,0x7ffa19ab1d94,165089988,0,0x0,8
tick,0x7ffa19ab1d94,165102980,0,0x0,8
tick,0x7ffa19ab1d94,165118249,0,0x0,8
tick,0x7ffa19ab1d94,165133072,0,0x0,8
tick,0x7ffa19ab1d94,165150440,0,0x0,8
tick,0x7ffa19ab1d94,165164548,0,0x0,8
tick,0x7ffa19ab1d94,165183158,0,0x0,8
tick,0x7ffa19ab1d94,165196010,0,0x0,8
tick,0x7ffa19ab1d94,165211800,0,0x0,8
tick,0x7ffa19ab1d94,165228087,0,0x0,8
tick,0x7ffa19ab1d94,165249583,0,0x0,8
tick,0x7ffa19ab1d94,165260858,0,0x0,8
tick,0x7ffa19ab1d94,165275439,0,0x0,8
tick,0x7ffa19ab1d94,165295352,0,0x0,8
tick,0x7ffa19ab1d94,165306973,0,0x0,8
tick,0x7ffa19ab1d94,165322598,0,0x0,8
tick,0x7ffa19ab1d94,165338305,0,0x0,8
tick,0x7ffa19ab1d94,165353113,0,0x0,8
tick,0x7ffa19ab1d94,165369583,0,0x0,8
tick,0x7ffa19ab1d94,165388451,0,0x0,8
tick,0x7ffa19ab1d94,165419970,0,0x0,8
tick,0x7ffa19ab1d94,165440204,0,0x0,8
tick,0x7ffa19ab1d94,165460406,0,0x0,8
tick,0x7ffa19ab1d94,165467267,0,0x0,8
tick,0x7ffa19ab1d94,165478065,0,0x0,8
tick,0x7ffa19ab1d94,165493857,0,0x0,8
tick,0x7ffa19ab1d94,165509380,0,0x0,8
tick,0x7ffa19ab1d94,165524703,0,0x0,8
tick,0x7ffa19ab1d94,165540813,0,0x0,8
tick,0x7ffa19ab1d94,165555245,0,0x0,8
tick,0x7ffa19ab1d94,165571744,0,0x0,8
tick,0x7ffa19ab1d94,165586152,0,0x0,8
tick,0x7ffa19ab1d94,165603984,0,0x0,8
tick,0x7ffa19ab1d94,165617237,0,0x0,8
tick,0x7ffa19ab1d94,165634796,0,0x0,8
tick,0x7ffa19ab1d94,165649981,0,0x0,8
tick,0x7ffa19ab1d94,165665594,0,0x0,8
tick,0x7ffa19ab1d94,165686172,0,0x0,8
tick,0x7ffa19ab1d94,165702108,0,0x0,8
tick,0x7ffa19ab1d94,165713672,0,0x0,8
tick,0x7ffa19ab1d94,165728370,0,0x0,8
tick,0x7ffa19ab1d94,165743810,0,0x0,8
tick,0x7ffa19ab1d94,165758123,0,0x0,8
tick,0x7ffa19ab1d94,165774422,0,0x0,8
tick,0x7ffa19ab1d94,165789865,0,0x0,8
tick,0x7ffa19ab1d94,165806789,0,0x0,8
tick,0x7ffa19ab1d94,165821030,0,0x0,8
tick,0x7ffa19ab1d94,165837712,0,0x0,8
tick,0x7ffa19ab1d94,165851828,0,0x0,8
tick,0x7ffa19ab1d94,165867155,0,0x0,8
tick,0x7ffa19ab1d94,165882956,0,0x0,8
tick,0x7ffa19ab1d94,165900248,0,0x0,8
tick,0x7ffa19ab1d94,165913747,0,0x0,8
tick,0x7ffa19ab1d94,165930540,0,0x0,8
tick,0x7ffa19ab1d94,165945087,0,0x0,8
tick,0x7ffa19ab1d94,165964194,0,0x0,8
tick,0x7ffa19ab1d94,165976444,0,0x0,8
tick,0x7ffa19ab1d94,165993920,0,0x0,8
tick,0x7ffa19ab1d94,166007520,0,0x0,8
tick,0x7ffa19ab1d94,166024234,0,0x0,8
tick,0x7ffa19ab1d94,166039330,0,0x0,8
tick,0x7ffa19ab1d94,166061364,0,0x0,8
tick,0x7ffa19ab1d94,166070050,0,0x0,8
tick,0x7ffa19ab1d94,166089018,0,0x0,8
tick,0x7ffa19ab1d94,166102717,0,0x0,8
tick,0x7ffa19ab1d94,166116323,0,0x0,8
tick,0x7ffa19ab1d94,166131971,0,0x0,8
tick,0x7ffa19ab1d94,166147848,0,0x0,8
tick,0x7ffa19ab1d94,166164055,0,0x0,8
tick,0x7ffa19ab1d94,166179803,0,0x0,8
tick,0x7ffa19ab1d94,166194136,0,0x0,8
tick,0x7ffa19ab1d94,166210439,0,0x0,8
tick,0x7ffa19ab1d94,166226310,0,0x0,8
tick,0x7ffa19ab1d94,166242406,0,0x0,8
tick,0x7ffa19ab1d94,166265794,0,0x0,8
tick,0x7ffa19ab1d94,166275521,0,0x0,8
tick,0x7ffa19ab1d94,166293666,0,0x0,8
tick,0x7ffa19ab1d94,166305183,0,0x0,8
tick,0x7ffa19ab1d94,166320756,0,0x0,8
tick,0x7ffa19ab1d94,166336837,0,0x0,8
tick,0x7ffa19ab1d94,166353784,0,0x0,8
tick,0x7ffa19ab1d94,166370266,0,0x0,8
tick,0x7ffa19ab1d94,166385617,0,0x0,8
tick,0x7ffa19ab1d94,166401130,0,0x0,8
tick,0x7ffa19ab1d94,166416966,0,0x0,8
tick,0x7ffa19ab1d94,166434033,0,0x0,8
tick,0x7ffa19ab1d94,166449044,0,0x0,8
tick,0x7ffa19ab1d94,166464925,0,0x0,8
tick,0x7ffa19ab1d94,166480324,0,0x0,8
tick,0x7ffa19ab1d94,166498383,0,0x0,8
tick,0x7ffa19ab1d94,166521597,0,0x0,8
tick,0x7ffa19ab1d94,166534412,0,0x0,8
tick,0x7ffa19ab1d94,166561006,0,0x0,8
tick,0x7ffa19ab1d94,166575100,0,0x0,8
tick,0x7ffa19ab1d94,166591489,0,0x0,8
tick,0x7ffa19ab1d94,166605438,0,0x0,8
tick,0x7ffa19ab1d94,166622100,0,0x0,8
tick,0x7ffa19ab1d94,166637704,0,0x0,8
tick,0x7ffa19ab1d94,166652965,0,0x0,8
tick,0x7ffa19ab1d94,166669417,0,0x0,8
tick,0x7ffa19ab1d94,166685063,0,0x0,8
tick,0x7ffa19ab1d94,166699440,0,0x0,8
tick,0x7ffa19ab1d94,166716553,0,0x0,8
tick,0x7ffa19ab1d94,166731741,0,0x0,8
tick,0x7ffa19ab1d94,166749379,0,0x0,8
tick,0x7ffa19ab1d94,166762205,0,0x0,8
tick,0x7ffa19ab1d94,166777967,0,0x0,8
tick,0x7ffa19ab1d94,166793419,0,0x0,8
tick,0x7ffa19ab1d94,166808011,0,0x0,8
tick,0x7ffa19ab1d94,166825987,0,0x0,8
tick,0x7ffa19ab1d94,166839246,0,0x0,8
tick,0x7ffa19ab1d94,166856755,0,0x0,8
tick,0x7ffa19ab1d94,166871022,0,0x0,8
tick,0x7ffa19ab1d94,166889633,0,0x0,8
tick,0x7ffa19ab1d94,166905047,0,0x0,8
tick,0x7ffa19ab1d94,166918492,0,0x0,8
tick,0x7ffa19ab1d94,166937723,0,0x0,8
tick,0x7ffa19ab1d94,166951040,0,0x0,8
tick,0x7ffa19ab1d94,166969137,0,0x0,8
tick,0x7ffa19ab1d94,166986245,0,0x0,8
tick,0x7ffa19ab1d94,166997430,0,0x0,8
tick,0x7ffa19ab1d94,167019043,0,0x0,8
tick,0x7ffa19ab1d94,167027653,0,0x0,8
tick,0x7ffa19ab1d94,167049361,0,0x0,8
tick,0x7ffa19ab1d94,167057349,0,0x0,8
tick,0x7ffa19ab1d94,167074067,0,0x0,8
tick,0x7ffa19ab1d94,167089922,0,0x0,8
tick,0x7ffa19ab1d94,167105787,0,0x0,8
tick,0x7ffa19ab1d94,167121939,0,0x0,8
tick,0x7ffa19ab1d94,167135986,0,0x0,8
tick,0x7ffa19ab1d94,167153169,0,0x0,8
tick,0x7ffa19ab1d94,167166812,0,0x0,8
tick,0x7ffa19ab1d94,167181841,0,0x0,8
tick,0x7ffa19ab1d94,167197879,0,0x0,8
tick,0x7ffa19ab1d94,167214743,0,0x0,8
tick,0x7ffa19ab1d94,167234233,0,0x0,8
tick,0x7ffa19ab1d94,167249937,0,0x0,8
tick,0x7ffa19ab1d94,167260961,0,0x0,8
tick,0x7ffa19ab1d94,167275729,0,0x0,8
tick,0x7ffa19ab1d94,167291633,0,0x0,8
tick,0x7ffa19ab1d94,167307121,0,0x0,8
tick,0x7ffa19ab1d94,167323316,0,0x0,8
tick,0x7ffa19ab1d94,167337776,0,0x0,8
tick,0x7ffa19ab1d94,167353277,0,0x0,8
tick,0x7ffa19ab1d94,167369257,0,0x0,8
tick,0x7ffa19ab1d94,167386117,0,0x0,8
tick,0x7ffa19ab1d94,167401540,0,0x0,8
tick,0x7ffa19ab1d94,167418127,0,0x0,8
tick,0x7ffa19ab1d94,167431957,0,0x0,8
tick,0x7ffa19ab1d94,167448979,0,0x0,8
tick,0x7ffa19ab1d94,167465744,0,0x0,8
tick,0x7ffa19ab1d94,167482077,0,0x0,8
tick,0x7ffa19ab1d94,167497286,0,0x0,8
tick,0x7ffa19ab1d94,167510133,0,0x0,8
tick,0x7ffa19ab1d94,167526803,0,0x0,8
tick,0x7ffa19ab1d94,167543048,0,0x0,8
tick,0x7ffa19ab1d94,167558541,0,0x0,8
tick,0x7ffa19ab1d94,167574464,0,0x0,8
tick,0x7ffa19ab1d94,167588425,0,0x0,8
tick,0x7ffa19ab1d94,167603616,0,0x0,8
tick,0x7ffa19ab1d94,167619618,0,0x0,8
tick,0x7ffa19ab1d94,167636011,0,0x0,8
tick,0x7ffa19ab1d94,167650954,0,0x0,8
tick,0x7ffa19ab1d94,167667457,0,0x0,8
tick,0x7ffa19ab1d94,167683898,0,0x0,8
tick,0x7ffa19ab1d94,167700253,0,0x0,8
tick,0x7ffa19ab1d94,167715065,0,0x0,8
tick,0x7ffa19ab1d94,167729722,0,0x0,8
tick,0x7ffa19ab1d94,167747809,0,0x0,8
tick,0x7ffa19ab1d94,167763802,0,0x0,8
tick,0x7ffa19ab1d94,167776383,0,0x0,8
tick,0x7ffa19ab1d94,167792129,0,0x0,8
tick,0x7ffa19ab1d94,167808267,0,0x0,8
tick,0x7ffa19ab1d94,167823563,0,0x0,8
tick,0x7ffa19ab1d94,167837231,0,0x0,8
tick,0x7ffa19ab1d94,167854088,0,0x0,8
tick,0x7ffa19ab1d94,167868246,0,0x0,8
tick,0x7ffa19ab1d94,167886405,0,0x0,8
tick,0x7ffa19ab1d94,167900477,0,0x0,8
tick,0x7ffa19ab1d94,167915683,0,0x0,8
tick,0x7ffa19ab1d94,167931534,0,0x0,8
tick,0x7ffa19ab1d94,167947069,0,0x0,8
tick,0x7ffa19ab1d94,167963282,0,0x0,8
tick,0x7ffa19ab1d94,167979784,0,0x0,8
tick,0x7ffa19ab1d94,167993602,0,0x0,8
tick,0x7ffa19ab1d94,168009011,0,0x0,8
tick,0x7ffa19ab1d94,168024878,0,0x0,8
tick,0x7ffa19ab1d94,168041629,0,0x0,8
tick,0x7ffa19ab1d94,168057393,0,0x0,8
tick,0x7ffa19ab1d94,168073501,0,0x0,8
tick,0x7ffa19ab1d94,168089665,0,0x0,8
tick,0x7ffa19ab1d94,168104672,0,0x0,8
tick,0x7ffa19ab1d94,168119464,0,0x0,8
tick,0x7ffa19ab1d94,168135510,0,0x0,8
tick,0x7ffa19ab1d94,168151151,0,0x0,8
tick,0x7ffa19ab1d94,168167305,0,0x0,8
tick,0x7ffa19ab1d94,168183070,0,0x0,8
tick,0x7ffa19ab1d94,168199133,0,0x0,8
tick,0x7ffa19ab1d94,168215264,0,0x0,8
tick,0x7ffa19ab1d94,168231024,0,0x0,8
tick,0x7ffa19ab1d94,168249829,0,0x0,8
tick,0x7ffa19ab1d94,168263694,0,0x0,8
tick,0x7ffa19ab1d94,168283313,0,0x0,8
tick,0x7ffa19ab1d94,168295738,0,0x0,8
tick,0x7ffa19ab1d94,168311966,0,0x0,8
tick,0x7ffa19ab1d94,168326159,0,0x0,8
tick,0x7ffa19ab1d94,168343365,0,0x0,8
tick,0x7ffa19ab1d94,168358143,0,0x0,8
tick,0x7ffa19ab1d94,168374690,0,0x0,8
tick,0x7ffa19ab1d94,168389228,0,0x0,8
tick,0x7ffa19ab1d94,168405488,0,0x0,8
tick,0x7ffa19ab1d94,168420838,0,0x0,8
tick,0x7ffa19ab1d94,168437861,0,0x0,8
tick,0x7ffa19ab1d94,168455047,0,0x0,8
tick,0x7ffa19ab1d94,168467851,0,0x0,8
tick,0x7ffa19ab1d94,168484448,0,0x0,8
tick,0x7ffa19ab1d94,168499662,0,0x0,8
tick,0x7ffa19ab1d94,168514294,0,0x0,8
tick,0x7ffa19ab1d94,168529955,0,0x0,8
tick,0x7ffa19ab1d94,168545729,0,0x0,8
tick,0x7ffa19ab1d94,168561997,0,0x0,8
tick,0x7ffa19ab1d94,168578119,0,0x0,8
tick,0x7ffa19ab1d94,168594191,0,0x0,8
tick,0x7ffa19ab1d94,168608393,0,0x0,8
tick,0x7ffa19ab1d94,168624030,0,0x0,8
tick,0x7ffa19ab1d94,168639300,0,0x0,8
tick,0x7ffa19ab1d94,168655197,0,0x0,8
tick,0x7ffa19ab1d94,168669812,0,0x0,8
tick,0x7ffa19ab1d94,168685592,0,0x0,8
tick,0x7ffa19ab1d94,168700778,0,0x0,8
tick,0x7ffa19ab1d94,168717361,0,0x0,8
tick,0x7ffa19ab1d94,168732094,0,0x0,8
tick,0x7ffa19ab1d94,168748268,0,0x0,8
tick,0x7ffa19ab1d94,168764530,0,0x0,8
tick,0x7ffa19ab1d94,168778937,0,0x0,8
tick,0x7ffa19ab1d94,168795410,0,0x0,8
tick,0x7ffa19ab1d94,168810750,0,0x0,8
tick,0x7ffa19ab1d94,168825366,0,0x0,8
tick,0x7ffa19ab1d94,168841918,0,0x0,8
tick,0x7ffa19ab1d94,168855432,0,0x0,8
tick,0x7ffa19ab1d94,168871658,0,0x0,8
tick,0x7ffa19ab1d94,168886406,0,0x0,8
tick,0x7ffa19ab1d94,168903339,0,0x0,8
tick,0x7ffa19ab1d94,168917020,0,0x0,8
tick,0x7ffa19ab1d94,168933392,0,0x0,8
tick,0x7ffa19ab1d94,168947357,0,0x0,8
tick,0x7ffa19ab1d94,168964116,0,0x0,8
tick,0x7ffa19ab1d94,168979623,0,0x0,8
tick,0x7ffa19ab1d94,168994892,0,0x0,8
tick,0x7ffa19ab1d94,169009190,0,0x0,8
tick,0x7ffa19ab1d94,169024100,0,0x0,8
tick,0x7ffa19ab1d94,169040253,0,0x0,8
tick,0x7ffa19ab1d94,169055626,0,0x0,8
tick,0x7ffa19ab1d94,169071248,0,0x0,8
tick,0x7ffa19ab1d94,169086418,0,0x0,8
tick,0x7ffa19ab1d94,169102074,0,0x0,8
tick,0x7ffa19ab1d94,169119710,0,0x0,8
tick,0x7ffa19ab1d94,169132729,0,0x0,8
tick,0x7ffa19ab1d94,169148187,0,0x0,8
tick,0x7ffa19ab1d94,169163154,0,0x0,8
tick,0x7ffa19ab1d94,169179367,0,0x0,8
tick,0x7ffa19ab1d94,169196730,0,0x0,8
tick,0x7ffa19ab1d94,169212362,0,0x0,8
tick,0x7ffa19ab1d94,169225865,0,0x0,8
tick,0x7ffa19ab1d94,169241958,0,0x0,8
tick,0x7ffa19ab1d94,169258534,0,0x0,8
tick,0x7ffa19ab1d94,169274197,0,0x0,8
tick,0x7ffa19ab1d94,169289911,0,0x0,8
tick,0x7ffa19ab1d94,169309182,0,0x0,8
tick,0x7ffa19ab1d94,169321881,0,0x0,8
tick,0x7ffa19ab1d94,169340518,0,0x0,8
tick,0x7ffa19ab1d94,169355441,0,0x0,8
tick,0x7ffa19ab1d94,169371105,0,0x0,8
tick,0x7ffa19ab1d94,169404422,0,0x0,8
tick,0x7ffa19ab1d94,169418852,0,0x0,8
tick,0x7ffa19ab1d94,169435440,0,0x0,8
tick,0x7ffa19ab1d94,169448148,0,0x0,8
tick,0x7ffa19ab1d94,169463443,0,0x0,8
tick,0x7ffa19ab1d94,169480500,0,0x0,8
tick,0x7ffa19ab1d94,169498886,0,0x0,8
tick,0x7ffa19ab1d94,169512721,0,0x0,8
tick,0x7ffa19ab1d94,169526299,0,0x0,8
tick,0x7ffa19ab1d94,169546231,0,0x0,8
tick,0x7ffa19ab1d94,169558228,0,0x0,8
tick,0x7ffa19ab1d94,169573037,0,0x0,8
tick,0x7ffa19ab1d94,169587568,0,0x0,8
tick,0x7ffa19ab1d94,169603873,0,0x0,8
tick,0x7ffa19ab1d94,169618592,0,0x0,8
tick,0x7ffa19ab1d94,169633613,0,0x0,8
tick,0x7ffa19ab1d94,169649582,0,0x0,8
tick,0x7ffa19ab1d94,169665495,0,0x0,8
tick,0x7ffa19ab1d94,169682219,0,0x0,8
tick,0x7ffa19ab1d94,169696536,0,0x0,8
tick,0x7ffa19ab1d94,169711517,0,0x0,8
tick,0x7ffa19ab1d94,169729164,0,0x0,8
tick,0x7ffa19ab1d94,169745025,0,0x0,8
tick,0x7ffa19ab1d94,169761188,0,0x0,8
tick,0x7ffa19ab1d94,169778289,0,0x0,8
tick,0x7ffa19ab1d94,169794516,0,0x0,8
tick,0x7ffa19ab1d94,169807919,0,0x0,8
tick,0x7ffa19ab1d94,169824722,0,0x0,8
tick,0x7ffa19ab1d94,169839430,0,0x0,8
tick,0x7ffa19ab1d94,169856462,0,0x0,8
tick,0x7ffa19ab1d94,169870739,0,0x0,8
tick,0x7ffa19ab1d94,169886527,0,0x0,8
tick,0x7ffa19ab1d94,169903045,0,0x0,8
tick,0x7ffa19ab1d94,169917601,0,0x0,8
tick,0x7ffa19ab1d94,169933014,0,0x0,8
tick,0x7ffa19ab1d94,169947033,0,0x0,8
tick,0x7ffa19ab1d94,169963272,0,0x0,8
tick,0x7ffa19ab1d94,169979891,0,0x0,8
tick,0x7ffa19ab1d94,169993827,0,0x0,8
tick,0x7ffa19ab1d94,170012224,0,0x0,8
tick,0x7ffa19ab1d94,170026355,0,0x0,8
tick,0x7ffa19ab1d94,170041839,0,0x0,8
tick,0x7ffa19ab1d94,170057441,0,0x0,8
tick,0x7ffa19ab1d94,170074626,0,0x0,8
tick,0x7ffa19ab1d94,170089793,0,0x0,8
tick,0x7ffa19ab1d94,170105641,0,0x0,8
tick,0x7ffa19ab1d94,170120794,0,0x0,8
tick,0x7ffa19ab1d94,170137391,0,0x0,8
tick,0x7ffa19ab1d94,170153132,0,0x0,8
tick,0x7ffa19ab1d94,170168825,0,0x0,8
tick,0x7ffa19ab1d94,170184453,0,0x0,8
tick,0x7ffa19ab1d94,170200892,0,0x0,8
tick,0x7ffa19ab1d94,170215945,0,0x0,8
tick,0x7ffa19ab1d94,170234172,0,0x0,8
tick,0x7ffa19ab1d94,170249547,0,0x0,8
tick,0x7ffa19ab1d94,170266930,0,0x0,8
tick,0x7ffa19ab1d94,170283145,0,0x0,8
tick,0x7ffa19ab1d94,170309614,0,0x0,8
tick,0x7ffa19ab1d94,170335526,0,0x0,8
tick,0x7ffa19ab1d94,170352256,0,0x0,8
tick,0x7ffa19ab1d94,170361628,0,0x0,8
tick,0x7ffa19ab1d94,170375877,0,0x0,8
tick,0x7ffa19ab1d94,170389295,0,0x0,8
tick,0x7ffa19ab1d94,170403927,0,0x0,8
tick,0x7ffa19ab1d94,170451792,0,0x0,8
tick,0x7ffa19ab1d94,170479696,0,0x0,8
tick,0x7ffa19ab1d94,170483881,0,0x0,8
tick,0x7ffa19ab1d94,170511578,0,0x0,8
tick,0x7ffa19ab1d94,170514752,0,0x0,8
tick,0x7ffa19ab1d94,170530232,0,0x0,8
tick,0x7ffa19ab1d94,170548773,0,0x0,8
tick,0x7ffa19ab1d94,170564245,0,0x0,8
tick,0x7ffa19ab1d94,170580112,0,0x0,8
tick,0x7ffa19ab1d94,170600855,0,0x0,8
tick,0x7ffa19ab1d94,170611235,0,0x0,8
tick,0x7ffa19ab1d94,170630444,0,0x0,8
tick,0x7ffa19ab1d94,170652753,0,0x0,8
tick,0x7ffa19ab1d94,170659722,0,0x0,8
tick,0x7ffa19ab1d94,170678013,0,0x0,8
tick,0x7ffa19ab1d94,170712341,0,0x0,8
tick,0x7ffa19ab1d94,170722312,0,0x0,8
tick,0x7ffa19ab1d94,170739924,0,0x0,8
tick,0x7ffa19ab1d94,170751748,0,0x0,8
tick,0x7ffa19ab1d94,170770433,0,0x0,8
tick,0x7ffa19ab1d94,170795151,0,0x0,8
tick,0x7ffa19ab1d94,170801705,0,0x0,8
tick,0x7ffa19ab1d94,170823280,0,0x0,8
tick,0x7ffa19ab1d94,170841136,0,0x0,8
tick,0x7ffa19ab1d94,170848113,0,0x0,8
tick,0x7ffa19ab1d94,170870243,0,0x0,8
tick,0x7ffa19ab1d94,170897619,0,0x0,8
tick,0x7ffa19ab1d94,170917260,0,0x0,8
tick,0x7ffa19ab1d94,170944354,0,0x0,8
tick,0x7ffa19ab1d94,170960912,0,0x0,8
tick,0x7ffa19ab1d94,170977118,0,0x0,8
tick,0x7ffa19ab1d94,170994642,0,0x0,8
tick,0x7ffa19ab1d94,171000519,0,0x0,8
tick,0x7ffa19ab1d94,171018836,0,0x0,8
tick,0x7ffa19ab1d94,171031497,0,0x0,8
tick,0x7ffa19ab1d94,171047757,0,0x0,8
tick,0x7ffa19ab1d94,171071223,0,0x0,8
tick,0x7ffa19ab1d94,171079060,0,0x0,8
tick,0x7ffa19ab1d94,171096565,0,0x0,8
tick,0x7ffa19ab1d94,171110292,0,0x0,8
tick,0x7ffa19ab1d94,171126334,0,0x0,8
tick,0x7ffa19ab1d94,171140296,0,0x0,8
tick,0x7ffa19ab1d94,171155476,0,0x0,8
tick,0x7ffa19ab1d94,171171683,0,0x0,8
tick,0x7ffa19ab1d94,171186329,0,0x0,8
tick,0x7ffa19ab1d94,171204247,0,0x0,8
tick,0x7ffa19ab1d94,171219650,0,0x0,8
tick,0x7ffa19ab1d94,171248589,0,0x0,8
tick,0x7ffa19ab1d94,171264982,0,0x0,8
tick,0x7ffa19ab1d94,171283427,0,0x0,8
tick,0x7ffa19ab1d94,171296472,0,0x0,8
tick,0x7ffa19ab1d94,171313926,0,0x0,8
tick,0x7ffa19ab1d94,171349188,0,0x0,8
tick,0x7ffa19ab1d94,171413239,0,0x0,8
tick,0x7ffa19ab1d94,171501886,0,0x0,8
tick,0x7ffa19ab1d94,171564356,0,0x0,8
tick,0x7ffa19ab1d94,171611145,0,0x0,8
tick,0x7ffa19ab1d94,171665914,0,0x0,8
tick,0x7ffa19ab1d94,171679073,0,0x0,8
tick,0x7ffa19ab1d94,171693187,0,0x0,8
tick,0x7ffa19ab1d94,171700500,0,0x0,8
tick,0x7ffa19ab1d94,171720240,0,0x0,8
tick,0x7ffa19ab1d94,171739846,0,0x0,8
tick,0x7ffa19ab1d94,171750862,0,0x0,8
tick,0x7ffa19ab1d94,171767869,0,0x0,8
tick,0x7ffa19ab1d94,171785777,0,0x0,8
tick,0x7ffa19ab1d94,171796994,0,0x0,8
tick,0x7ffa19ab1d94,171809441,0,0x0,8
tick,0x7ffa19ab1d94,171824855,0,0x0,8
tick,0x7ffa19ab1d94,171841117,0,0x0,8
tick,0x7ffa19ab1d94,171854945,0,0x0,8
tick,0x7ffa19ab1d94,171870507,0,0x0,8
tick,0x7ffa19ab1d94,171885594,0,0x0,8
tick,0x7ffa19ab1d94,171903933,0,0x0,8
tick,0x7ffa19ab1d94,171917345,0,0x0,8
tick,0x7ffa19ab1d94,171932749,0,0x0,8
tick,0x7ffa19ab1d94,171948142,0,0x0,8
tick,0x7ffa19ab1d94,171964943,0,0x0,8
tick,0x7ffa19ab1d94,171978721,0,0x0,8
tick,0x7ffa19ab1d94,171993862,0,0x0,8
tick,0x7ffa19ab1d94,172009281,0,0x0,8
tick,0x7ffa19ab1d94,172025090,0,0x0,8
tick,0x7ffa19ab1d94,172041648,0,0x0,8
tick,0x7ffa19ab1d94,172058520,0,0x0,8
tick,0x7ffa19ab1d94,172071712,0,0x0,8
tick,0x7ffa19ab1d94,172091327,0,0x0,8
tick,0x7ffa19ab1d94,172105936,0,0x0,8
tick,0x7ffa19ab1d94,172118526,0,0x0,8
tick,0x7ffa19ab1d94,172134286,0,0x0,8
tick,0x7ffa19ab1d94,172149226,0,0x0,8
tick,0x7ffa19ab1d94,172165465,0,0x0,8
tick,0x7ffa19ab1d94,172180307,0,0x0,8
tick,0x7ffa19ab1d94,172195729,0,0x0,8
tick,0x7ffa19ab1d94,172211505,0,0x0,8
tick,0x7ffa19ab1d94,172227266,0,0x0,8
tick,0x7ffa19ab1d94,172242855,0,0x0,8
tick,0x7ffa19ab1d94,172258527,0,0x0,8
tick,0x7ffa19ab1d94,172274887,0,0x0,8
tick,0x7ffa19ab1d94,172289138,0,0x0,8
tick,0x7ffa19ab1d94,172305066,0,0x0,8
tick,0x7ffa19ab1d94,172320941,0,0x0,8
tick,0x7ffa19ab1d94,172335702,0,0x0,8
tick,0x7ffa19ab1d94,172350910,0,0x0,8
tick,0x7ffa19ab1d94,172366796,0,0x0,8
tick,0x7ffa19ab1d94,172382260,0,0x0,8
tick,0x7ffa19ab1d94,172398343,0,0x0,8
tick,0x7ffa19ab1d94,172413272,0,0x0,8
tick,0x7ffa19ab1d94,172429399,0,0x0,8
tick,0x7ffa19ab1d94,172444565,0,0x0,8
tick,0x7ffa19ab1d94,172460051,0,0x0,8
tick,0x7ffa19ab1d94,172475129,0,0x0,8
tick,0x7ffa19ab1d94,172491787,0,0x0,8
tick,0x7ffa19ab1d94,172507255,0,0x0,8
tick,0x7ffa19ab1d94,172522078,0,0x0,8
tick,0x7ffa19ab1d94,172538125,0,0x0,8
tick,0x7ffa19ab1d94,172553769,0,0x0,8
tick,0x7ffa19ab1d94,172569823,0,0x0,8
tick,0x7ffa19ab1d94,172585133,0,0x0,8
tick,0x7ffa19ab1d94,172600125,0,0x0,8
tick,0x7ffa19ab1d94,172615763,0,0x0,8
tick,0x7ffa19ab1d94,172631814,0,0x0,8
tick,0x7ffa19ab1d94,172647221,0,0x0,8
tick,0x7ffa19ab1d94,172662967,0,0x0,8
tick,0x7ffa19ab1d94,172678070,0,0x0,8
tick,0x7ffa19ab1d94,172693707,0,0x0,8
tick,0x7ffa19ab1d94,172710228,0,0x0,8
tick,0x7ffa19ab1d94,172724621,0,0x0,8
tick,0x7ffa19ab1d94,172740620,0,0x0,8
tick,0x7ffa19ab1d94,172756684,0,0x0,8
tick,0x7ffa19ab1d94,172774704,0,0x0,8
tick,0x7ffa19ab1d94,172787898,0,0x0,8
tick,0x7ffa19ab1d94,172803271,0,0x0,8
tick,0x7ffa19ab1d94,172818501,0,0x0,8
tick,0x7ffa19ab1d94,172834138,0,0x0,8
tick,0x7ffa19ab1d94,172849549,0,0x0,8
tick,0x7ffa19ab1d94,172864703,0,0x0,8
tick,0x7ffa19ab1d94,172880423,0,0x0,8
tick,0x7ffa19ab1d94,172896343,0,0x0,8
tick,0x7ffa19ab1d94,172912047,0,0x0,8
tick,0x7ffa19ab1d94,172927532,0,0x0,8
tick,0x7ffa19ab1d94,172943443,0,0x0,8
tick,0x7ffa19ab1d94,172958882,0,0x0,8
tick,0x7ffa19ab1d94,172974025,0,0x0,8
tick,0x7ffa19ab1d94,172991665,0,0x0,8
tick,0x7ffa19ab1d94,173005914,0,0x0,8
tick,0x7ffa19ab1d94,173029866,0,0x0,8
tick,0x7ffa19ab1d94,173037770,0,0x0,8
tick,0x7ffa19ab1d94,173052323,0,0x0,8
tick,0x7ffa19ab1d94,173069511,0,0x0,8
tick,0x7ffa19ab1d94,173099919,0,0x0,8
tick,0x7ffa19ab1d94,173114482,0,0x0,8
tick,0x7ffa19ab1d94,173131525,0,0x0,8
tick,0x7ffa19ab1d94,173148434,0,0x0,8
tick,0x7ffa19ab1d94,173183457,0,0x0,8
tick,0x7ffa19ab1d94,173196732,0,0x0,8
tick,0x7ffa19ab1d94,173211977,0,0x0,8
tick,0x7ffa19ab1d94,173229977,0,0x0,8
tick,0x7ffa19ab1d94,173241778,0,0x0,8
tick,0x7ffa19ab1d94,173254890,0,0x0,8
tick,0x7ffa19ab1d94,173278131,0,0x0,8
tick,0x7ffa19ab1d94,173295874,0,0x0,8
tick,0x7ffa19ab1d94,173311025,0,0x0,8
tick,0x7ffa19ab1d94,173329599,0,0x0,8
tick,0x7ffa19ab1d94,173343732,0,0x0,8
tick,0x7ffa19ab1d94,173351317,0,0x0,8
tick,0x7ffa19ab1d94,173368624,0,0x0,8
tick,0x7ffa19ab1d94,173384846,0,0x0,8
tick,0x7ffa19ab1d94,173396300,0,0x0,8
tick,0x7ffa19ab1d94,173411695,0,0x0,8
tick,0x7ffa19ab1d94,173427380,0,0x0,8
tick,0x7ffa19ab1d94,173445283,0,0x0,8
tick,0x7ffa19ab1d94,173460681,0,0x0,8
tick,0x7ffa19ab1d94,173474052,0,0x0,8
tick,0x7ffa19ab1d94,173493832,0,0x0,8
tick,0x7ffa19ab1d94,173505145,0,0x0,8
tick,0x7ffa19ab1d94,173520359,0,0x0,8
tick,0x7ffa19ab1d94,173541691,0,0x0,8
tick,0x7ffa19ab1d94,173553748,0,0x0,8
tick,0x7ffa19ab1d94,173567805,0,0x0,8
tick,0x7ffa19ab1d94,173583445,0,0x0,8
tick,0x7ffa19ab1d94,173599818,0,0x0,8
tick,0x7ffa19ab1d94,173614285,0,0x0,8
tick,0x7ffa19ab1d94,173630091,0,0x0,8
tick,0x7ffa19ab1d94,173645226,0,0x0,8
tick,0x7ffa19ab1d94,173660907,0,0x0,8
tick,0x7ffa19ab1d94,173676396,0,0x0,8
tick,0x7ffa19ab1d94,173692182,0,0x0,8
tick,0x7ffa19ab1d94,173707250,0,0x0,8
tick,0x7ffa19ab1d94,173724447,0,0x0,8
tick,0x7ffa19ab1d94,173738486,0,0x0,8
tick,0x7ffa19ab1d94,173754202,0,0x0,8
tick,0x7ffa19ab1d94,173769330,0,0x0,8
tick,0x7ffa19ab1d94,173785455,0,0x0,8
tick,0x7ffa19ab1d94,173800858,0,0x0,8
tick,0x7ffa19ab1d94,173815880,0,0x0,8
tick,0x7ffa19ab1d94,173831732,0,0x0,8
tick,0x7ffa19ab1d94,173847046,0,0x0,8
tick,0x7ffa19ab1d94,173863346,0,0x0,8
tick,0x7ffa19ab1d94,173879400,0,0x0,8
tick,0x7ffa19ab1d94,173895182,0,0x0,8
tick,0x7ffa19ab1d94,173909866,0,0x0,8
tick,0x7ffa19ab1d94,173925442,0,0x0,8
tick,0x7ffa19ab1d94,173941983,0,0x0,8
tick,0x7ffa19ab1d94,173956703,0,0x0,8
tick,0x7ffa19ab1d94,173971313,0,0x0,8
tick,0x7ffa19ab1d94,173987599,0,0x0,8
tick,0x7ffa19ab1d94,174003248,0,0x0,8
tick,0x7ffa19ab1d94,174030705,0,0x0,8
tick,0x7ffa19ab1d94,174070812,0,0x0,8
tick,0x7ffa19ab1d94,174086777,0,0x0,8
tick,0x7ffa19ab1d94,174101118,0,0x0,8
tick,0x7ffa19ab1d94,174113242,0,0x0,8
tick,0x7ffa19ab1d94,174128729,0,0x0,8
tick,0x7ffa19ab1d94,174146808,0,0x0,8
tick,0x7ffa19ab1d94,174160703,0,0x0,8
tick,0x7ffa19ab1d94,174176340,0,0x0,8
tick,0x7ffa19ab1d94,174191559,0,0x0,8
tick,0x7ffa19ab1d94,174209287,0,0x0,8
tick,0x7ffa19ab1d94,174221910,0,0x0,8
tick,0x7ffa19ab1d94,174237274,0,0x0,8
tick,0x7ffa19ab1d94,174253499,0,0x0,8
tick,0x7ffa19ab1d94,174269028,0,0x0,8
tick,0x7ffa19ab1d94,174284193,0,0x0,8
tick,0x7ffa19ab1d94,174299777,0,0x0,8
tick,0x7ffa19ab1d94,174317064,0,0x0,8
tick,0x7ffa19ab1d94,174333592,0,0x0,8
tick,0x7ffa19ab1d94,174347457,0,0x0,8
tick,0x7ffa19ab1d94,174363701,0,0x0,8
tick,0x7ffa19ab1d94,174379105,0,0x0,8
tick,0x7ffa19ab1d94,174395222,0,0x0,8
tick,0x7ffa19ab1d94,174410642,0,0x0,8
tick,0x7ffa19ab1d94,174426011,0,0x0,8
tick,0x7ffa19ab1d94,174441638,0,0x0,8
tick,0x7ffa19ab1d94,174458356,0,0x0,8
tick,0x7ffa19ab1d94,174473878,0,0x0,8
tick,0x7ffa19ab1d94,174489043,0,0x0,8
tick,0x7ffa19ab1d94,174506736,0,0x0,8
tick,0x7ffa19ab1d94,174520533,0,0x0,8
tick,0x7ffa19ab1d94,174536805,0,0x0,8
tick,0x7ffa19ab1d94,174551720,0,0x0,8
tick,0x7ffa19ab1d94,174567920,0,0x0,8
tick,0x7ffa19ab1d94,174583585,0,0x0,8
tick,0x7ffa19ab1d94,174599689,0,0x0,8
tick,0x7ffa19ab1d94,174615763,0,0x0,8
tick,0x7ffa19ab1d94,174630703,0,0x0,8
tick,0x7ffa19ab1d94,174645754,0,0x0,8
tick,0x7ffa19ab1d94,174661441,0,0x0,8
tick,0x7ffa19ab1d94,174676928,0,0x0,8
tick,0x7ffa19ab1d94,174693208,0,0x0,8
tick,0x7ffa19ab1d94,174709045,0,0x0,8
tick,0x7ffa19ab1d94,174724861,0,0x0,8
tick,0x7ffa19ab1d94,174740485,0,0x0,8
tick,0x7ffa19ab1d94,174756223,0,0x0,8
tick,0x7ffa19ab1d94,174770539,0,0x0,8
tick,0x7ffa19ab1d94,174786971,0,0x0,8
tick,0x7ffa19ab1d94,174801607,0,0x0,8
tick,0x7ffa19ab1d94,174817431,0,0x0,8
tick,0x7ffa19ab1d94,174833565,0,0x0,8
tick,0x7ffa19ab1d94,174849204,0,0x0,8
tick,0x7ffa19ab1d94,174865121,0,0x0,8
tick,0x7ffa19ab1d94,174880831,0,0x0,8
tick,0x7ffa19ab1d94,174895693,0,0x0,8
tick,0x7ffa19ab1d94,174911533,0,0x0,8
tick,0x7ffa19ab1d94,174927069,0,0x0,8
tick,0x7ffa19ab1d94,174941921,0,0x0,8
tick,0x7ffa19ab1d94,174957968,0,0x0,8
tick,0x7ffa19ab1d94,174974068,0,0x0,8
tick,0x7ffa19ab1d94,174989237,0,0x0,8
tick,0x7ffa19ab1d94,175006506,0,0x0,8
tick,0x7ffa19ab1d94,175019986,0,0x0,8
tick,0x7ffa19ab1d94,175035428,0,0x0,8
tick,0x7ffa19ab1d94,175051190,0,0x0,8
tick,0x7ffa19ab1d94,175066434,0,0x0,8
tick,0x7ffa19ab1d94,175082160,0,0x0,8
tick,0x7ffa19ab1d94,175096943,0,0x0,8
tick,0x7ffa19ab1d94,175112136,0,0x0,8
tick,0x7ffa19ab1d94,175127454,0,0x0,8
tick,0x7ffa19ab1d94,175141710,0,0x0,8
tick,0x7ffa19ab1d94,175157343,0,0x0,8
tick,0x7ffa19ab1d94,175172670,0,0x0,8
tick,0x7ffa19ab1d94,175188190,0,0x0,8
tick,0x7ffa19ab1d94,175204123,0,0x0,8
tick,0x7ffa19ab1d94,175219470,0,0x0,8
tick,0x7ffa19ab1d94,175235051,0,0x0,8
tick,0x7ffa19ab1d94,175251642,0,0x0,8
tick,0x7ffa19ab1d94,175267399,0,0x0,8
tick,0x7ffa19ab1d94,175283136,0,0x0,8
tick,0x7ffa19ab1d94,175298631,0,0x0,8
tick,0x7ffa19ab1d94,175314508,0,0x0,8
tick,0x7ffa19ab1d94,175329575,0,0x0,8
tick,0x7ffa19ab1d94,175345408,0,0x0,8
tick,0x7ffa19ab1d94,175360635,0,0x0,8
tick,0x7ffa19ab1d94,175379145,0,0x0,8
tick,0x7ffa19ab1d94,175391926,0,0x0,8
tick,0x7ffa19ab1d94,175407483,0,0x0,8
tick,0x7ffa19ab1d94,175423150,0,0x0,8
tick,0x7ffa19ab1d94,175439270,0,0x0,8
tick,0x7ffa19ab1d94,175456279,0,0x0,8
tick,0x7ffa19ab1d94,175468973,0,0x0,8
tick,0x7ffa19ab1d94,175486004,0,0x0,8
tick,0x7ffa19ab1d94,175532191,0,0x0,8
tick,0x7ffa19ab1d94,175563940,0,0x0,8
tick,0x7ffa19ab1d94,175581121,0,0x0,8
tick,0x7ffa19ab1d94,175592252,0,0x0,8
tick,0x7ffa19ab1d94,175607941,0,0x0,8
tick,0x7ffa19ab1d94,175624520,0,0x0,8
tick,0x7ffa19ab1d94,175639167,0,0x0,8
tick,0x7ffa19ab1d94,175654323,0,0x0,8
tick,0x7ffa19ab1d94,175669491,0,0x0,8
tick,0x7ffa19ab1d94,175685325,0,0x0,8
tick,0x7ffa19ab1d94,175700935,0,0x0,8
tick,0x7ffa19ab1d94,175715893,0,0x0,8
tick,0x7ffa19ab1d94,175731873,0,0x0,8
tick,0x7ffa19ab1d94,175747848,0,0x0,8
tick,0x7ffa19ab1d94,175763688,0,0x0,8
tick,0x7ffa19ab1d94,175778998,0,0x0,8
tick,0x7ffa19ab1d94,175794624,0,0x0,8
tick,0x7ffa19ab1d94,175810950,0,0x0,8
tick,0x7ffa19ab1d94,175826044,0,0x0,8
tick,0x7ffa19ab1d94,175841500,0,0x0,8
tick,0x7ffa19ab1d94,175856989,0,0x0,8
tick,0x7ffa19ab1d94,175872940,0,0x0,8
tick,0x7ffa19ab1d94,175888106,0,0x0,8
tick,0x7ffa19ab1d94,175903805,0,0x0,8
tick,0x7ffa19ab1d94,175919619,0,0x0,8
tick,0x7ffa19ab1d94,175934926,0,0x0,8
tick,0x7ffa19ab1d94,175950750,0,0x0,8
tick,0x7ffa19ab1d94,175966359,0,0x0,8
tick,0x7ffa19ab1d94,175981490,0,0x0,8
tick,0x7ffa19ab1d94,175996893,0,0x0,8
tick,0x7ffa19ab1d94,176012080,0,0x0,8
tick,0x7ffa19ab1d94,176028216,0,0x0,8
tick,0x7ffa19ab1d94,176043814,0,0x0,8
tick,0x7ffa19ab1d94,176058968,0,0x0,8
tick,0x7ffa19ab1d94,176074745,0,0x0,8
tick,0x7ffa19ab1d94,176090715,0,0x0,8
tick,0x7ffa19ab1d94,176106672,0,0x0,8
tick,0x7ffa19ab1d94,176121454,0,0x0,8
tick,0x7ffa19ab1d94,176138794,0,0x0,8
tick,0x7ffa19ab1d94,176154319,0,0x0,8
tick,0x7ffa19ab1d94,176168012,0,0x0,8
tick,0x7ffa19ab1d94,176184185,0,0x0,8
tick,0x7ffa19ab1d94,176200216,0,0x0,8
tick,0x7ffa19ab1d94,176215782,0,0x0,8
tick,0x7ffa19ab1d94,176231632,0,0x0,8
tick,0x7ffa19ab1d94,176247553,0,0x0,8
tick,0x7ffa19ab1d94,176262940,0,0x0,8
tick,0x7ffa19ab1d94,176277898,0,0x0,8
tick,0x7ffa19ab1d94,176293422,0,0x0,8
tick,0x7ffa19ab1d94,176308924,0,0x0,8
tick,0x7ffa19ab1d94,176324965,0,0x0,8
tick,0x7ffa19ab1d94,176340964,0,0x0,8
tick,0x7ffa19ab1d94,176356595,0,0x0,8
tick,0x7ffa19ab1d94,176372882,0,0x0,8
tick,0x7ffa19ab1d94,176389021,0,0x0,8
tick,0x7ffa19ab1d94,176410427,0,0x0,8
tick,0x7ffa19ab1d94,176426115,0,0x0,8
tick,0x7ffa19ab1d94,176435447,0,0x0,8
tick,0x7ffa19ab1d94,176450683,0,0x0,8
tick,0x7ffa19ab1d94,176466194,0,0x0,8
tick,0x7ffa19ab1d94,176481955,0,0x0,8
tick,0x7ffa19ab1d94,176497416,0,0x0,8
tick,0x7ffa19ab1d94,176513035,0,0x0,8
tick,0x7ffa19ab1d94,176528447,0,0x0,8
tick,0x7ffa19ab1d94,176544015,0,0x0,8
tick,0x7ffa19ab1d94,176559464,0,0x0,8
tick,0x7ffa19ab1d94,176574812,0,0x0,8
tick,0x7ffa19ab1d94,176594497,0,0x0,8
tick,0x7ffa19ab1d94,176605855,0,0x0,8
tick,0x7ffa19ab1d94,176623026,0,0x0,8
tick,0x7ffa19ab1d94,176638801,0,0x0,8
tick,0x7ffa19ab1d94,176655175,0,0x0,8
tick,0x7ffa19ab1d94,176667166,0,0x0,8
tick,0x7ffa19ab1d94,176683124,0,0x0,8
tick,0x7ffa19ab1d94,176698627,0,0x0,8
tick,0x7ffa19ab1d94,176714085,0,0x0,8
tick,0x7ffa19ab1d94,176729941,0,0x0,8
tick,0x7ffa19ab1d94,176745473,0,0x0,8
tick,0x7ffa19ab1d94,176761925,0,0x0,8
tick,0x7ffa19ab1d94,176777494,0,0x0,8
tick,0x7ffa19ab1d94,176793798,0,0x0,8
tick,0x7ffa19ab1d94,176808105,0,0x0,8
tick,0x7ffa19ab1d94,176823406,0,0x0,8
tick,0x7ffa19ab1d94,176839709,0,0x0,8
tick,0x7ffa19ab1d94,176854462,0,0x0,8
tick,0x7ffa19ab1d94,176870291,0,0x0,8
tick,0x7ffa19ab1d94,176887138,0,0x0,8
tick,0x7ffa19ab1d94,176903679,0,0x0,8
tick,0x7ffa19ab1d94,176921124,0,0x0,8
tick,0x7ffa19ab1d94,176934557,0,0x0,8
tick,0x7ffa19ab1d94,176951674,0,0x0,8
tick,0x7ffa19ab1d94,176964779,0,0x0,8
tick,0x7ffa19ab1d94,176980460,0,0x0,8
tick,0x7ffa19ab1d94,176996024,0,0x0,8
tick,0x7ffa19ab1d94,177011277,0,0x0,8
tick,0x7ffa19ab1d94,177029798,0,0x0,8
tick,0x7ffa19ab1d94,177041376,0,0x0,8
tick,0x7ffa19ab1d94,177057148,0,0x0,8
tick,0x7ffa19ab1d94,177073285,0,0x0,8
tick,0x7ffa19ab1d94,177088327,0,0x0,8
tick,0x7ffa19ab1d94,177103759,0,0x0,8
tick,0x7ffa19ab1d94,177121568,0,0x0,8
tick,0x7ffa19ab1d94,177137846,0,0x0,8
tick,0x7ffa19ab1d94,177151734,0,0x0,8
tick,0x7ffa19ab1d94,177167081,0,0x0,8
tick,0x7ffa19ab1d94,177183888,0,0x0,8
tick,0x7ffa19ab1d94,177198229,0,0x0,8
tick,0x7ffa19ab1d94,177213177,0,0x0,8
tick,0x7ffa19ab1d94,177228738,0,0x0,8
tick,0x7ffa19ab1d94,177244444,0,0x0,8
tick,0x7ffa19ab1d94,177259996,0,0x0,8
tick,0x7ffa19ab1d94,177275625,0,0x0,8
tick,0x7ffa19ab1d94,177291568,0,0x0,8
tick,0x7ffa19ab1d94,177306896,0,0x0,8
tick,0x7ffa19ab1d94,177322755,0,0x0,8
tick,0x7ffa19ab1d94,177338906,0,0x0,8
tick,0x7ffa19ab1d94,177354193,0,0x0,8
tick,0x7ffa19ab1d94,177370416,0,0x0,8
tick,0x7ffa19ab1d94,177386146,0,0x0,8
tick,0x7ffa19ab1d94,177403555,0,0x0,8
tick,0x7ffa19ab1d94,177417555,0,0x0,8
tick,0x7ffa19ab1d94,177433187,0,0x0,8
tick,0x7ffa19ab1d94,177448668,0,0x0,8
tick,0x7ffa19ab1d94,177464492,0,0x0,8
tick,0x7ffa19ab1d94,177480831,0,0x0,8
tick,0x7ffa19ab1d94,177495393,0,0x0,8
tick,0x7ffa19ab1d94,177511242,0,0x0,8
tick,0x7ffa19ab1d94,177525837,0,0x0,8
tick,0x7ffa19ab1d94,177541732,0,0x0,8
tick,0x7ffa19ab1d94,177557974,0,0x0,8
tick,0x7ffa19ab1d94,177573572,0,0x0,8
tick,0x7ffa19ab1d94,177593221,0,0x0,8
tick,0x7ffa19ab1d94,177605045,0,0x0,8
tick,0x7ffa19ab1d94,177626369,0,0x0,8
tick,0x7ffa19ab1d94,177640765,0,0x0,8
tick,0x7ffa19ab1d94,177662249,0,0x0,8
tick,0x7ffa19ab1d94,177667528,0,0x0,8
tick,0x7ffa19ab1d94,177683451,0,0x0,8
tick,0x7ffa19ab1d94,177698778,0,0x0,8
tick,0x7ffa19ab1d94,177721073,0,0x0,8
tick,0x7ffa19ab1d94,177736372,0,0x0,8
tick,0x7ffa19ab1d94,177757518,0,0x0,8
tick,0x7ffa19ab1d94,177761254,0,0x0,8
tick,0x7ffa19ab1d94,177777670,0,0x0,8
tick,0x7ffa19ab1d94,177795643,0,0x0,8
tick,0x7ffa19ab1d94,177810600,0,0x0,8
tick,0x7ffa19ab1d94,177829087,0,0x0,8
tick,0x7ffa19ab1d94,177839773,0,0x0,8
tick,0x7ffa19ab1d94,177858922,0,0x0,8
tick,0x7ffa19ab1d94,177871918,0,0x0,8
tick,0x7ffa19ab1d94,177893721,0,0x0,8
tick,0x7ffa19ab1d94,177909921,0,0x0,8
tick,0x7ffa19ab1d94,177920274,0,0x0,8
tick,0x7ffa19ab1d94,177934360,0,0x0,8
tick,0x7ffa19ab1d94,177949810,0,0x0,8
tick,0x7ffa19ab1d94,177965693,0,0x0,8
tick,0x7ffa19ab1d94,177981616,0,0x0,8
tick,0x7ffa19ab1d94,177996928,0,0x0,8
tick,0x7ffa19ab1d94,178011853,0,0x0,8
tick,0x7ffa19ab1d94,178027904,0,0x0,8
tick,0x7ffa19ab1d94,178043814,0,0x0,8
tick,0x7ffa19ab1d94,178059221,0,0x0,8
tick,0x7ffa19ab1d94,178074612,0,0x0,8
tick,0x7ffa19ab1d94,178090363,0,0x0,8
tick,0x7ffa19ab1d94,178105662,0,0x0,8
tick,0x7ffa19ab1d94,178121668,0,0x0,8
tick,0x7ffa19ab1d94,178137523,0,0x0,8
tick,0x7ffa19ab1d94,178153777,0,0x0,8
tick,0x7ffa19ab1d94,178170004,0,0x0,8
tick,0x7ffa19ab1d94,178185947,0,0x0,8
tick,0x7ffa19ab1d94,178202075,0,0x0,8
tick,0x7ffa19ab1d94,178216286,0,0x0,8
tick,0x7ffa19ab1d94,178231653,0,0x0,8
tick,0x7ffa19ab1d94,178247829,0,0x0,8
tick,0x7ffa19ab1d94,178263004,0,0x0,8
tick,0x7ffa19ab1d94,178278401,0,0x0,8
tick,0x7ffa19ab1d94,178293855,0,0x0,8
tick,0x7ffa19ab1d94,178309350,0,0x0,8
tick,0x7ffa19ab1d94,178324757,0,0x0,8
tick,0x7ffa19ab1d94,178340331,0,0x0,8
tick,0x7ffa19ab1d94,178356210,0,0x0,8
tick,0x7ffa19ab1d94,178371221,0,0x0,8
tick,0x7ffa19ab1d94,178389189,0,0x0,8
tick,0x7ffa19ab1d94,178410338,0,0x0,8
tick,0x7ffa19ab1d94,178432193,0,0x0,8
tick,0x7ffa19ab1d94,178449903,0,0x0,8
tick,0x7ffa19ab1d94,178476357,0,0x0,8
tick,0x7ffa19ab1d94,178493941,0,0x0,8
tick,0x7ffa19ab1d94,178496913,0,0x0,8
tick,0x7ffa19ab1d94,178513405,0,0x0,8
tick,0x7ffa19ab1d94,178541408,0,0x0,8
tick,0x7ffa19ab1d94,178555578,0,0x0,8
tick,0x7ffa19ab1d94,178567058,0,0x0,8
tick,0x7ffa19ab1d94,178577803,0,0x0,8
tick,0x7ffa19ab1d94,178596557,0,0x0,8
tick,0x7ffa19ab1d94,178629329,0,0x0,8
tick,0x7ffa19ab1d94,178643604,0,0x0,8
tick,0x7ffa19ab1d94,178661563,0,0x0,8
tick,0x7ffa19ab1d94,178676057,0,0x0,8
tick,0x7ffa19ab1d94,178714099,0,0x0,8
tick,0x7ffa19ab1d94,178729490,0,0x0,8
tick,0x7ffa19ab1d94,178743175,0,0x0,8
tick,0x7ffa19ab1d94,178759649,0,0x0,8
tick,0x7ffa19ab1d94,178776122,0,0x0,8
tick,0x7ffa19ab1d94,178795702,0,0x0,8
tick,0x7ffa19ab1d94,178844850,0,0x0,8
tick,0x7ffa19ab1d94,178878095,0,0x0,8
tick,0x7ffa19ab1d94,178888185,0,0x0,8
tick,0x7ffa19ab1d94,178911227,0,0x0,8
tick,0x7ffa19ab1d94,178921343,0,0x0,8
tick,0x7ffa19ab1d94,178938963,0,0x0,8
tick,0x7ffa19ab1d94,178957349,0,0x0,8
tick,0x7ffa19ab1d94,178970121,0,0x0,8
tick,0x7ffa19ab1d94,178982873,0,0x0,8
tick,0x7ffa19ab1d94,178998690,0,0x0,8
tick,0x7ffa19ab1d94,179015687,0,0x0,8
tick,0x7ffa19ab1d94,179030254,0,0x0,8
tick,0x7ffa19ab1d94,179045324,0,0x0,8
tick,0x7ffa19ab1d94,179060454,0,0x0,8
tick,0x7ffa19ab1d94,179078639,0,0x0,8
tick,0x7ffa19ab1d94,179091853,0,0x0,8
tick,0x7ffa19ab1d94,179107719,0,0x0,8
tick,0x7ffa19ab1d94,179123719,0,0x0,8
tick,0x7ffa19ab1d94,179138045,0,0x0,8
tick,0x7ffa19ab1d94,179152970,0,0x0,8
tick,0x7ffa19ab1d94,179171044,0,0x0,8
tick,0x7ffa19ab1d94,179184599,0,0x0,8
tick,0x7ffa19ab1d94,179199685,0,0x0,8
tick,0x7ffa19ab1d94,179215639,0,0x0,8
tick,0x7ffa19ab1d94,179231575,0,0x0,8
tick,0x7ffa19ab1d94,179246733,0,0x0,8
tick,0x7ffa19ab1d94,179269695,0,0x0,8
tick,0x7ffa19ab1d94,179279899,0,0x0,8
tick,0x7ffa19ab1d94,179294554,0,0x0,8
tick,0x7ffa19ab1d94,179313620,0,0x0,8
tick,0x7ffa19ab1d94,179326228,0,0x0,8
tick,0x7ffa19ab1d94,179342371,0,0x0,8
tick,0x7ffa19ab1d94,179357877,0,0x0,8
tick,0x7ffa19ab1d94,179374077,0,0x0,8
tick,0x7ffa19ab1d94,179387733,0,0x0,8
tick,0x7ffa19ab1d94,179404624,0,0x0,8
tick,0x7ffa19ab1d94,179419363,0,0x0,8
tick,0x7ffa19ab1d94,179435824,0,0x0,8
tick,0x7ffa19ab1d94,179450936,0,0x0,8
tick,0x7ffa19ab1d94,179466956,0,0x0,8
tick,0x7ffa19ab1d94,179482010,0,0x0,8
tick,0x7ffa19ab1d94,179497766,0,0x0,8
tick,0x7ffa19ab1d94,179513905,0,0x0,8
tick,0x7ffa19ab1d94,179529345,0,0x0,8
tick,0x7ffa19ab1d94,179545118,0,0x0,8
tick,0x7ffa19ab1d94,179560694,0,0x0,8
tick,0x7ffa19ab1d94,179576975,0,0x0,8
tick,0x7ffa19ab1d94,179592606,0,0x0,8
tick,0x7ffa19ab1d94,179607993,0,0x0,8
tick,0x7ffa19ab1d94,179623346,0,0x0,8
tick,0x7ffa19ab1d94,179638993,0,0x0,8
tick,0x7ffa19ab1d94,179654623,0,0x0,8
tick,0x7ffa19ab1d94,179669907,0,0x0,8
tick,0x7ffa19ab1d94,179685811,0,0x0,8
tick,0x7ffa19ab1d94,179701813,0,0x0,8
tick,0x7ffa19ab1d94,179717502,0,0x0,8
tick,0x7ffa19ab1d94,179732959,0,0x0,8
tick,0x7ffa19ab1d94,179748252,0,0x0,8
tick,0x7ffa19ab1d94,179763789,0,0x0,8
tick,0x7ffa19ab1d94,179779708,0,0x0,8
tick,0x7ffa19ab1d94,179795658,0,0x0,8
tick,0x7ffa19ab1d94,179811633,0,0x0,8
tick,0x7ffa19ab1d94,179827658,0,0x0,8
tick,0x7ffa19ab1d94,179843433,0,0x0,8
tick,0x7ffa19ab1d94,179859349,0,0x0,8
tick,0x7ffa19ab1d94,179874509,0,0x0,8
tick,0x7ffa19ab1d94,179890792,0,0x0,8
tick,0x7ffa19ab1d94,179906244,0,0x0,8
tick,0x7ffa19ab1d94,179921869,0,0x0,8
tick,0x7ffa19ab1d94,179937537,0,0x0,8
tick,0x7ffa19ab1d94,179953056,0,0x0,8
tick,0x7ffa19ab1d94,179968335,0,0x0,8
tick,0x7ffa19ab1d94,179984348,0,0x0,8
tick,0x7ffa19ab1d94,180000258,0,0x0,8
tick,0x7ffa19ab1d94,180017239,0,0x0,8
tick,0x7ffa19ab1d94,180031603,0,0x0,8
tick,0x7ffa19ab1d94,180047316,0,0x0,8
tick,0x7ffa19ab1d94,180063169,0,0x0,8
tick,0x7ffa19ab1d94,180078893,0,0x0,8
tick,0x7ffa19ab1d94,180094038,0,0x0,8
tick,0x7ffa19ab1d94,180109615,0,0x0,8
tick,0x7ffa19ab1d94,180124800,0,0x0,8
tick,0x7ffa19ab1d94,180140006,0,0x0,8
tick,0x7ffa19ab1d94,180155307,0,0x0,8
tick,0x7ffa19ab1d94,180171645,0,0x0,8
tick,0x7ffa19ab1d94,180187049,0,0x0,8
tick,0x7ffa19ab1d94,180203038,0,0x0,8
tick,0x7ffa19ab1d94,180218216,0,0x0,8
tick,0x7ffa19ab1d94,180233889,0,0x0,8
tick,0x7ffa19ab1d94,180250147,0,0x0,8
tick,0x7ffa19ab1d94,180265336,0,0x0,8
tick,0x7ffa19ab1d94,180280735,0,0x0,8
tick,0x7ffa19ab1d94,180296554,0,0x0,8
tick,0x7ffa19ab1d94,180311864,0,0x0,8
tick,0x7ffa19ab1d94,180327854,0,0x0,8
tick,0x7ffa19ab1d94,180343559,0,0x0,8
tick,0x7ffa19ab1d94,180358873,0,0x0,8
tick,0x7ffa19ab1d94,180374598,0,0x0,8
tick,0x7ffa19ab1d94,180390140,0,0x0,8
tick,0x7ffa19ab1d94,180405353,0,0x0,8
tick,0x7ffa19ab1d94,180421943,0,0x0,8
tick,0x7ffa19ab1d94,180437296,0,0x0,8
tick,0x7ffa19ab1d94,180455392,0,0x0,8
tick,0x7ffa19ab1d94,180468453,0,0x0,8
tick,0x7ffa19ab1d94,180484038,0,0x0,8
tick,0x7ffa19ab1d94,180499178,0,0x0,8
tick,0x7ffa19ab1d94,180517556,0,0x0,8
tick,0x7ffa19ab1d94,180529355,0,0x0,8
tick,0x7ffa19ab1d94,180544614,0,0x0,8
tick,0x7ffa19ab1d94,180560397,0,0x0,8
tick,0x7ffa19ab1d94,180576466,0,0x0,8
tick,0x7ffa19ab1d94,180591784,0,0x0,8
tick,0x7ffa19ab1d94,180607273,0,0x0,8
tick,0x7ffa19ab1d94,180623325,0,0x0,8
tick,0x7ffa19ab1d94,180639247,0,0x0,8
tick,0x7ffa19ab1d94,180654853,0,0x0,8
tick,0x7ffa19ab1d94,180669999,0,0x0,8
tick,0x7ffa19ab1d94,180685484,0,0x0,8
tick,0x7ffa19ab1d94,180700903,0,0x0,8
tick,0x7ffa19ab1d94,180716386,0,0x0,8
tick,0x7ffa19ab1d94,180732294,0,0x0,8
tick,0x7ffa19ab1d94,180747280,0,0x0,8
tick,0x7ffa19ab1d94,180763813,0,0x0,8
tick,0x7ffa19ab1d94,180779160,0,0x0,8
tick,0x7ffa19ab1d94,180795159,0,0x0,8
tick,0x7ffa19ab1d94,180810189,0,0x0,8
tick,0x7ffa19ab1d94,180825811,0,0x0,8
tick,0x7ffa19ab1d94,180842099,0,0x0,8
tick,0x7ffa19ab1d94,180857339,0,0x0,8
tick,0x7ffa19ab1d94,180873376,0,0x0,8
tick,0x7ffa19ab1d94,180888542,0,0x0,8
tick,0x7ffa19ab1d94,180904665,0,0x0,8
tick,0x7ffa19ab1d94,180920276,0,0x0,8
tick,0x7ffa19ab1d94,180935540,0,0x0,8
tick,0x7ffa19ab1d94,180951662,0,0x0,8
tick,0x7ffa19ab1d94,180967042,0,0x0,8
tick,0x7ffa19ab1d94,180983492,0,0x0,8
tick,0x7ffa19ab1d94,180998131,0,0x0,8
tick,0x7ffa19ab1d94,181013717,0,0x0,8
